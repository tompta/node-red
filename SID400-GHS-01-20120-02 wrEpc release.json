[
    {
        "id": "c62c8283.c1917",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4319fbc9.0bc754",
        "type": "tab",
        "label": "SID400 control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1b9fe7eb.6af498",
        "type": "tab",
        "label": "Alarm",
        "disabled": false,
        "info": ""
    },
    {
        "id": "83e8447c.1986b8",
        "type": "tab",
        "label": "GPIO",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c09aa471.ec0fd8",
        "type": "tab",
        "label": "Wr EPC",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b9db4507.e61788",
        "type": "tab",
        "label": "App Settings",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d3a16a66.2fe6b8",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": ""
    },
    {
        "id": "bbd78b0e.446ce8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 0,
                "cy": 4,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "4ee275a2.59831c",
        "type": "ui_tab",
        "z": "",
        "name": "Check In/Out",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7ab37764.765e18",
        "type": "ui_group",
        "z": "",
        "name": "Alarm",
        "tab": "8d7cc430.61d168",
        "order": 1,
        "disp": false,
        "width": "43",
        "collapse": false
    },
    {
        "id": "b5d43103.547fb",
        "type": "ui_group",
        "z": "",
        "name": "Check Out Books",
        "tab": "4ee275a2.59831c",
        "order": 2,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "7f17f961.629938",
        "type": "ui_tab",
        "z": "",
        "name": "RF Settings",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6c0b1173.33f23",
        "type": "ui_group",
        "z": "",
        "name": "Alarm",
        "tab": "d2e57b.deb48a88",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "d2e57b.deb48a88",
        "type": "ui_tab",
        "z": "",
        "name": "App Settings",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6e8aaadb.0eb504",
        "type": "ui_group",
        "z": "",
        "name": "Tag Mask",
        "tab": "d2e57b.deb48a88",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "ea450fb4.c60d1",
        "type": "ui_group",
        "z": "",
        "name": "Save,Restore",
        "tab": "d2e57b.deb48a88",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "99299d70.20ba6",
        "type": "ui_tab",
        "z": "",
        "name": "System",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8a5f59e.5c463a8",
        "type": "ui_group",
        "z": "",
        "name": "System",
        "tab": "99299d70.20ba6",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "3f873bc7.b700a4",
        "type": "ui_group",
        "z": "",
        "name": "Status",
        "tab": "8d7cc430.61d168",
        "order": 3,
        "disp": true,
        "width": "19",
        "collapse": false
    },
    {
        "id": "8d7cc430.61d168",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bcfd68ef.0b8b48",
        "type": "ui_group",
        "z": "",
        "name": "Alarm Key Fobs Read:",
        "tab": "8d7cc430.61d168",
        "order": 2,
        "disp": true,
        "width": "22",
        "collapse": false
    },
    {
        "id": "b49f5713.f00ba8",
        "type": "ui_group",
        "z": "",
        "name": "Check In Books",
        "tab": "4ee275a2.59831c",
        "order": 3,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "1305539.abf98ac",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "4ee275a2.59831c",
        "order": 5,
        "disp": false,
        "width": 20,
        "collapse": false
    },
    {
        "id": "ecf594cd.aa8218",
        "type": "ui_group",
        "z": "",
        "name": "Unknown Tags",
        "tab": "4ee275a2.59831c",
        "order": 4,
        "disp": true,
        "width": "60",
        "collapse": false
    },
    {
        "id": "6e2cc3.4361d33c",
        "type": "ui_group",
        "z": "",
        "name": "Tx Pwr",
        "tab": "7f17f961.629938",
        "order": 1,
        "disp": true,
        "width": 3,
        "collapse": false
    },
    {
        "id": "d938d1bd.6ed83",
        "type": "ui_group",
        "z": "",
        "name": "Tx Pwr",
        "tab": "7f17f961.629938",
        "order": 2,
        "disp": true,
        "width": 3,
        "collapse": false
    },
    {
        "id": "9aba0156.a0273",
        "type": "ui_group",
        "z": "",
        "name": "Tx Pwr",
        "tab": "7f17f961.629938",
        "order": 3,
        "disp": true,
        "width": 3,
        "collapse": false
    },
    {
        "id": "70f23c37.940914",
        "type": "ui_group",
        "z": "",
        "name": "Tx Pwr",
        "tab": "7f17f961.629938",
        "order": 4,
        "disp": true,
        "width": 3,
        "collapse": false
    },
    {
        "id": "c44af199.b7701",
        "type": "ui_group",
        "z": "",
        "name": "Checkout Mask",
        "tab": "d2e57b.deb48a88",
        "order": 2,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "c0c41c3b.81812",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "d9e5e426.72ac88",
        "order": 2,
        "width": 3,
        "height": 1
    },
    {
        "id": "59c3c0e0.8e3ca",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "d9e5e426.72ac88",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "c509d6b8.5783b8",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "d9e5e426.72ac88",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "e02228f9.f0bf68",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "d9e5e426.72ac88",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "5b5fa4fd.8d307c",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "d9e5e426.72ac88",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "ef9136a9.ea3cc8",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "ca16155.99bd4e8",
        "order": 10,
        "width": 5,
        "height": 1
    },
    {
        "id": "66ab43a5.646c0c",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "ca16155.99bd4e8",
        "order": 11,
        "width": 5,
        "height": 1
    },
    {
        "id": "176d173d.96e049",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "ca16155.99bd4e8",
        "order": 12,
        "width": 5,
        "height": 1
    },
    {
        "id": "275bdeab.6939e2",
        "type": "ui_group",
        "z": "",
        "name": "All Tags",
        "tab": "6d547b11.0acd04",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "5e979462.41424c",
        "type": "ui_group",
        "z": "",
        "name": "RF Save/Restore",
        "tab": "7f17f961.629938",
        "order": 7,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "8a6f5635.944de8",
        "type": "ui_group",
        "z": "",
        "name": "Tx Master",
        "tab": "7f17f961.629938",
        "order": 6,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "71d64cdb.f2b804",
        "type": "ui_group",
        "z": "",
        "name": "Scan Status",
        "tab": "4ee275a2.59831c",
        "order": 1,
        "disp": false,
        "width": "60",
        "collapse": false
    },
    {
        "id": "6d547b11.0acd04",
        "type": "ui_tab",
        "z": "",
        "name": "Utilities",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ebbc2eba.28414",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3f873bc7.b700a4",
        "order": 3,
        "width": "20",
        "height": "2"
    },
    {
        "id": "dbf67d06.bf9ff",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3f873bc7.b700a4",
        "order": 6,
        "width": "20",
        "height": 1
    },
    {
        "id": "305d7f13.8d379",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "8a6f5635.944de8",
        "order": 1,
        "width": "1",
        "height": "4"
    },
    {
        "id": "8b4d905f.998e1",
        "type": "ui_spacer",
        "d": true,
        "name": "spacer",
        "group": "8a6f5635.944de8",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "b2c75d5a.5d5cc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e979462.41424c",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "a7544427.65b6f8",
        "type": "debug",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 700,
        "wires": []
    },
    {
        "id": "960f45b6.a641b8",
        "type": "daemon",
        "z": "4319fbc9.0bc754",
        "name": "",
        "command": "/home/pi/SIDS/./SIDS",
        "args": "ttyACM0",
        "autorun": false,
        "cr": true,
        "redo": true,
        "op": "string",
        "closer": "SIGKILL",
        "x": 780,
        "y": 700,
        "wires": [
            [
                "268d50d9.51c6a",
                "52774772.d3b3b8",
                "18bd75de.436f0a",
                "7b82d381.b841fc",
                "65e2b7bb.349e68"
            ],
            [
                "adfc354b.e14278"
            ],
            []
        ]
    },
    {
        "id": "53ffdac5.f587d4",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "InfoAndInventory",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "run /home/pi/SIDS/inventory",
        "payloadType": "str",
        "x": 500,
        "y": 780,
        "wires": [
            [
                "960f45b6.a641b8"
            ]
        ]
    },
    {
        "id": "f4894a62.fee6a8",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "exit",
        "payloadType": "str",
        "x": 510,
        "y": 700,
        "wires": [
            [
                "960f45b6.a641b8"
            ]
        ]
    },
    {
        "id": "be381632.df7208",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 510,
        "y": 660,
        "wires": [
            [
                "960f45b6.a641b8"
            ]
        ]
    },
    {
        "id": "268d50d9.51c6a",
        "type": "file",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "inventory",
        "filename": "/home/pi/SIDS/dat.log",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1140,
        "y": 700,
        "wires": [
            [
                "a7544427.65b6f8"
            ]
        ]
    },
    {
        "id": "878d323e.e8e3d",
        "type": "file",
        "z": "4319fbc9.0bc754",
        "name": "overwrite",
        "filename": "/home/pi/SIDS/dat.log",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1260,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "e31c5484.55b128",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1100,
        "y": 380,
        "wires": [
            [
                "878d323e.e8e3d"
            ]
        ]
    },
    {
        "id": "2f453298.79877e",
        "type": "file",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "deleate",
        "filename": "/home/pi/SIDS/dat.log",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 860,
        "y": 440,
        "wires": [
            [
                "c963bbfb.e23f38"
            ]
        ]
    },
    {
        "id": "284a2bc8.fe0dc4",
        "type": "file",
        "z": "4319fbc9.0bc754",
        "name": "append",
        "filename": "/home/pi/SIDS/dat.log",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1260,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "401fe68e.e1d8c8",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1100,
        "y": 440,
        "wires": [
            [
                "284a2bc8.fe0dc4"
            ]
        ]
    },
    {
        "id": "f13f4d32.e4294",
        "type": "function",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "JsonCat",
        "func": "function evaluateJsonString(string){\n    var start = string.indexOf('{');\n    if(start == -1)\n        return false;\n    let hierarchy = 0;\n    let characters = string.split('');\n    let objects = [];\n    for(var index = start; index < characters.length; index++){\n        let char = characters[index];\n        if(char == '{')\n            hierarchy++;\n        if(char == '}')\n            hierarchy--;\n        if(hierarchy === 0){\n            objects.push(JSON.parse(characters.slice(start, index + 1).join('')));\n            index = start = index + characters.slice(index, characters.length).indexOf('{') - 1;\n            if(start == -1)\n                break;\n        }\n    }\n    return objects;\n}\n\nlet result = evaluateJsonString('This is {\"name\": \"John\", \"age\": 32, \"hobbies\": [\"sport\", \"programming\"]} He goes to {\"name\": \"University\", \"director\": {\"name\": \"Peter\", \"age\": 66, \"hobbies\": [\"drinking coffee\"]}}');\n\nconsole.log(result);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "fb391694.3891e8",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{     \"Operation\": \"Reader Info\",     \"Model\": \"SID400 RS2000\",     \"Reader_ID\": 0,     \"Serial Number\": 358,     \"Bootstrap Version\": \"0x010607F0\",     \"Bootstrap CRC\": \"0x5D59BFCD\",     \"Bootstrap CRC\": \"0x01080CF0\",     \"Application CRC\": \"0xC7085BE1\",     \"Microprocessor ID\": \"0x289B09E0-0x004B4DFF-0x48603528-0x00006D0D\" }      {     \"Operation\": \"Reader Info\",     \"Model\": \"SID400 RS2000\",     \"Reader_ID\": 0,     \"Serial Number\": 358,     \"Bootstrap Version\": \"0x010607F0\",     \"Bootstrap CRC\": \"0x5D59BFCD\",     \"Bootstrap CRC\": \"0x01080CF0\",     \"Application CRC\": \"0xC7085BE1\",     \"Microprocessor ID\": \"0x289B09E0-0x004B4DFF-0x48603528-0x00006D0D\" } ",
        "payloadType": "str",
        "x": 290,
        "y": 1080,
        "wires": [
            [
                "f13f4d32.e4294",
                "ccc50739.7aa0d8",
                "57f86b04.be82e4"
            ]
        ]
    },
    {
        "id": "ab5f8b43.084c28",
        "type": "json",
        "z": "4319fbc9.0bc754",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 610,
        "y": 1180,
        "wires": [
            [
                "a1d68e74.a22bf",
                "f9e8a670.69a088"
            ]
        ]
    },
    {
        "id": "ccc50739.7aa0d8",
        "type": "function",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "",
        "func": "var outputMsgs = [];\nvar words = msg.payload.split(/}!{/);\n\nfor (var w in words) {\n    outputMsgs.push({payload:words[w]});\n    s = String(words[w]);\n    words[w] = Object(s);\n    console.error = s;\n}\n\nreturn [outputMsgs];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 1080,
        "wires": [
            [
                "f275592b.ed57f8"
            ]
        ]
    },
    {
        "id": "f275592b.ed57f8",
        "type": "debug",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "msg",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1120,
        "wires": []
    },
    {
        "id": "57f86b04.be82e4",
        "type": "function",
        "z": "4319fbc9.0bc754",
        "name": "Jcat",
        "func": "    var strIn = msg.payload;\n    let objects = [];\n\n    var start = strIn.indexOf('{');\n    \n    if(start == -1){\n        console.error(\"no start index\");\n        return false;\n    }\n    \n    let hierarchy = 0;\n    let charArray = strIn.split('');                // make character array\n    \n    for(var index = start; index < charArray.length; index++){\n        let char = charArray[index];\n        \n        if(char == '{')\n            hierarchy++;\n            \n        if(char == '}')\n            hierarchy--;\n            \n        if(hierarchy === 0){\n            if(index==start) {                       // no strings\n                console.debug(\"no data\");\n                break;\n            } \n            \n            objects.push(JSON.parse(charArray.slice(start, index + 1).join('')));\n\n            start = index = strIn.indexOf('{',index+1);\n\n            if(start != -1)\n                hierarchy++;\n            else \n                break;\n        }    \n    }\n    msg.payload=objects;\n\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "f275592b.ed57f8",
                "ab5f8b43.084c28"
            ]
        ]
    },
    {
        "id": "90093890.f65358",
        "type": "file in",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "sidRead",
        "filename": "/home/pi/SIDS/dat.log",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 260,
        "y": 1220,
        "wires": [
            [
                "57f86b04.be82e4"
            ]
        ]
    },
    {
        "id": "983296bf.ef1b48",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 1220,
        "wires": [
            [
                "90093890.f65358"
            ]
        ]
    },
    {
        "id": "adfc354b.e14278",
        "type": "debug",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 740,
        "wires": []
    },
    {
        "id": "2c728834.4bef88",
        "type": "file",
        "z": "1b9fe7eb.6af498",
        "d": true,
        "name": "Playme",
        "filename": "/tmp/playme.wav",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 960,
        "y": 660,
        "wires": [
            [
                "15dbe3c3.c1b3ac"
            ]
        ]
    },
    {
        "id": "60556fc4.56cf7",
        "type": "exec",
        "z": "1b9fe7eb.6af498",
        "command": "aplay",
        "addpay": false,
        "append": "/home/pi/SIDS/alarm.wav",
        "useSpawn": "true",
        "timer": ".5",
        "name": "aplay",
        "x": 944,
        "y": 754,
        "wires": [
            [],
            [
                "27a1e34e.17415c"
            ],
            []
        ]
    },
    {
        "id": "94e531b1.f0fb6",
        "type": "function",
        "z": "1b9fe7eb.6af498",
        "name": "Decode Speech",
        "func": "msg.payload = msg.speech;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 708.5,
        "wires": [
            [
                "2c728834.4bef88",
                "60556fc4.56cf7"
            ]
        ]
    },
    {
        "id": "15dbe3c3.c1b3ac",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "d": true,
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 660,
        "wires": []
    },
    {
        "id": "27a1e34e.17415c",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 760,
        "wires": []
    },
    {
        "id": "8e58bd78.b6f0c",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 590,
        "y": 740,
        "wires": [
            [
                "94e531b1.f0fb6"
            ]
        ]
    },
    {
        "id": "f5daf2b8.5215b",
        "type": "ui_slider",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "label": "alarm Volume",
        "tooltip": "",
        "group": "6c0b1173.33f23",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "50",
        "max": "100",
        "step": 1,
        "x": 760,
        "y": 900,
        "wires": [
            [
                "d65f24c6.d06478",
                "1e9bc3a8.8ea0cc"
            ]
        ]
    },
    {
        "id": "6db1e4a9.44d61c",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "51",
        "payloadType": "num",
        "x": 550,
        "y": 860,
        "wires": [
            [
                "f5daf2b8.5215b"
            ]
        ]
    },
    {
        "id": "f645265a.621458",
        "type": "ui_button",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "group": "6c0b1173.33f23",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Test Alarm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 610,
        "y": 660,
        "wires": [
            [
                "94e531b1.f0fb6"
            ]
        ]
    },
    {
        "id": "a1d68e74.a22bf",
        "type": "debug",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "json msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f9e8a670.69a088",
        "type": "function",
        "z": "4319fbc9.0bc754",
        "name": "Jfun msg",
        "func": "\n    var strIn = msg.payload, i;\n    let objects = [];\n\n    var recCnt = msg.payload.length;\n//    console.debug(\"record countn %d\", recCnt);\n\n    for(i=0;i<recCnt;i++){\n    \n        if(msg.payload[i].Operation === \"Inventory\") {\n            \n            for(var i1 = 0; i1 < msg.payload[i][ 'Tag Reads'].length; i1++)\n                objects.push(msg.payload[i][ 'Tag Reads'][i1].EPC);\n        }    \n    }\n    \n    let unique = [...new Set(objects)];\n//    console.debug(\"unique\",unique);\n//    uniques = array.filter((x, i) => i === array.indexOf(x))\n\n    msg.payload = unique;\n\n\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 1180,
        "wires": [
            [
                "f94354b5.9699c8",
                "e85cbfb6.bcfc5",
                "3c354fda.56aec"
            ]
        ]
    },
    {
        "id": "5a6c4d87.bbea54",
        "type": "ui_text",
        "z": "4319fbc9.0bc754",
        "group": "275bdeab.6939e2",
        "order": 1,
        "width": 6,
        "height": "7",
        "name": "All Tags Read",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1140,
        "y": 1320,
        "wires": []
    },
    {
        "id": "f94354b5.9699c8",
        "type": "csv",
        "z": "4319fbc9.0bc754",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 950,
        "y": 1300,
        "wires": [
            [
                "5a6c4d87.bbea54"
            ]
        ]
    },
    {
        "id": "29bf0115.f6d40e",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 950,
        "y": 1340,
        "wires": [
            [
                "5a6c4d87.bbea54"
            ]
        ]
    },
    {
        "id": "f97997d9.ee2e18",
        "type": "link out",
        "z": "4319fbc9.0bc754",
        "name": "alarm",
        "links": [
            "133f8fad.d32ad",
            "9fbf13b9.e3587"
        ],
        "x": 1095,
        "y": 1180,
        "wires": []
    },
    {
        "id": "9311eef3.1bf55",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 450,
        "y": 260,
        "wires": [
            [
                "e23224a2.9a9308",
                "ab0c46af.7ecfa8"
            ]
        ]
    },
    {
        "id": "201df141.47825e",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 450,
        "y": 300,
        "wires": [
            [
                "e23224a2.9a9308",
                "ab0c46af.7ecfa8"
            ]
        ]
    },
    {
        "id": "e23224a2.9a9308",
        "type": "trigger",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "op1": "false",
        "op2": "true",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1",
        "extend": true,
        "units": "s",
        "reset": "false",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "534a6fea.048df"
            ]
        ]
    },
    {
        "id": "ab0c46af.7ecfa8",
        "type": "trigger",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "op1": "false",
        "op2": "",
        "op1type": "bool",
        "op2type": "nul",
        "duration": "1",
        "extend": true,
        "units": "s",
        "reset": "false",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 360,
        "wires": [
            [
                "af94a4c3.be2688",
                "939a4cc8.17b95"
            ]
        ]
    },
    {
        "id": "9fba3654.99fd38",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "10",
        "topic": "",
        "payload": "start",
        "payloadType": "str",
        "x": 230,
        "y": 480,
        "wires": [
            [
                "2cce5332.549e5c",
                "1d3b3a4.ed8f8c6"
            ]
        ]
    },
    {
        "id": "c963bbfb.e23f38",
        "type": "debug",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 360,
        "wires": []
    },
    {
        "id": "d138270f.f1cbc8",
        "type": "delay",
        "z": "4319fbc9.0bc754",
        "name": "invenDly",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 720,
        "y": 520,
        "wires": [
            [
                "c963bbfb.e23f38",
                "25f20bbf.53a764"
            ]
        ]
    },
    {
        "id": "e2d67ff5.3907b",
        "type": "link in",
        "z": "4319fbc9.0bc754",
        "name": "reset",
        "links": [
            "f6c0bd31.4f709"
        ],
        "x": 975,
        "y": 1260,
        "wires": [
            [
                "5a6c4d87.bbea54"
            ]
        ]
    },
    {
        "id": "8cb5ed7f.2aa2a",
        "type": "change",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "clear payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 500,
        "wires": [
            [
                "f6c0bd31.4f709"
            ]
        ]
    },
    {
        "id": "f6c0bd31.4f709",
        "type": "link out",
        "z": "4319fbc9.0bc754",
        "name": "reset",
        "links": [
            "e2d67ff5.3907b",
            "d600264f.c1cb58"
        ],
        "x": 1175,
        "y": 500,
        "wires": []
    },
    {
        "id": "ef89d87b.0cbfc8",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "setAntPwr",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "run /home/pi/SIDS/setPwr",
        "payloadType": "str",
        "x": 520,
        "y": 740,
        "wires": [
            [
                "960f45b6.a641b8"
            ]
        ]
    },
    {
        "id": "79c793ee.8738ec",
        "type": "file in",
        "z": "4319fbc9.0bc754",
        "name": "",
        "filename": "/home/pi/SIDS/config",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1300,
        "y": 320,
        "wires": [
            [
                "bb674310.5ccab"
            ]
        ]
    },
    {
        "id": "39c46ac9.5d2956",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1100,
        "y": 320,
        "wires": [
            [
                "79c793ee.8738ec"
            ]
        ]
    },
    {
        "id": "aaf2896.4f34478",
        "type": "debug",
        "z": "4319fbc9.0bc754",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 320,
        "wires": []
    },
    {
        "id": "bb674310.5ccab",
        "type": "json",
        "z": "4319fbc9.0bc754",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1490,
        "y": 320,
        "wires": [
            [
                "aaf2896.4f34478"
            ]
        ]
    },
    {
        "id": "747ca18b.f4a8e",
        "type": "catch",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1120,
        "y": 380,
        "wires": [
            [
                "38f099f0.9d4926"
            ]
        ]
    },
    {
        "id": "38f099f0.9d4926",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 380,
        "wires": []
    },
    {
        "id": "52774772.d3b3b8",
        "type": "change",
        "z": "4319fbc9.0bc754",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "sidBuf",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c70ca906.1e33d8",
        "type": "change",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "clr sidBuf",
        "rules": [
            {
                "t": "set",
                "p": "sidBuf",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e3ae7aed.c80da8",
        "type": "comment",
        "z": "4319fbc9.0bc754",
        "name": "clear EPC",
        "info": "",
        "x": 1260,
        "y": 500,
        "wires": []
    },
    {
        "id": "5a7bd0fe.57a72",
        "type": "change",
        "z": "4319fbc9.0bc754",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sidBuf",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1280,
        "wires": [
            [
                "57f86b04.be82e4",
                "164474b5.be6d9b"
            ]
        ]
    },
    {
        "id": "fab47886.c86858",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 1280,
        "wires": [
            [
                "5a7bd0fe.57a72"
            ]
        ]
    },
    {
        "id": "f6d1a0ac.45df7",
        "type": "comment",
        "z": "4319fbc9.0bc754",
        "name": "file option",
        "info": "",
        "x": 1180,
        "y": 700,
        "wires": []
    },
    {
        "id": "d2bf75bd.e297b8",
        "type": "comment",
        "z": "4319fbc9.0bc754",
        "name": "file option",
        "info": "",
        "x": 860,
        "y": 400,
        "wires": []
    },
    {
        "id": "35279e23.5d8ac2",
        "type": "comment",
        "z": "4319fbc9.0bc754",
        "name": "file option",
        "info": "",
        "x": 280,
        "y": 1220,
        "wires": []
    },
    {
        "id": "18bd75de.436f0a",
        "type": "debug",
        "z": "4319fbc9.0bc754",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 620,
        "wires": []
    },
    {
        "id": "293a5fc4.3804f",
        "type": "link out",
        "z": "4319fbc9.0bc754",
        "name": "parse out",
        "links": [
            "cc9735fb.f18538"
        ],
        "x": 1095,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e85cbfb6.bcfc5",
        "type": "change",
        "z": "4319fbc9.0bc754",
        "name": "parsed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "parsed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1100,
        "wires": [
            [
                "293a5fc4.3804f"
            ]
        ]
    },
    {
        "id": "475b5b0d.345c84",
        "type": "delay",
        "z": "4319fbc9.0bc754",
        "name": "100ms",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 730,
        "y": 600,
        "wires": [
            [
                "25f20bbf.53a764"
            ]
        ]
    },
    {
        "id": "25f20bbf.53a764",
        "type": "link out",
        "z": "4319fbc9.0bc754",
        "name": "",
        "links": [
            "cc9735fb.f18538"
        ],
        "x": 835,
        "y": 560,
        "wires": []
    },
    {
        "id": "cc9735fb.f18538",
        "type": "link in",
        "z": "4319fbc9.0bc754",
        "name": "state switch",
        "links": [
            "25f20bbf.53a764",
            "293a5fc4.3804f",
            "b4b897a9.4a6b58",
            "e29ae6a5.584a88"
        ],
        "x": 255,
        "y": 580,
        "wires": [
            [
                "1d3b3a4.ed8f8c6"
            ]
        ]
    },
    {
        "id": "1cb35fec.8f76f",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "6",
        "topic": "",
        "payload": "stop",
        "payloadType": "str",
        "x": 230,
        "y": 440,
        "wires": [
            [
                "2cce5332.549e5c",
                "1d3b3a4.ed8f8c6"
            ]
        ]
    },
    {
        "id": "8f89df5a.cf13e",
        "type": "file in",
        "z": "c62c8283.c1917",
        "name": "",
        "filename": "/home/pi/.node-red/projects/SID400-GHS/static/SID420.png",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 520,
        "y": 640,
        "wires": [
            [
                "cf7f6d6.6bd209"
            ]
        ]
    },
    {
        "id": "e2b062a4.eeea9",
        "type": "inject",
        "z": "c62c8283.c1917",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 640,
        "wires": [
            [
                "8f89df5a.cf13e"
            ]
        ]
    },
    {
        "id": "cf7f6d6.6bd209",
        "type": "debug",
        "z": "c62c8283.c1917",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 640,
        "wires": []
    },
    {
        "id": "3e138e20.d3d202",
        "type": "inject",
        "z": "c62c8283.c1917",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 820,
        "wires": [
            [
                "8ebe7b7e.78f8c8"
            ]
        ]
    },
    {
        "id": "633b1e0a.6806a",
        "type": "template",
        "z": "c62c8283.c1917",
        "name": "Image in",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img src=\"data:image/png;base64,{{payload}}\"style=\"width=\"569\" height=\"197\"\"/>",
        "output": "str",
        "x": 420,
        "y": 900,
        "wires": [
            [
                "5286a620.09aac8"
            ]
        ]
    },
    {
        "id": "5286a620.09aac8",
        "type": "ui_template",
        "z": "c62c8283.c1917",
        "group": "8a5f59e.5c463a8",
        "name": "RIO Logo",
        "order": 2,
        "width": "8",
        "height": "5",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 620,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "8ebe7b7e.78f8c8",
        "type": "file in",
        "z": "c62c8283.c1917",
        "name": "",
        "filename": "/home/pi/.node-red/projects/SID400-GHS/static/SwiftIdlogo.jpg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 550,
        "y": 820,
        "wires": [
            [
                "9d43e883.5973c8"
            ]
        ]
    },
    {
        "id": "9d43e883.5973c8",
        "type": "base64",
        "z": "c62c8283.c1917",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 880,
        "y": 820,
        "wires": [
            [
                "633b1e0a.6806a"
            ]
        ]
    },
    {
        "id": "1ba4ae11.96c3b2",
        "type": "comment",
        "z": "c62c8283.c1917",
        "name": "On inject add the groov RIO logo to the dashboard",
        "info": "",
        "x": 310,
        "y": 760,
        "wires": []
    },
    {
        "id": "269c0d07.494992",
        "type": "ui_text",
        "z": "c62c8283.c1917",
        "group": "3f873bc7.b700a4",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "SECONDS",
        "format": "<font size=32>{{value | uppercase}}</font>",
        "layout": "row-center",
        "x": 790,
        "y": 60,
        "wires": []
    },
    {
        "id": "865de8ed.7e5e08",
        "type": "inject",
        "z": "c62c8283.c1917",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 60,
        "wires": [
            [
                "90d0bb37.27a018"
            ]
        ]
    },
    {
        "id": "90d0bb37.27a018",
        "type": "clock-generator",
        "z": "c62c8283.c1917",
        "name": "",
        "topic": "",
        "period": "2",
        "output": "1",
        "x": 410,
        "y": 60,
        "wires": [
            [
                "e57ab8b1.be1668"
            ]
        ]
    },
    {
        "id": "e57ab8b1.be1668",
        "type": "counter",
        "z": "c62c8283.c1917",
        "inc": 1,
        "name": "",
        "x": 600,
        "y": 60,
        "wires": [
            [
                "269c0d07.494992"
            ]
        ]
    },
    {
        "id": "af94a4c3.be2688",
        "type": "link out",
        "z": "1b9fe7eb.6af498",
        "name": "setGPIO",
        "links": [
            "a761c95a.20fe18",
            "27a4d631.d184ea"
        ],
        "x": 775,
        "y": 360,
        "wires": []
    },
    {
        "id": "4dc61e8c.53c0b",
        "type": "function",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "func": "if(msg.topic === \"enable\"){\n    if(msg.payload === true)\n        global.set(\"alarmEn\",true);\n    \n    if(msg.payload === false)\n        global.set(\"alarmEn\",false);\n}\n\nif((msg.topic === \"alarm\") && (global.get('alarmEn') === true))\n    return msg;\n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nglobal.set(\"alarmEn\",true);",
        "finalize": "",
        "x": 620,
        "y": 520,
        "wires": [
            [
                "21cd854c.b96dba",
                "f645265a.621458"
            ]
        ]
    },
    {
        "id": "21cd854c.b96dba",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 520,
        "wires": []
    },
    {
        "id": "939a4cc8.17b95",
        "type": "change",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "alarm",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 440,
        "wires": [
            [
                "4dc61e8c.53c0b"
            ]
        ]
    },
    {
        "id": "438469fb.06c078",
        "type": "ui_switch",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "label": "Enable Siren",
        "tooltip": "",
        "group": "6c0b1173.33f23",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "'green'",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "'red'",
        "x": 450,
        "y": 520,
        "wires": [
            [
                "4dc61e8c.53c0b"
            ]
        ]
    },
    {
        "id": "50ecdc69.7fbf34",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 270,
        "y": 520,
        "wires": [
            [
                "438469fb.06c078"
            ]
        ]
    },
    {
        "id": "e0cb3227.84509",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 950,
        "y": 300,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "f72c5983.c314a8",
        "type": "change",
        "z": "83e8447c.1986b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gpioOp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5c011c98.70f8d4",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "GPIO0 Hi",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 960,
        "y": 340,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "ab630a00.f0d218",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "GPIO1 Hi",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 960,
        "y": 380,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "72e0e90b.922718",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "GPIO0,1 Hi",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 970,
        "y": 420,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "37f1b9dd.ac7a56",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "GPIO0 Lo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 960,
        "y": 460,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "a3d5e3cd.e54d5",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "GPIO1 Lo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "6",
        "payloadType": "num",
        "x": 960,
        "y": 500,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "91a36de0.8a39d",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "GPIO0,1 Lo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "7",
        "payloadType": "num",
        "x": 970,
        "y": 540,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "e4c43b6e.b87448",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "GPIO0 Pulse",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "8",
        "payloadType": "num",
        "x": 970,
        "y": 580,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "32aa9890.693e78",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "GPIO1 Pulse",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "9",
        "payloadType": "num",
        "x": 970,
        "y": 620,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "d72c5b7.2aa80a8",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "GPIO3 Pulse",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 970,
        "y": 660,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "27a4d631.d184ea",
        "type": "link in",
        "z": "83e8447c.1986b8",
        "name": "",
        "links": [
            "af94a4c3.be2688"
        ],
        "x": 395,
        "y": 680,
        "wires": [
            [
                "37750175.49993e"
            ]
        ]
    },
    {
        "id": "7bc93ca2.c2ab44",
        "type": "change",
        "z": "83e8447c.1986b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "10",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 700,
        "wires": [
            [
                "f72c5983.c314a8"
            ]
        ]
    },
    {
        "id": "14fed8dc.af9987",
        "type": "function",
        "z": "83e8447c.1986b8",
        "name": "",
        "func": "if(msg.topic === \"enable\"){\n    if(msg.payload === true)\n        global.set(\"gpioEn\",true);\n    \n    if(msg.payload === false)\n        global.set(\"gpioEn\",false);\n}\n\nif((msg.topic === \"alarm\") && (context.get('gpioEn') === true))\n    return msg;\n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nglobal.set(\"gpioEn\",false);\nglobal.set(\"gpioTm\",3);",
        "finalize": "",
        "x": 740,
        "y": 780,
        "wires": [
            [
                "d4fd02ee.e1296",
                "7bc93ca2.c2ab44"
            ]
        ]
    },
    {
        "id": "d4fd02ee.e1296",
        "type": "debug",
        "z": "83e8447c.1986b8",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 780,
        "wires": []
    },
    {
        "id": "5ea0853d.e7ddec",
        "type": "ui_switch",
        "z": "83e8447c.1986b8",
        "name": "",
        "label": "Enable GPIO",
        "tooltip": "",
        "group": "6c0b1173.33f23",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "enable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "'green'",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "'red'",
        "x": 550,
        "y": 780,
        "wires": [
            [
                "14fed8dc.af9987"
            ]
        ]
    },
    {
        "id": "ff28c4ea.eae338",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 370,
        "y": 780,
        "wires": [
            [
                "5ea0853d.e7ddec"
            ]
        ]
    },
    {
        "id": "37750175.49993e",
        "type": "change",
        "z": "83e8447c.1986b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "alarm",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 680,
        "wires": [
            [
                "14fed8dc.af9987"
            ]
        ]
    },
    {
        "id": "e18feb73.88b608",
        "type": "trigger",
        "z": "4319fbc9.0bc754",
        "name": "",
        "op1": "",
        "op2": "restart",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 530,
        "y": 320,
        "wires": [
            [
                "2cce5332.549e5c"
            ]
        ]
    },
    {
        "id": "b4b897a9.4a6b58",
        "type": "link out",
        "z": "4319fbc9.0bc754",
        "name": "",
        "links": [
            "cc9735fb.f18538"
        ],
        "x": 875,
        "y": 300,
        "wires": []
    },
    {
        "id": "5658388b.8e13c8",
        "type": "debug",
        "z": "4319fbc9.0bc754",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 220,
        "wires": []
    },
    {
        "id": "b057550b.584ac8",
        "type": "ui_text",
        "z": "4319fbc9.0bc754",
        "group": "3f873bc7.b700a4",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "RESYNC",
        "format": "<font size=32>{{value | uppercase}}</font>",
        "layout": "row-center",
        "x": 1080,
        "y": 260,
        "wires": []
    },
    {
        "id": "cd231c5f.3ebd7",
        "type": "counter",
        "z": "4319fbc9.0bc754",
        "inc": 1,
        "name": "",
        "x": 920,
        "y": 260,
        "wires": [
            [
                "b057550b.584ac8"
            ]
        ]
    },
    {
        "id": "93283ae0.d04228",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "InfoAndInventory",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "json {   \"Project\": \"Data Center\",   \"Rev\": 1,   \"Commands\": [     {       \"Rem\": \"Reader Info\",       \"Command\": 3     },     {       \"Rem\": \"Run Inventory\",       \"Command\": 2,       \"Key\": 0,       \"Data0\": 1000,       \"ExData\": 0     }   ] }",
        "payloadType": "str",
        "x": 500,
        "y": 820,
        "wires": [
            [
                "960f45b6.a641b8"
            ]
        ]
    },
    {
        "id": "2cce5332.549e5c",
        "type": "function",
        "z": "4319fbc9.0bc754",
        "name": "",
        "func": "    if(msg.payload === \"stop\")\n        context.set(\"runState\",\"stop\");\n    \n    if(msg.payload === \"start\")\n        context.set(\"runState\",\"start\");\n\n    if(msg.payload === \"restart\"){\n        if(context.get(\"runstate\") === \"start\")\n            msg.payload = \"start\";\n        else\n            msg.payload = null;\n    }else\n            msg.payload = null;\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n    context.set(\"runState\",\"start\");\n",
        "finalize": "",
        "x": 700,
        "y": 340,
        "wires": [
            [
                "cd231c5f.3ebd7",
                "b4b897a9.4a6b58",
                "5658388b.8e13c8"
            ]
        ]
    },
    {
        "id": "a7eaad5e.a7522",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "set-GPO0-Hi",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "run /home/pi/SIDS/set-GPIO1-Hi",
        "payloadType": "str",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "4295a029.bcc02"
            ]
        ]
    },
    {
        "id": "f1008cd9.842c8",
        "type": "inject",
        "z": "83e8447c.1986b8",
        "name": "set-GPO0-Lo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "run /home/pi/SIDS/set-GPIO1-Lo",
        "payloadType": "str",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "4295a029.bcc02"
            ]
        ]
    },
    {
        "id": "4295a029.bcc02",
        "type": "change",
        "z": "83e8447c.1986b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "runFile",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "cc8d7c03.f6d7f",
        "type": "link in",
        "z": "4319fbc9.0bc754",
        "name": "SIDS CMD",
        "links": [
            "b6d4487.488a9b8",
            "e0b875c8.bcdb28"
        ],
        "x": 595,
        "y": 960,
        "wires": [
            [
                "960f45b6.a641b8"
            ]
        ]
    },
    {
        "id": "eb76cf96.c9267",
        "type": "json",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2170,
        "y": 1220,
        "wires": [
            [
                "ef8071c8.919d6",
                "8f385fd6.9be53"
            ]
        ]
    },
    {
        "id": "ef8071c8.919d6",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "add \"json\" to CMD",
        "func": " var strIn = msg.payload;\n msg.payload = \"json \" + strIn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n    flow.set(\"epcWrState\",\"\")",
        "finalize": "",
        "x": 2370,
        "y": 1220,
        "wires": [
            [
                "e0b875c8.bcdb28"
            ]
        ]
    },
    {
        "id": "e0b875c8.bcdb28",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "cc8d7c03.f6d7f"
        ],
        "x": 2535,
        "y": 1220,
        "wires": []
    },
    {
        "id": "a0cd9202.88802",
        "type": "json",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 2370,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "314dffc9.62668",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "Jcat",
        "func": "    var strIn = msg.payload;\n    let objects = [];\n\n    var start = strIn.indexOf('{');\n    \n    if(start == -1){\n        console.error(\"no start index\");\n        flow.set(\"epcCmdState\",\"noStartIndx\")\n        return false;\n    }\n    \n    let hierarchy = 0;\n    let charArray = strIn.split('');                // make character array\n    \n    for(var index = start; index < charArray.length; index++){\n        let char = charArray[index];\n        \n        if(char == '{')\n            hierarchy++;\n            \n        if(char == '}')\n            hierarchy--;\n            \n        if(hierarchy === 0){\n            if(index==start) {                       // no strings\n                console.debug(\"no data\");\n                break;\n            } \n            \n            objects.push(JSON.parse(charArray.slice(start, index + 1).join('')));\n\n            start = index = strIn.indexOf('{',index+1);\n\n            if(start != -1)\n                hierarchy++;\n            else \n                break;\n        }    \n    }\n    msg.payload=objects;\n\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2090,
        "y": 1320,
        "wires": [
            [
                "b9338bae.5b72a8"
            ]
        ]
    },
    {
        "id": "b9338bae.5b72a8",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "Jfun msg",
        "func": "\n    var strIn = msg.payload, i;\n    let objects = [];\n\n    var recCnt = msg.payload.length;\n//    console.debug(\"record countn %d\", recCnt);\n\n    for(i=0;i<recCnt;i++){\n    \n        if(msg.payload[i].Operation === \"Inventory\") {\n            \n            for(var i1 = 0; i1 < msg.payload[i][ 'Tag Reads'].length; i1++)\n                objects.push(msg.payload[i][ 'Tag Reads'][i1].EPC);\n        }    \n    }\n    \n    let unique = [...new Set(objects)];\n//    console.debug(\"unique\",unique);\n//    uniques = array.filter((x, i) => i === array.indexOf(x))\n\n    msg.payload = unique;\n\n\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2240,
        "y": 1320,
        "wires": [
            [
                "a429a6ec.dc9808"
            ]
        ]
    },
    {
        "id": "d6a2f73c.e68758",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sidBuf",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1320,
        "wires": [
            [
                "314dffc9.62668"
            ]
        ]
    },
    {
        "id": "73ee7ae7.256964",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "Display EPC(s)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1260,
        "y": 1320,
        "wires": [
            [
                "9b4fddd0.609a5"
            ]
        ]
    },
    {
        "id": "356349f7.7b6f16",
        "type": "catch",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 2520,
        "y": 660,
        "wires": [
            [
                "14cbe011.67955"
            ]
        ]
    },
    {
        "id": "14cbe011.67955",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2720,
        "y": 660,
        "wires": []
    },
    {
        "id": "1fa5dfd7.32896",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "JSC 500MS Inventory Cmd",
        "rules": [
            {
                "t": "set",
                "p": "sidsCmd",
                "pt": "flow",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set Report Flags\",\"Command\":1,\"Key\":161,\"Data0\":867},{\"Rem\":\"Run Inventory\",\"Command\":2,\"Key\":0,\"Data0\":250,\"ExData\":0}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 1220,
        "wires": [
            [
                "4d43a804.e8d668"
            ]
        ]
    },
    {
        "id": "dda564b6.e2a2c8",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "Quick Inventory",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1240,
        "y": 1240,
        "wires": [
            [
                "1fa5dfd7.32896"
            ]
        ]
    },
    {
        "id": "94fec830.ad7588",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sidsCmd",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 1220,
        "wires": [
            [
                "eb76cf96.c9267"
            ]
        ]
    },
    {
        "id": "c5b709e7.cbd0d8",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "Wr EPC Cmd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"SetVal Tag Op Enable\",\"Command\":1,\"Key\":71,\"Data0\":1},{\"Rem\":\"SetVal Tag Op Write\",\"Command\":1,\"Key\":96,\"Data0\":2},{\"Rem\":\"SetVal Wr Bank EPC\",\"Command\":1,\"Key\":102,\"Data0\":1},{\"Rem\":\"SetVal Wr Word Pointer\",\"Command\":1,\"Key\":103,\"Data0\":1},{\"Rem\":\"SetVal Wr Word Count\",\"Command\":1,\"Key\":104,\"Data0\":7},{\"Rem\":\"Set Write Data 0\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":0,\"Data2\":12288},{\"Rem\":\"Set Write Data 1\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":1,\"Data2\":12288},{\"Rem\":\"Set Write Data 2\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":2,\"Data2\":12288},{\"Rem\":\"Set Write Data 3\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":3,\"Data2\":12288},{\"Rem\":\"Set Write Data 4\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":4,\"Data2\":12288},{\"Rem\":\"Set Write Data 5\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":5,\"Data2\":12288},{\"Rem\":\"Set Write Data 6\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":6,\"Data2\":12288}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 800,
        "wires": [
            [
                "1778a92e.f1f507"
            ]
        ]
    },
    {
        "id": "7c2f24c7.a19cac",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "outEPC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2640,
        "y": 1300,
        "wires": []
    },
    {
        "id": "1778a92e.f1f507",
        "type": "json",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1930,
        "y": 800,
        "wires": [
            [
                "7f5113c.bd145ec",
                "ca1ccf3e.3605"
            ]
        ]
    },
    {
        "id": "ca1ccf3e.3605",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "EPC",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "EpcWrVal",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EPC",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 780,
        "wires": [
            [
                "64d64a69.06ce74"
            ]
        ]
    },
    {
        "id": "7f5113c.bd145ec",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "Cmd Obj to buf",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "CMD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 820,
        "wires": [
            [
                "64d64a69.06ce74"
            ]
        ]
    },
    {
        "id": "64d64a69.06ce74",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "add EPC to Wr Cmd",
        "func": "\n    function addEpc2Cmd() {\n        let cmdObj = context.get(\"CMD\");\n        let epcStr = context.get(\"EPC\");\n        \n        let epcStrArray = epcStr.split('');                // make character array\n        strCnt = epcStrArray.length;\n        if(strCnt !== 29) {\n            console.debug(\"EPC length %d != 29\");\n            return;\n        }\n    \n        i1=0;\n        let epcArray = [];\n        for(i=0;i<29;i++){\n            if(epcStrArray[i] === '-')\n                continue;\n            epcArray[i1++] = epcStrArray[i];\n        }  \n\n        for(i=0;i<6;i++){\n            epcStr = \"\";\n            for(i1=0;i1<4;i1++) {\n                epcStr += epcArray[i1+(i*4)];\n            } \n            cmdObj.Commands[6+i].Data2 = parseInt(epcStr,16);\n        }\n\n        msg.payload = cmdObj;\n \n        context.set(\"EPC\",null);\n        context.set(\"CMD\",null);\n    }\n\n    if(msg.topic === \"EPC\") {\n        strIn = msg.payload;\n        context.set(\"EPC\",msg.payload);\n        if(context.get(\"CMD\") !== null) {\n            addEpc2Cmd();\n            return msg;\n        }\n    }\n\n    if(msg.topic === \"CMD\") {\n        cmdObj = msg.payload;\n        context.set(\"CMD\",cmdObj);\n        if(context.get(\"EPC\") !== null) {   \n            addEpc2Cmd();\n            return msg;\n        }\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n    context.set(\"EPC\",null);\n    context.set(\"CMD\",null);",
        "finalize": "",
        "x": 2340,
        "y": 800,
        "wires": [
            [
                "181705cf.b7db7a",
                "7ffddb1a.e5bae4"
            ]
        ]
    },
    {
        "id": "81cd3334.fd9d5",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "func": "    let charArray = strIn.split('');                // make character array\n    \n    for(var index = start; index < charArray.length; index++){\n        let char = charArray[index];\n        \n        if(char == '{')\n            hierarchy++;\n            \n        if(char == '}')\n            hierarchy--;\n            \n        if(hierarchy === 0){\n            if(index==start) {                       // no strings\n                console.debug(\"no data\");\n                break;\n            } \n            \n            objects.push(JSON.parse(charArray.slice(start, index + 1).join('')));\n\n            start = index = strIn.indexOf('{',index+1);\n\n            if(start != -1)\n                hierarchy++;\n            else \n                break;\n        }    \n    }\n    msg.payload=objects;\n\n    return msg;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2160,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "181705cf.b7db7a",
        "type": "json",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 2610,
        "y": 800,
        "wires": [
            [
                "8fff8869.388698"
            ]
        ]
    },
    {
        "id": "16b964eb.7207bb",
        "type": "ui_text",
        "z": "c09aa471.ec0fd8",
        "group": "ecf594cd.aa8218",
        "order": 1,
        "width": "20",
        "height": "3",
        "name": "EPC Unkown",
        "label": "<font size=\"30\">{{value | uppercase}}</font>",
        "format": "",
        "layout": "row-center",
        "x": 3050,
        "y": 1540,
        "wires": []
    },
    {
        "id": "b9b0cc35.7e65b",
        "type": "csv",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2810,
        "y": 1560,
        "wires": [
            [
                "16b964eb.7207bb"
            ]
        ]
    },
    {
        "id": "efec5f69.e6a91",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "clr unknown epc",
        "links": [
            "805c4d2b.3cd64"
        ],
        "x": 2875,
        "y": 1520,
        "wires": [
            [
                "16b964eb.7207bb"
            ]
        ]
    },
    {
        "id": "83506c1a.65d9b",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "clrInOutEpc",
        "links": [
            "e5f765e.36c7598"
        ],
        "x": 1855,
        "y": 1360,
        "wires": []
    },
    {
        "id": "acc5dbaf.a465e8",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "SET EPC Out",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1450,
        "y": 1480,
        "wires": [
            [
                "4c35e39f.8d728c"
            ]
        ]
    },
    {
        "id": "4c35e39f.8d728c",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "Get EPC IO msk",
        "func": "    function getInOutMsk(outMsk,inMsk) {\n    var i, ret, retInMsk = \"\", retOutMsk = \"\", inMskAry = [], outMskAry = [];\n    let mskObj = [];\n    \n        mskLength = 29;\n    \n        if(outMsk.length !== mskLength)\n            return(false);\n    \n        if(inMsk.length !== mskLength)\n            return(false);\n    \n        inMskAry = inMsk.split('');\n        outMskAry = outMsk.split('');\n    \n        ret = true;\n        for(i=0;i<mskLength;i++) {\n            \n            if((inMskAry[i] === 'X') | (outMskAry[i] === 'X')) {\n                retInMsk += 'X';\n                retOutMsk += 'X';\n                continue;\n            }\n    \n            if(inMskAry[i] !== outMskAry[i]) {\n                retInMsk += inMskAry[i];\n                retOutMsk += outMskAry[i];\n                continue;\n            }\n    \n            if(inMskAry[i] === outMskAry[i]) {\n                retInMsk += 'M';\n                retOutMsk += 'M';\n                continue;\n            }\n        }\n        \n        // \"inMsk\" = mask to use to convert from in EPC to out EPC\n        // \"outMsk\" = mask to use to convert from out EPC to in EPC\n        \n        mskObj.push({\"inMsk\":retOutMsk, \"outMsk\": retInMsk});\n\n\n\n//        mskObj.push(retInMsk);\n//        mskObj.push(retOutMsk);\n//        mskObj.push({\"inMsk\":retInMsk});\n//        mskObj.push({\"outMsk\":retOutMsk});\n        flow.set(\"EpcIOmsk\",mskObj);\n        return(mskObj);\n    }\n    \n    \n    msg.payload = getInOutMsk(global.get(\"tagMsk\"),global.get(\"inMsk\"));\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1710,
        "y": 1480,
        "wires": [
            [
                "a504cd42.a2a5c"
            ]
        ]
    },
    {
        "id": "a504cd42.a2a5c",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 1480,
        "wires": []
    },
    {
        "id": "ef4ca1c5.1cf23",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "In EPC",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2640,
        "y": 1340,
        "wires": []
    },
    {
        "id": "4f5d8b79.171624",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "UnknownEPC",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2420,
        "y": 1400,
        "wires": []
    },
    {
        "id": "201aa01.5032d6",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "Check In Ary",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1270,
        "y": 1600,
        "wires": [
            [
                "364a9a14.88ff36"
            ]
        ]
    },
    {
        "id": "13683a43.a39c96",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "Check Out Ary",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1270,
        "y": 1540,
        "wires": [
            [
                "9348485f.94fae8"
            ]
        ]
    },
    {
        "id": "77ff5131.053fe",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "Mask tag array",
        "func": "var EpcWrStr = \"\", i, i1;\nepcWrObj = [];\n\nfunction mskEPC() {\n    if(msg.topic === \"check in\"){\n\n        inMsk = ((flow.get(\"EpcIOmsk\"))[0].inMsk);\n        if (typeof inMsk !== 'undefined' && inMsk !== null)\n            inMskAry  = inMsk.split('');\n        else\n            return(EpcWrStr);\n\n        inMskLen  = inMskAry.length;\n        if(inMskLen !== 29)\n           return(EpcWrStr);\n\n        EpcInObj = flow.get(\"EpcChkIn\");\n        EpcInCnt = EpcInObj.length;\n       \n        EpcWrStr = \"\";\n        for(i1=0;i1<EpcInCnt;i1++) {\n            EpcWrStr = \"\";\n            \n            EpcIn = EpcInObj[i1];\n            if (typeof EpcIn !== 'undefined' && EpcIn !== null)\n                EpcInAry = EpcIn.split('');\n            else\n                return(EpcWrStr);\n    \n            EpcInLen = EpcInAry.length;\n            if(EpcInLen !== 29)\n                return(EpcWrStr);\n            \n            for(i=0;i<EpcInLen;i++){\n            \n                if(inMskAry[i] === 'M'){\n                    EpcWrStr += EpcInAry[i];            // if 'M' leave original\n                    continue;\n                }\n    \n                if(inMskAry[i] === 'X'){\n                    EpcWrStr += EpcInAry[i];            // if 'X' leave original\n                    continue; \n                }\n                \n                EpcWrStr += inMskAry[i];                // replace anyting else\n            }\n            epcWrObj.push(EpcWrStr);\n        }\n        return(epcWrObj);\n    }\n    \n    if(msg.topic === \"check out\"){\n        \n        outMsk = ((flow.get(\"EpcIOmsk\"))[0].outMsk);\n        if (typeof outMsk !== 'undefined' && outMsk !== null)\n            outMskAry  = outMsk.split('');\n        else\n            return(EpcWrStr);\n\n        outMskLen  = outMskAry.length;\n        if(outMskLen !== 29)\n           return(EpcWrStr);\n\n        EpcOutObj = flow.get(\"EpcChkOut\");\n        EpcOutCnt = EpcOutObj.length;\n       \n        EpcWrStr = \"\";\n        for(i1=0;i1<EpcOutCnt;i1++) {\n            EpcWrStr = \"\";\n            \n            EpcOut = EpcOutObj[i1];\n            if (typeof EpcOut !== 'undefined' && EpcOut !== null)\n                EpcOutAry = EpcOut.split('');\n            else\n                return(EpcWrStr);\n    \n            EpcOutLen = EpcOutAry.length;\n            if(EpcOutLen !== 29)\n                return(EpcWrStr);\n            \n            for(i=0;i<EpcOutLen;i++){\n            \n                if(outMskAry[i] === 'M'){\n                    EpcWrStr += EpcOutAry[i];            // if 'M' leave original\n                    continue;\n                }\n    \n                if(outMskAry[i] === 'X'){\n                    EpcWrStr += EpcOutAry[i];            // if 'X' leave original\n                    continue; \n                }\n                \n                EpcWrStr += outMskAry[i];                // replace anyting else\n            }\n            epcWrObj.push(EpcWrStr);\n        }\n        return(epcWrObj);\n    }\n}\n\n    msg.payload = mskEPC();\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 1560,
        "wires": [
            [
                "5bcc99ce.87d9c8"
            ]
        ]
    },
    {
        "id": "34d5dc84.28b514",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2380,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4ce8caa7.5044a4",
        "type": "ui_button",
        "z": "c09aa471.ec0fd8",
        "name": "check in 1",
        "group": "b49f5713.f00ba8",
        "order": 2,
        "width": "30",
        "height": "8",
        "passthru": false,
        "label": "<font size=\"20\">{{value | uppercase}}</font>",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "EPCin0",
        "payloadType": "flow",
        "topic": "epcWr",
        "x": 3040,
        "y": 1060,
        "wires": [
            [
                "ad9360f9.2c0ed"
            ]
        ]
    },
    {
        "id": "a3267924.fd67c8",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "EPCin0",
        "payloadType": "str",
        "x": 2810,
        "y": 1060,
        "wires": [
            [
                "4ce8caa7.5044a4"
            ]
        ]
    },
    {
        "id": "2075c5f3.83fb8a",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "EPCin1",
        "payloadType": "str",
        "x": 2810,
        "y": 1100,
        "wires": [
            [
                "5ffb417e.c0397"
            ]
        ]
    },
    {
        "id": "b9e29046.f7514",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "EPCin2",
        "payloadType": "str",
        "x": 2810,
        "y": 1140,
        "wires": [
            [
                "5da4965.44d5068"
            ]
        ]
    },
    {
        "id": "61f16e50.5bc6",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "Clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 2810,
        "y": 1020,
        "wires": [
            [
                "4ce8caa7.5044a4",
                "5ffb417e.c0397",
                "5da4965.44d5068"
            ]
        ]
    },
    {
        "id": "5ffb417e.c0397",
        "type": "ui_button",
        "z": "c09aa471.ec0fd8",
        "name": "check in 2",
        "group": "b49f5713.f00ba8",
        "order": 3,
        "width": "30",
        "height": "8",
        "passthru": false,
        "label": "<font size=\"30\">{{value | uppercase}}</font>",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "EPCin1",
        "payloadType": "flow",
        "topic": "epcWr",
        "x": 3040,
        "y": 1100,
        "wires": [
            [
                "ad9360f9.2c0ed"
            ]
        ]
    },
    {
        "id": "5da4965.44d5068",
        "type": "ui_button",
        "z": "c09aa471.ec0fd8",
        "name": "check in 3",
        "group": "b49f5713.f00ba8",
        "order": 4,
        "width": "30",
        "height": "8",
        "passthru": false,
        "label": "<font size=\"30\">{{value | uppercase}}</font>",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "EPCin2",
        "payloadType": "flow",
        "topic": "epcWr",
        "x": 3040,
        "y": 1140,
        "wires": [
            [
                "ad9360f9.2c0ed"
            ]
        ]
    },
    {
        "id": "a54bbcd3.2b45",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "func": "    var msg0 = null, msg1 = null, msg2 = null;\n    let payLoad0 = [], payLoad1 = [], payLoad2 = [];\n   \n    let msgObj = msg.payload;\n    let ObjCnt = msgObj.length;\n//    console.debug(\"msgObj\", msgObj, ObjCnt);\n\n    var msgArray = Array.from(msg.payload);\n    var msgAryCnt = msgArray.length;\n    \n    payLoad0.push(msgArray[0]);\n    payLoad1.push(msgArray[1]);\n    payLoad2.push(msgArray[2]);\n\n    if (msgAryCnt > 0){\n        flow.set(\"EPCin0\",msgArray[0]);\n        msg0 = {payload : payLoad0};\n    }else{\n        flow.set(\"EPCin0\",\"\");\n        msg0 = {payload : null};\n    }\n\n    if (msgAryCnt > 1){\n        flow.set(\"EPCin1\",msgArray[1]);\n        msg1 = {payload : payLoad1};\n    }else{\n        flow.set(\"EPCin1\",\"\");\n        msg1 = {payload : null};\n    }\n\n    if (msgAryCnt > 2){\n        flow.set(\"EPCin2\",msgArray[2]);\n        msg2 = {payload : payLoad2};\n    }else{\n        flow.set(\"EPCin2\",\"\");\n        msg2 = {payload : null};\n    }\n\n    return [msg0, msg1, msg2];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n    flow.set(\"EPCin0\",\"\");\n    flow.set(\"EPCin1\",\"\");\n    flow.set(\"EPCin2\",\"\");\n",
        "finalize": "",
        "x": 2800,
        "y": 1200,
        "wires": [
            [
                "4ce8caa7.5044a4"
            ],
            [
                "5ffb417e.c0397",
                "592e340d.8f12fc"
            ],
            [
                "5da4965.44d5068",
                "8dfcce88.5d0d3"
            ]
        ]
    },
    {
        "id": "9348485f.94fae8",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "Check EPC(s) Out",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "EpcChkOut",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "check out",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 1540,
        "wires": [
            [
                "3da97ea7.459de2",
                "4c35e39f.8d728c"
            ]
        ]
    },
    {
        "id": "364a9a14.88ff36",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "Check EPC(s) In",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "EpcChkIn",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "check in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 1600,
        "wires": [
            [
                "3da97ea7.459de2",
                "4c35e39f.8d728c"
            ]
        ]
    },
    {
        "id": "d82b4d99.72138",
        "type": "ui_button",
        "z": "c09aa471.ec0fd8",
        "name": "check out 1",
        "group": "b5d43103.547fb",
        "order": 2,
        "width": "30",
        "height": "8",
        "passthru": false,
        "label": "<font size=\"30\">{{value | uppercase}}</font>",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "EPCout0",
        "payloadType": "flow",
        "topic": "epcWr",
        "x": 3050,
        "y": 1340,
        "wires": [
            [
                "46d9cf6e.8743f"
            ]
        ]
    },
    {
        "id": "f916a621.fc38f8",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "EPCout0",
        "payloadType": "str",
        "x": 2800,
        "y": 1340,
        "wires": [
            [
                "d82b4d99.72138"
            ]
        ]
    },
    {
        "id": "92a4d167.9fb02",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "EPCout1",
        "payloadType": "str",
        "x": 2800,
        "y": 1380,
        "wires": [
            [
                "1e63aafc.c28655"
            ]
        ]
    },
    {
        "id": "9f19bbe9.b8d8e8",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "EPCout2",
        "payloadType": "str",
        "x": 2800,
        "y": 1420,
        "wires": [
            [
                "6ba02d13.27a6c4"
            ]
        ]
    },
    {
        "id": "fc8a55e2.71e8c8",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "Clear",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "payload",
        "payloadType": "msg",
        "x": 2810,
        "y": 1300,
        "wires": [
            [
                "d82b4d99.72138",
                "1e63aafc.c28655",
                "6ba02d13.27a6c4"
            ]
        ]
    },
    {
        "id": "1e63aafc.c28655",
        "type": "ui_button",
        "z": "c09aa471.ec0fd8",
        "name": "check out 2",
        "group": "b5d43103.547fb",
        "order": 3,
        "width": "30",
        "height": "8",
        "passthru": false,
        "label": "<font size=\"30\">{{value | uppercase}}</font>",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "EPCout1",
        "payloadType": "flow",
        "topic": "epcWr",
        "x": 3050,
        "y": 1380,
        "wires": [
            [
                "46d9cf6e.8743f"
            ]
        ]
    },
    {
        "id": "6ba02d13.27a6c4",
        "type": "ui_button",
        "z": "c09aa471.ec0fd8",
        "name": "check out 3",
        "group": "b5d43103.547fb",
        "order": 4,
        "width": "30",
        "height": "8",
        "passthru": false,
        "label": "<font size=\"30\">{{value | uppercase}}</font>",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "EPCout2",
        "payloadType": "flow",
        "topic": "epcWr",
        "x": 3050,
        "y": 1420,
        "wires": [
            [
                "46d9cf6e.8743f"
            ]
        ]
    },
    {
        "id": "5a46ea5f.b067a4",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "func": "    var msg0 = null, msg1 = null, msg2 = null;\n    let payLoad0 = [], payLoad1 = [], payLoad2 = [];\n   \n    let msgObj = msg.payload;\n    let ObjCnt = msgObj.length;\n\n    var msgArray = Array.from(msg.payload);\n    var msgAryCnt = msgArray.length;\n    \n    payLoad0.push(msgArray[0]);\n    payLoad1.push(msgArray[1]);\n    payLoad2.push(msgArray[2]);\n    \n    if (msgAryCnt > 0){\n        flow.set(\"EPCout0\",msgArray[0]);\n        msg0 = {payload : payLoad0};\n    }else{\n        flow.set(\"EPCout0\",\"\");\n        msg0 = {payload : null};\n    }\n\n    if (msgAryCnt > 1){\n        flow.set(\"EPCout1\",msgArray[1]);\n        msg1 = {payload : payLoad1};\n    }else{\n        flow.set(\"EPCout1\",\"\");\n        msg1 = {payload : null};\n    }\n\n    if (msgAryCnt > 2){\n        flow.set(\"EPCout2\",msgArray[2]);\n        msg2 = {payload : payLoad2};\n    }else{\n        flow.set(\"EPCout2\",\"\");\n        msg2 = {payload : null};\n    }\n\n    return [msg0, msg1, msg2];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n    flow.set(\"EPCout0\",\"\");\n    flow.set(\"EPCout1\",\"\");\n    flow.set(\"EPCout2\",\"\");\n",
        "finalize": "",
        "x": 2800,
        "y": 1480,
        "wires": [
            [
                "d82b4d99.72138"
            ],
            [
                "1e63aafc.c28655"
            ],
            [
                "6ba02d13.27a6c4"
            ]
        ]
    },
    {
        "id": "ec9ffa2e.df19b8",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "clr check out",
        "links": [
            "805c4d2b.3cd64"
        ],
        "x": 2835,
        "y": 1260,
        "wires": [
            [
                "d82b4d99.72138",
                "1e63aafc.c28655",
                "6ba02d13.27a6c4"
            ]
        ]
    },
    {
        "id": "592e340d.8f12fc",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "outEPC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1220,
        "wires": []
    },
    {
        "id": "8dfcce88.5d0d3",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "outEPC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ad9360f9.2c0ed",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "Check In",
        "links": [
            "3a78d1f9.18bb7e"
        ],
        "x": 3175,
        "y": 1100,
        "wires": []
    },
    {
        "id": "46d9cf6e.8743f",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "Check out",
        "links": [
            "889a5551.44f8d8",
            "c7f4485a.9403a8"
        ],
        "x": 3195,
        "y": 1380,
        "wires": []
    },
    {
        "id": "3da97ea7.459de2",
        "type": "delay",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1690,
        "y": 1560,
        "wires": [
            [
                "77ff5131.053fe"
            ]
        ]
    },
    {
        "id": "bba2959a.802108",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "Mask EPC global",
        "func": "function mskEPC() {\n\n    var inMskAry  = null;\n    var outMskAry = null;\n    var EpcChkIn  = null;\n    var EpcChkOut = null;\n\n    if((global.get(\"inMsk\") !== \"undefined\"))\n        inMskAry  = (global.get(\"inMsk\")).split('');\n\n    if((global.get(\"outMsk\") !== \"undefined\"))\n        outMskAry = (global.get(\"outMsk\")).split('');\n        \n    if((global.get(\"EpcChkIn\") !== \"undefined\"))\n        EpcChkIn  = (flow.get(\"EpcChkIn\")).split('');\n        \n    if((global.get(\"EpcChkOut\") !== \"undefined\"))\n        EpcChkOut = (flow.get(\"EpcChkOut\")).split('');\n\n\n    var EpcWrStr = \"\";\n    \n    if(msg.topic === \"check in\"){\n        var inMskLen  = inMskAry.length;\n        \n        if(flow.get(\"EpcChkIn\") === \"\")\n            return(null);\n            \n        console.debug(\"EpcChkIn cnt %d\", (flow.get(\"EpcChkIn\")).length);\n\n    return(\"\");\n    \n        var EpcInLen  = (flow.get(\"EpcChkIn\")).split('');\n        \n        if((inMskLen !== 29) | (EpcInLen !== 29))\n            return(EpcWrStr);\n        \n        for(i=0;i<EpcInLen;i++){\n        \n            if(inMskAry[i] === 'M'){\n                EpcWrStr += EpcChkIn[i];            // if 'M' leave original\n                continue;\n            }\n\n            if(inMskAry[i] === 'X'){\n                EpcWrStr += EpcChkIn[i];            // if 'X' leave original\n                continue; \n            }\n            \n            EpcWrStr += inMskAry[i];                // replace anyting else\n        }\n        return(EpcWrStr);\n    }\n    \n    if(msg.topic === \"check out\"){\n        var outMskLen  = outMskAry.length;\n\n        if(flow.get(\"EpcChkOut\") === null)\n            return(null);\n\n        var EpcOutLen  = (flow.get(\"EpcChkOut\")).split('');\n        \n        if((outMskLen !== 29) | (EpcOutLen !== 29))\n            return(EpcWrStr);\n        \n        for(i=0;i<EpcOutLen;i++){\n        \n            if(outMskAry[i] === 'M'){\n                EpcWrStr += EpcChkOut[i];            // if 'M' leave original\n                continue;\n            }\n\n            if(inMskAry[i] === 'X'){\n                EpcWrStr += EpcChkOut[i];            // if 'X' leave original\n                continue; \n            }\n            \n            EpcWrStr += outMskAry[i];                // replace anyting else\n        }\n        return(EpcWrStr);\n    }\n}\n\n    var mskStr =  mskEPC();\n    \n//    console.debug(\"mskEpc %s\",mskStr)\n    msg.payload = mskStr;\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1410,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "ccc9466d.02d898",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "Mask EPC global",
        "func": "var EpcWrStr = \"\";\nepcWrObj = [];\n\nfunction mskEPC() {\n\n    if(msg.topic === \"check in\"){\n        \n        inMsk = ((flow.get(\"EpcIOmsk\"))[0].inMsk);\n        if (typeof inMsk !== 'undefined' && inMsk !== null)\n            inMskAry  = inMsk.split('');\n        else\n            return(null);\n\n\n        EpcIn = flow.get(\"EpcChkIn\")[0];\n        if (typeof EpcIn !== 'undefined' && EpcIn !== null)\n            EpcInAry  = EpcIn.split('');\n        else\n            return(null);\n\n        var inMskLen  = inMskAry.length;\n        var EpcInLen  = EpcInAry.length;\n        \n        if((inMskLen !== 29) | (EpcInLen !== 29))\n            return(EpcWrStr);\n        \n        for(i=0;i<EpcInLen;i++){\n        \n            if(inMskAry[i] === 'M'){\n                EpcWrStr += EpcChkIn[i];            // if 'M' leave original\n                continue;\n            }\n\n            if(inMskAry[i] === 'X'){\n                EpcWrStr += EpcChkIn[i];            // if 'X' leave original\n                continue; \n            }\n            \n            EpcWrStr += inMskAry[i];                // replace anyting else\n        }\n        return(EpcWrStr);\n        \n        \n    }\n    \n    if(msg.topic === \"check out\"){\n\n        outMsk = ((flow.get(\"EpcIOmsk\"))[0].outMsk);\n        if (typeof outMsk !== 'undefined' && outMsk !== null)\n            outMskAry  = outMsk.split('');\n        else\n            return(EpcWrStr);\n\n        outMskLen  = outMskAry.length;\n        if(outMskLen !== 29)\n           return(EpcWrStr);\n\n        epcWrObj  = flow.get(\"EpcChkOut\");\n        EpcOutCnt = epcWrObj.length;\n        \n        console.debug(\"EpcOutAry\", epcWrObj, EpcOutCnt);\n        \n        EpcWrStr = \"\";\n        for(i1=0;i1<EpcOutCnt;i1++) {\n            EpcOut = EpcOutAry[i];\n            \n            console.debug(\"EpcChkOut\",EpcOut);\n            \n            if (typeof EpcOut !== 'undefined' && EpcOut !== null)\n                EpcOutAry  = EpcOut.split('');\n            else\n                return(EpcWrStr);\n    \n            EpcOutLen  = EpcOutAry.length;\n            if(EpcOutLen !== 29)\n                return(EpcWrStr);\n            \n            for(i=0;i<EpcOutLen;i++){\n            \n                if(outMskAry[i] === 'M'){\n                    EpcWrStr += EpcOutAry[i];            // if 'M' leave original\n                    continue;\n                }\n    \n                if(outMskAry[i] === 'X'){\n                    EpcWrStr += EpcOutAry[i];            // if 'X' leave original\n                    continue; \n                }\n                \n                EpcWrStr += outMskAry[i];                // replace anyting else\n            }\n            epcWrObj.push(EpcWrStr);\n        }\n        console.debug(\"EpcWrStr \", EpcWrStr);\n        return(epcWrObj); \n    }\n}\n\nvar mskStr =  mskEPC();\n//    epcWrObj.push(\"payload\",EpcWrStr);\n    \n    console.debug(\"epcWrObj \",epcWrObj);\n    \n    msg.payload = epcWrObj;\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1650,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "a429a6ec.dc9808",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "Jfun msg 1",
        "func": "function cmpArray(tstAarray,mskArray) {\nvar i, ret, msgArrayCnt; \n\n    if((msgArrayCnt = msg1Array.length) != mskArray.length)\n        return false;\n\n    ret = true;\n    for(i=0;i<msgArrayCnt-1;i++) {\n        \n        if(mskArray[i] === 'X') {\n            continue;\n        }\n        \n        if(mskArray[i] === tstAarray[i]) {\n            continue;\n        }\n            \n        ret = false;    \n    }\n    \n    return ret;\n}\n\nvar chkIn  = null;\nvar chkOut = null;\nvar epcXx  = null;\n\n\nvar outMsk = global.get(\"tagMsk\"), inMsk = global.get(\"wrMsk\"), ret = true;\n    let outMskAry = outMsk.split('');\n    let inMskAry = inMsk.split('');\n    \n    var mskOutArray = [];\n    var mskInArray = [];\n    var mskXxArray = [];\n\n    recCnt = msg.payload.length;  \n    \n    if(recCnt === 0){\n\n        chkIn  = null;\n        chkOut = null;\n        epcXx  = null;\n\n        ret = false;\n        \n    }else{\n        cntT = cntF = 0;\n        for(i=0;i<recCnt;i++) {\n            strIn = msg.payload[i];\n            msg1Array = strIn.split('');\n            \n            if(cmpArray(msg1Array,outMskAry) === true){\n                mskOutArray.push(msg.payload[i]);\n            }else{\n                if(cmpArray(msg1Array,inMskAry) === true){\n                    mskInArray.push(msg.payload[i]);\n                }else{\n                    mskXxArray.push(msg.payload[i]);\n               }\n            } \n        }\n    }   \n\n    flow.set(\"EpcChkOut\",mskOutArray);\n    flow.set(\"EpcChkIn\",mskInArray);\n    flow.set(\"EpcChkXx\",mskXxArray);\n\n    chkIn  = { payload:mskInArray };\n    chkOut = { payload:mskOutArray};\n    epcXx  = { payload:mskXxArray };\n   \n    return [chkIn, chkOut, epcXx];\n    \n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2410,
        "y": 1320,
        "wires": [
            [
                "7c2f24c7.a19cac",
                "a54bbcd3.2b45"
            ],
            [
                "ef4ca1c5.1cf23",
                "5a46ea5f.b067a4"
            ],
            [
                "b9b0cc35.7e65b",
                "4f5d8b79.171624"
            ]
        ]
    },
    {
        "id": "52dcbff.07fdf4",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "Mask EPC global",
        "func": "var EpcWrStr = \"\";\nepcWrObj = [];\n\nfunction mskEPC() {\n\n    if(msg.topic === \"check in\"){\n        \n        inMsk = ((flow.get(\"EpcIOmsk\"))[0].inMsk);\n        if (typeof inMsk !== 'undefined' && inMsk !== null)\n            inMskAry  = inMsk.split('');\n        else\n            return(null);\n\n\n        EpcIn = flow.get(\"EpcChkIn\")[0];\n        if (typeof EpcIn !== 'undefined' && EpcIn !== null)\n            EpcInAry  = EpcIn.split('');\n        else\n            return(null);\n\n        var inMskLen  = inMskAry.length;\n        var EpcInLen  = EpcInAry.length;\n        \n        if((inMskLen !== 29) | (EpcInLen !== 29))\n            return(EpcWrStr);\n        \n        for(i=0;i<EpcInLen;i++){\n        \n            if(inMskAry[i] === 'M'){\n                EpcWrStr += EpcChkIn[i];            // if 'M' leave original\n                continue;\n            }\n\n            if(inMskAry[i] === 'X'){\n                EpcWrStr += EpcChkIn[i];            // if 'X' leave original\n                continue; \n            }\n            \n            EpcWrStr += inMskAry[i];                // replace anyting else\n        }\n        return(EpcWrStr);\n     }\n    \n    if(msg.topic === \"check out\"){\n\n        outMsk = ((flow.get(\"EpcIOmsk\"))[0].outMsk);\n        if (typeof outMsk !== 'undefined' && outMsk !== null)\n            outMskAry  = outMsk.split('');\n        else\n            return(null);\n\n        EpcOut = flow.get(\"EpcChkOut\")[0];\n        if (typeof EpcOut !== 'undefined' && EpcOut !== null)\n            EpcOutAry  = EpcOut.split('');\n        else\n            return(null);\n\n        console.debug(\"EpcOut\",EpcOut);\n        \n        var outMskLen  = outMskAry.length;\n        var EpcOutLen  = EpcOutAry.length;\n        \n        if((outMskLen !== 29) | (EpcOutLen !== 29))\n            return(EpcWrStr);\n        \n        for(i=0;i<EpcOutLen;i++){\n        \n            if(outMskAry[i] === 'M'){\n                EpcWrStr += EpcChkOut[i];            // if 'M' leave original\n                continue;\n            }\n\n            if(outMskAry[i] === 'X'){\n                EpcWrStr += EpcChkOut[i];            // if 'X' leave original\n                continue; \n            }\n            \n            EpcWrStr += outMskAry[i];                // replace anyting else\n        }\n        return(EpcWrStr);\n    }\n}\n\nvar mskStr =  mskEPC();\n//    epcWrObj.push(\"payload\",EpcWrStr);\n    \n    console.debug(\"EpcWrStr \",EpcWrStr);\n    \n    msg.payload = EpcWrStr;\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1890,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "3a78d1f9.18bb7e",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "ad9360f9.2c0ed"
        ],
        "x": 1235,
        "y": 1900,
        "wires": [
            [
                "8b5b194f.c64a58",
                "bb2128d0.457698"
            ]
        ]
    },
    {
        "id": "889a5551.44f8d8",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "46d9cf6e.8743f"
        ],
        "x": 3255,
        "y": 1380,
        "wires": [
            [
                "809c94c0.548a88"
            ]
        ]
    },
    {
        "id": "809c94c0.548a88",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3350,
        "y": 1380,
        "wires": []
    },
    {
        "id": "c7f4485a.9403a8",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "46d9cf6e.8743f"
        ],
        "x": 1235,
        "y": 1780,
        "wires": [
            [
                "6ee830dc.0684b",
                "bb2128d0.457698"
            ]
        ]
    },
    {
        "id": "6d23069.dee57f8",
        "type": "delay",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1610,
        "y": 1840,
        "wires": [
            [
                "28b84dbe.687942"
            ]
        ]
    },
    {
        "id": "28b84dbe.687942",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "check in/out mask",
        "func": "var EpcWrStr = \"\", i, i1;\nepcWrObj = [];\n\nfunction mskEPC() {\n\n    if(msg.topic === \"check in\"){\n\n        inMsk = ((flow.get(\"EpcIOmsk\"))[0].inMsk);\n        if (typeof inMsk !== 'undefined' && inMsk !== null)\n            inMskAry  = inMsk.split('');\n        else\n            return(EpcWrStr);\n            \n        inMskLen  = inMskAry.length;\n        if(inMskLen !== 29)\n           return(EpcWrStr);\n\n        EpcWrStr = \"\";\n \n        EpcIn = msg.payload;\n        if (typeof EpcIn !== 'undefined' && EpcIn !== null)\n            EpcInAry = EpcIn.split('');\n        else\n            return(EpcWrStr);\n\n        EpcInLen = EpcInAry.length;\n        if(EpcInLen !== 29)\n            return(EpcWrStr);\n\n        for(i=0;i<EpcInLen;i++){\n        \n            if(inMskAry[i] === 'M'){\n                EpcWrStr += EpcInAry[i];            // if 'M' leave original\n                continue;\n            }\n\n            if(inMskAry[i] === 'X'){\n                EpcWrStr += EpcInAry[i];            // if 'X' leave original\n                continue; \n            }\n            \n            EpcWrStr += inMskAry[i];                // replace anyting else\n        }\n\n        return(EpcWrStr);\n    }\n    \n    if(msg.topic === \"check out\"){\n        \n        outMsk = ((flow.get(\"EpcIOmsk\"))[0].outMsk);\n        if (typeof outMsk !== 'undefined' && outMsk !== null)\n            outMskAry  = outMsk.split('');\n        else\n            return(EpcWrStr);\n\n        outMskLen  = outMskAry.length;\n        if(outMskLen !== 29)\n           return(EpcWrStr);\n\n        EpcWrStr = \"\";\n \n        EpcOut = msg.payload;\n        if (typeof EpcOut !== 'undefined' && EpcOut !== null)\n            EpcOutAry = EpcOut.split('');\n        else\n            return(EpcWrStr);\n       \n        EpcOutLen = EpcOutAry.length;\n        if(EpcOutLen !== 29)\n            return(EpcWrStr);\n\n        for(i=0;i<EpcOutLen;i++){\n        \n            if(outMskAry[i] === 'M'){\n                EpcWrStr += EpcOutAry[i];            // if 'M' leave original\n                continue;\n            }\n\n            if(outMskAry[i] === 'X'){\n                EpcWrStr += EpcOutAry[i];            // if 'X' leave original\n                continue; \n            }\n            \n            EpcWrStr += outMskAry[i];                // replace anyting else\n        }\n        return(EpcWrStr);\n    }\n}\n\n    flow.set(\"EpcVal\",msg.payload);\n    msg.payload = mskEPC();\n    flow.set(\"EpcWrVal\", msg.payload);\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n\n    flow.set(\"EpcWrVal\",\"\");\n    flow.set(\"EpcVal\",\"\");\n",
        "finalize": "",
        "x": 1810,
        "y": 1840,
        "wires": [
            [
                "9b089d2c.f1072"
            ]
        ]
    },
    {
        "id": "6ee830dc.0684b",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "Check EPC Out",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "check out",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1780,
        "wires": [
            [
                "6d23069.dee57f8"
            ]
        ]
    },
    {
        "id": "a042bab4.8cc298",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "name": "debug msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 1760,
        "wires": []
    },
    {
        "id": "8b5b194f.c64a58",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "Check EPC In",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "check in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1900,
        "wires": [
            [
                "6d23069.dee57f8"
            ]
        ]
    },
    {
        "id": "73f7611f.0a97e",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "stateJmp",
        "links": [
            "cd1137e9.656338"
        ],
        "x": 2215,
        "y": 1800,
        "wires": []
    },
    {
        "id": "1411b1cc.d5f40e",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "ba6d5663.155a08"
        ],
        "x": 1255,
        "y": 1040,
        "wires": [
            [
                "47c8de77.b424f"
            ]
        ]
    },
    {
        "id": "47c8de77.b424f",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "JSC tag select only",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"E_IPJ_KEY_SELECT_ENABLE, true\",\"Command\":4,\"Key\":80,\"Data0\":0,\"Data1\":0,\"Data2\":1},{\"Rem\":\"E_IPJ_KEY_SELECT_TARGET, E_IPJ_SELECT_TARGET_SL_FLAG\",\"Command\":4,\"Key\":81,\"Data0\":0,\"Data1\":0,\"Data2\":4},{\"Rem\":\"E_IPJ_KEY_SELECT_ACTION, E_IPJ_SELECT_ACTION_ASLINVA_DSLINVB\",\"Command\":4,\"Key\":82,\"Data0\":0,\"Data1\":0,\"Data2\":0},{\"Rem\":\"E_IPJ_KEY_SELECT_MEM_BANK, E_IPJ_MEM_BANK_EPC\",\"Command\":4,\"Key\":83,\"Data0\":0,\"Data1\":0,\"Data2\":1},{\"Rem\":\"E_IPJ_KEY_SELECT_POINTER, 0x20\",\"Command\":4,\"Key\":84,\"Data0\":0,\"Data1\":0,\"Data2\":32},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_LENGTH, 96\",\"Command\":4,\"Key\":85,\"Data0\":0,\"Data1\":0,\"Data2\":96},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0xE280\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":0,\"Data2\":57984},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0x1160\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":1,\"Data2\":4448},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0x6001\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":2,\"Data2\":24577},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0x0205\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":3,\"Data2\":517},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0x0792\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":4,\"Data2\":1938},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0xD233\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":5,\"Data2\":53811},{\"Rem\":\"E_IPJ_KEY_INVENTORY_SELECT_FLAG, E_IPJ_INVENTORY_SELECT_FLAG_SL\",\"Command\":1,\"Key\":65,\"Data0\":3}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 1000,
        "wires": [
            [
                "4d242db7.f73674"
            ]
        ]
    },
    {
        "id": "b472181a.e884c8",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "JSC tag select disable",
        "rules": [
            {
                "t": "set",
                "p": "sidsCmd",
                "pt": "flow",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"E_IPJ_KEY_SELECT_ENABLE, false\",\"Command\":1,\"Key\":80,\"Data0\":1},{\"Rem\":\"E_IPJ_KEY_INVENTORY_SELECT_FLAG, E_IPJ_INVENTORY_SELECT_FLAG_SL\",\"Command\":1,\"Key\":65,\"Data0\":3},{\"Rem\":\"E_IPJ_KEY_TAG_OPERATION, 0\",\"Command\":1,\"Key\":96,\"Data0\":0}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 1140,
        "wires": [
            [
                "ad29da10.2bb518"
            ]
        ]
    },
    {
        "id": "c33ce311.afee2",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "No Start Index",
        "info": "",
        "x": 1910,
        "y": 1280,
        "wires": []
    },
    {
        "id": "7e3edb42.b3ad24",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "EPC Deselect",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1250,
        "y": 1140,
        "wires": [
            [
                "b472181a.e884c8"
            ]
        ]
    },
    {
        "id": "434e79a9.eb0ec8",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "EPC Select",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1210,
        "y": 1000,
        "wires": [
            [
                "47c8de77.b424f"
            ]
        ]
    },
    {
        "id": "8f385fd6.9be53",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2330,
        "y": 1260,
        "wires": []
    },
    {
        "id": "1ce4e5c5.65048a",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "EpcWrVal = E280-1160-6000-1000-2000-1234",
        "rules": [
            {
                "t": "set",
                "p": "EpcWrVal",
                "pt": "flow",
                "to": "E280-1160-6000-1000-2000-1234",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 680,
        "wires": [
            [
                "c5b709e7.cbd0d8"
            ]
        ]
    },
    {
        "id": "f46a131c.a2e8b",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "check in",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1150,
        "y": 680,
        "wires": [
            [
                "1ce4e5c5.65048a"
            ]
        ]
    },
    {
        "id": "4d242db7.f73674",
        "type": "json",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1590,
        "y": 1000,
        "wires": [
            [
                "4b2c3da3.0d4504",
                "932129d3.200e88"
            ]
        ]
    },
    {
        "id": "be53a158.305c4",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "add EPC to Select Cmd",
        "func": "\n    function addEpc2Cmd() {\n        let cmdObj = context.get(\"CMD\");\n        let epcStr = context.get(\"EPC\");\n        \n        let epcStrArray = epcStr.split('');                // make character array\n        strCnt = epcStrArray.length;\n        if(strCnt !== 29) {\n            console.debug(\"EPC length %d != 29\");\n            return;\n        }\n    \n        i1=0;\n        let epcArray = [];\n        for(i=0;i<29;i++){\n            if(epcStrArray[i] === '-')\n                continue;\n            epcArray[i1++] = epcStrArray[i];\n        }  \n\n        for(i=0;i<6;i++){\n            epcStr = \"\";\n            for(i1=0;i1<4;i1++) {\n                epcStr += epcArray[i1+(i*4)];\n            } \n            cmdObj.Commands[6+i].Data2 = parseInt(epcStr,16);\n        }\n\n        msg.payload = cmdObj;\n \n        context.set(\"EPC\",null);\n        context.set(\"CMD\",null);\n    }\n\n    if(msg.topic === \"EPC\") {\n        strIn = msg.payload;\n        context.set(\"EPC\",msg.payload);\n        if(context.get(\"CMD\") !== null) {\n            addEpc2Cmd();\n            return msg;\n        }\n    }\n\n    cmdObj = msg.payload;\n    context.set(\"CMD\",cmdObj);\n    if(context.get(\"EPC\") !== null) {   \n        addEpc2Cmd();\n        return msg;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n    context.set(\"EPC\",null);\n    context.set(\"CMD\",null);",
        "finalize": "",
        "x": 1990,
        "y": 1000,
        "wires": [
            [
                "e331fdc.ccb54",
                "ae59adfd.3d778"
            ]
        ]
    },
    {
        "id": "932129d3.200e88",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "Cmd Obj to buf",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "CMD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 1020,
        "wires": [
            [
                "be53a158.305c4"
            ]
        ]
    },
    {
        "id": "4b2c3da3.0d4504",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "EPC",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "EpcVal",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EPC",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 980,
        "wires": [
            [
                "be53a158.305c4"
            ]
        ]
    },
    {
        "id": "ae59adfd.3d778",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "select command",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2200,
        "y": 900,
        "wires": []
    },
    {
        "id": "e331fdc.ccb54",
        "type": "json",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 2190,
        "y": 1000,
        "wires": [
            [
                "cbc43d7a.52911"
            ]
        ]
    },
    {
        "id": "e4246b61.072138",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "EpcWrVal",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 800,
        "wires": [
            [
                "c5b709e7.cbd0d8"
            ]
        ]
    },
    {
        "id": "17e554a3.f912db",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "Wr EPC from flow.EpcWrVal",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1500,
        "y": 860,
        "wires": [
            [
                "c5b709e7.cbd0d8"
            ]
        ]
    },
    {
        "id": "c9135549.400e58",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "set flow.EpcWrVal",
        "info": "",
        "x": 1810,
        "y": 1800,
        "wires": []
    },
    {
        "id": "9c9bf957.e22f98",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "set flow.EpcVal to current EPC",
        "info": "",
        "x": 1820,
        "y": 1880,
        "wires": []
    },
    {
        "id": "6260ddbf.06d364",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "Set mask for EPC Wr",
        "info": "",
        "x": 1420,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7b82d381.b841fc",
        "type": "link out",
        "z": "4319fbc9.0bc754",
        "d": true,
        "name": "SIDS Cmd Rsp",
        "links": [
            "e14b2963.f0e388"
        ],
        "x": 1095,
        "y": 580,
        "wires": []
    },
    {
        "id": "8fff8869.388698",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "epcCmdState = wrEpc",
        "rules": [
            {
                "t": "set",
                "p": "epcCmdState",
                "pt": "flow",
                "to": "wrEpc",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2800,
        "y": 800,
        "wires": [
            [
                "ef8071c8.919d6"
            ]
        ]
    },
    {
        "id": "cbc43d7a.52911",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "epcCmdState = setupEpcWr",
        "rules": [
            {
                "t": "set",
                "p": "epcCmdState",
                "pt": "flow",
                "to": "setupEpcWr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2400,
        "y": 1000,
        "wires": [
            [
                "ef8071c8.919d6"
            ]
        ]
    },
    {
        "id": "bed39603.abd1b8",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "msg.payload to flow.sidsCmd",
        "info": "",
        "x": 2020,
        "y": 1180,
        "wires": []
    },
    {
        "id": "3e1be015.5deaa",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "epc init",
        "links": [],
        "x": 855,
        "y": 1060,
        "wires": []
    },
    {
        "id": "75eb7e7b.153ef",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "epc Wr",
        "links": [
            "f92bfd7b.67616",
            "29879104.06f99e"
        ],
        "x": 855,
        "y": 1220,
        "wires": []
    },
    {
        "id": "ba6d5663.155a08",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "epc select",
        "links": [
            "1411b1cc.d5f40e",
            "3eaaf2fd.8b2e6e"
        ],
        "x": 855,
        "y": 1180,
        "wires": []
    },
    {
        "id": "994b484b.e689e8",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "epc inventory",
        "links": [
            "773c4210.a63fcc",
            "33d2c7fc.915258",
            "431dd915.2d3e68"
        ],
        "x": 855,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ad3c7cad.713e2",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "epc display",
        "links": [
            "2deb8e3c.8b0f12"
        ],
        "x": 855,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ea7246a.b99f5b8",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "epc deselect",
        "links": [
            "bf8524a2.e971d8",
            "33a9a5a2.c1e4ea"
        ],
        "x": 855,
        "y": 1260,
        "wires": []
    },
    {
        "id": "3df6c10d.4a82be",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "Init",
        "info": "",
        "x": 970,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1046e171.3bfb6f",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "SIDS Cmd Rsp",
        "info": "",
        "x": 280,
        "y": 1340,
        "wires": []
    },
    {
        "id": "ca4fb7b4.f5ae58",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "stateJmp",
        "info": "",
        "x": 360,
        "y": 1260,
        "wires": []
    },
    {
        "id": "7f966417.bdda6c",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "inventory",
        "info": "",
        "x": 980,
        "y": 1100,
        "wires": []
    },
    {
        "id": "148164d9.8d6eab",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "epc dsp array",
        "info": "",
        "x": 990,
        "y": 1140,
        "wires": []
    },
    {
        "id": "906f89f7.6109d8",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "epc select",
        "info": "",
        "x": 980,
        "y": 1180,
        "wires": []
    },
    {
        "id": "d4a87a3b.a77d58",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "epc Wr",
        "info": "",
        "x": 970,
        "y": 1220,
        "wires": []
    },
    {
        "id": "22d1d95e.ddee26",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "epc deselect ",
        "info": "",
        "x": 990,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e14b2963.f0e388",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "SIDS Cmd Rsp",
        "links": [
            "7b82d381.b841fc"
        ],
        "x": 375,
        "y": 1300,
        "wires": [
            [
                "c4f3e6b4.fdcc38"
            ]
        ]
    },
    {
        "id": "8ac7c4b4.cb4568",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "stop",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "stop",
        "payload": "false",
        "payloadType": "bool",
        "x": 350,
        "y": 1180,
        "wires": [
            [
                "a9837ac9.4e37e8",
                "24449c1d.9f9b14",
                "7ce06c1.0f9ab94"
            ]
        ]
    },
    {
        "id": "3615e78f.727c08",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "start",
        "payload": "true",
        "payloadType": "bool",
        "x": 350,
        "y": 1140,
        "wires": [
            [
                "a9837ac9.4e37e8",
                "24449c1d.9f9b14",
                "7ce06c1.0f9ab94"
            ]
        ]
    },
    {
        "id": "a9837ac9.4e37e8",
        "type": "clock-generator",
        "z": "c09aa471.ec0fd8",
        "name": "1 sec clock",
        "topic": "timer",
        "period": "1",
        "output": "1",
        "x": 530,
        "y": 1100,
        "wires": [
            [
                "24449c1d.9f9b14",
                "7ce06c1.0f9ab94"
            ]
        ]
    },
    {
        "id": "4d43a804.e8d668",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "epcCmdState = runInventory",
        "rules": [
            {
                "t": "set",
                "p": "epcCmdState",
                "pt": "flow",
                "to": "runInventory",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 1220,
        "wires": [
            [
                "94fec830.ad7588"
            ]
        ]
    },
    {
        "id": "773c4210.a63fcc",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "994b484b.e689e8"
        ],
        "x": 1295,
        "y": 1200,
        "wires": [
            [
                "1fa5dfd7.32896"
            ]
        ]
    },
    {
        "id": "bf8524a2.e971d8",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "ea7246a.b99f5b8",
            "af9eb2a6.0c89"
        ],
        "x": 1295,
        "y": 1100,
        "wires": [
            [
                "b472181a.e884c8"
            ]
        ]
    },
    {
        "id": "cd1137e9.656338",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "stateJmp",
        "links": [
            "73f7611f.0a97e"
        ],
        "x": 455,
        "y": 1260,
        "wires": [
            [
                "24449c1d.9f9b14",
                "7ce06c1.0f9ab94"
            ]
        ]
    },
    {
        "id": "efdec3c7.88a88",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "clr check in",
        "links": [
            "805c4d2b.3cd64"
        ],
        "x": 2835,
        "y": 980,
        "wires": [
            [
                "5da4965.44d5068",
                "4ce8caa7.5044a4",
                "5ffb417e.c0397"
            ]
        ]
    },
    {
        "id": "2deb8e3c.8b0f12",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "epc display array",
        "links": [
            "ad3c7cad.713e2"
        ],
        "x": 1475,
        "y": 1360,
        "wires": [
            [
                "9b4fddd0.609a5"
            ]
        ]
    },
    {
        "id": "f92bfd7b.67616",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "75eb7e7b.153ef"
        ],
        "x": 1575,
        "y": 760,
        "wires": [
            [
                "c5b709e7.cbd0d8"
            ]
        ]
    },
    {
        "id": "5bcc99ce.87d9c8",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "epcCmdState = runDspEpcAry",
        "rules": [
            {
                "t": "set",
                "p": "epcCmdState",
                "pt": "flow",
                "to": "runDspEpcAry",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 1560,
        "wires": [
            [
                "34d5dc84.28b514"
            ]
        ]
    },
    {
        "id": "9b089d2c.f1072",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "epcCmdState = gotEpc",
        "rules": [
            {
                "t": "set",
                "p": "epcCmdState",
                "pt": "flow",
                "to": "gotEpc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 1800,
        "wires": [
            [
                "73f7611f.0a97e"
            ]
        ]
    },
    {
        "id": "ad29da10.2bb518",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "epcCmdState = deSelEpc",
        "rules": [
            {
                "t": "set",
                "p": "epcCmdState",
                "pt": "flow",
                "to": "deSelEpc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1140,
        "wires": [
            [
                "94fec830.ad7588"
            ]
        ]
    },
    {
        "id": "24e7832c.290f3c",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "stateJmp",
        "info": "",
        "x": 2320,
        "y": 1800,
        "wires": []
    },
    {
        "id": "9b4fddd0.609a5",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "epcCmdState = runDspEpcAry",
        "rules": [
            {
                "t": "set",
                "p": "epcCmdState",
                "pt": "flow",
                "to": "runDspEpcAry",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 1320,
        "wires": [
            [
                "d6a2f73c.e68758",
                "83506c1a.65d9b"
            ]
        ]
    },
    {
        "id": "24449c1d.9f9b14",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "func": "const inits = 1, invStrt = 2, invWt = 3, invDspAry = 4, invDspWt = 5, epcPick = 6 ;\nconst epcPickWt = 7, epcInvChrg = 8, epcSelWrWt = 9, epcWrWt = 10, epcDeSelWt = 11, epcWrClrWt = 12;\nconst epcInvClr = 13, epcInvClrWt = 14, epcInvClr1 = 15, epcInvClrWt1 = 16, runCmdWt = 17;\nconst epcWrInv = 18, epcWrInvWt = 19;\n\n\nvar state       = context.get(\"stateSav\");\nvar tmr         = context.get(\"stateTmr\");\nvar wtTm        = context.get(\"stateWtTm\");\nvar sidsCmdRsp  = context.get(\"sidsCmdRsp\");\nvar invenCnt    = context.get(\"invenCnt\");\n\n//console.debug(state);\n\nvar init = null;\nvar inventory = null;\nvar dspEpcs = null;\nvar selEpc = null;\nvar wrEpc = null;\nvar deSelEpc = null;\nvar runCmd = null;\nvar status = null;\n\n\n    if(msg.topic === \"SidsCmdRsp\") {\n        console.debug(\"msg.topic \");\n        console.debug(msg.topic);\n        sidsCmdRsp = true;\n    }\n\n    if(msg.topic === \"timer\") {\n        if(msg.payload === true) {\n            tmr++;\n            context.set(\"stateTmr\",tmr)\n//            console.debug(\"timer %d\", tmr);\n        }\n    }\n    \n    if(msg.topic === \"start\") {\n        context.set(\"runState\",\"run\");\n        state = inits;\n    }\n    \n    if(msg.topic === \"stop\"){\n        context.set(\"runState\",\"stop\");\n        state = inits;\n    }\n\n    if(msg.topic === \"step\"){\n        context.set(\"runState\",\"step\");\n    }\n    \n    if(context.get(\"runstate\") === \"stop\")\n        return;\n\n    switch(state) {\n\n        case inits:                                                 // state 1, set out 0, clears all\n            console.debug(\"inits\");\n            status = {payload:\"initializing\"};\n            flow.set(\"epcCmdState\",\"\");\n            state = inits;\n            \n            if(context.get(\"runState\") === \"stop\") {\n                console.debug(\"stop\");\n                break;\n            }\n            \n            state = invStrt;\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = runCMd = status = null;\n            break; \n\n        case invStrt:                                               // 2\n            console.debug(\"invStrt\");\n\n            runF = global.get(\"runFile\");\n            if(runF !== null) {                                     // state 2, state 0,  set out 6, clears 1\n                console.debug(\"runFile\")\n                runCmd = {payload : runF};\n                global.set(\"runFile\",null);\n                state = runCmdWt;\n                break;\n            }\n\n            status = {payload:\"scanning\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            inventory = { payload:\"start inventory\" };\n            tmr = 0;\n            state = invWt;\n            break;\n\n       case invWt:                                                  // 3\n            console.debug(\"invWt\");\n\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                console.debug(\"epcCmdState noStartIndx\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invStrt;\n                break;\n            }\n            \n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast invWt\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invDspAry;\n                break;\n           }\n\n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                console.debug(\"epcCmdState runInventory\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invDspAry;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"run inverntory time out\");\n            break;\n            \n        case invDspAry:                                             // 4\n            console.debug(\"invDspAry\");\n            status = {payload:\"updating screen\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            dspEpcs = { payload:\"dspEpcs\" };\n            tmr = 0;\n            state = invDspWt;\n            break;\n            \n        case invDspWt:                                              // 5\n            console.debug(\"invDspWt\");\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            \n            if(invenCnt !== 0) {\n                console.debug(\"invenCnt %d\",invenCnt);\n                invenCnt--;    \n                tmr = 0;\n                state = invStrt;\n                break;\n            }\n            \n            if(flow.get(\"epcCmdState\")  === \"runDspEpcAry\") {\n                console.debug(\"epcCmdState invDspWt\");\n\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                state = epcPick;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"invDspWt time out\");\n            break;\n\n        case epcPick:                                                // 6, setup for epc check in/out to be selected\n            console.debug(\"epcPick\");\n            status = {payload:\"select tags\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            \n            tmr = 0;\n            state = epcPickWt;\n            break;\n            \n        case epcPickWt:                                              // 7, wait for epc to be selected from dashboard\n            console.debug(\"epcPickWt\");\n\n            runF = global.get(\"runFile\");\n            if(runF !== null) {                                     // if got a command, run it\n                console.debug(\"runCmd\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                runCmd = {payload : runF};\n                global.set(\"runFile\",null);\n                state = runCmdWt;\n                break;\n            }\n\n            if(flow.get(\"epcCmdState\")  === \"gotEpc\") {\n                console.debug(\"epcCmdState gotEpc\");\n                flow.set(\"epcCmdState\",\"\");\n                tmr = 0;\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                status = {payload:\"writing tag\"};\n                wrEpc = {payload:\"epcWr\"};\n                state = epcWrWt;\n                break;\n            }\n           \n            if(tmr <= 6)                                            // max wait for complete\n                break;\n\n            state = invStrt;\n            console.debug(\"restart inventory\");\n            break;\n\n        case epcWrWt:                                                   // 9\n            console.debug(\"epcWrWt\");\n\n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast epcWrWt\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                deSelEpc = { payload:\"deSelEpc\" }\n//                state = epcDeSelWt;\n                state = epcWrInv;\n                break;\n           }\n\n            if(flow.get(\"epcCmdState\")  === \"wrEpc\") {\n                console.debug(\"epcCmdState wrEpc\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n//                state = epcDeSelWt;\n                state = epcWrInv;\n                break;\n            }\n         \n            if(tmr <= 4)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"wrEpc time out\");\n            break;\n\n        case epcWrInv:\n            console.debug(\"epcWrInv\");\n//            flow.set(\"epcCmdState\",\"\");\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            inventory = { payload:\"epc clear inventory\" };\n            tmr = 0;\n            state = epcWrInvWt;\n            break;\n\n        case epcWrInvWt:\n\n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"epcWrInvWt\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = inits;\n                break;\n           }\n\n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                console.debug(\"epcCmdState runInventory\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = inits;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"run inverntory time out\");\n            break;\n\n \n \n \n \n \n \n        case epcDeSelWt:                                                    // 10\n            console.debug(\"epcDeSelWt\")\n            \n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast epcDeSelWt\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr;\n                break;\n            }\n\n            if(flow.get(\"epcCmdState\")  === \"deSelEpc\") {\n                console.debug(\"epcCmdState deSelEpc\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr;\n                break;\n            }\n\n            if(tmr <= 2)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"epcDeSelWt time out\")\n            break;\n\n        case epcInvClr:\n            console.debug(\"clrInv\");\n\n            if(tmr < 1)                                // max wait for complete\n                break;\n                \n            inventory = { payload:\"clear inventory\" };\n            tmr = 0;\n            state = epcInvClrWt;\n            break;\n\n        case epcInvClrWt:\n            console.debug(\"clrInvWt\");\n\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                console.debug(\"epcCmdState noStartIndx1\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr1;\n                break;\n            }\n            \n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast invWt1\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr1;\n                break;\n           }\n\n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                console.debug(\"epcCmdState runInventory\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr1;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"run inverntory time out\");\n            break;\n           \n        case epcInvClr1:\n            console.debug(\"clrInv1\");\n\n            if(tmr < 1)                                // max wait for complete\n                break;\n                \n            inventory = { payload:\"clear inventory1\" };\n            tmr = 0;\n            state = epcInvClrWt1;\n            break;\n\n        case epcInvClrWt1:\n            console.debug(\"clrInvWt1\");\n\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                console.debug(\"epcCmdState noStartIndx\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = inits;\n                break;\n            }\n            \n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast invWt\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = inits;\n                break;\n           }\n\n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                console.debug(\"epcCmdState runInventory\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = inits;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"run inverntory time out\");\n            break;\n\n        case runCmdWt:                                                      // 12\n            console.debug(\"setConfig\")\n            status = {payload:\"updating configuration\"};\n           \n            runCmd = null;\n            state = invStrt;\n            invenCnt = 2;\n            break;\n\n        default:\n            console.debug(\"default\")\n            state = inits;\n            console.debug(\"State Error\")\n            break;\n    }\n    \n    context.set(\"stateSav\",state);\n    context.set(\"stateTmr\", tmr); \n    context.set(\"stateWtTm\",wtTm);\n    context.set(\"sidsCmdRsp\",sidsCmdRsp);\n    context.set(\"invenCnt\",invenCnt);\n\n    return [ init,inventory,dspEpcs,selEpc,wrEpc,deSelEpc,runCmd,status ];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nconst inits = 1, invStrt = 2, invWt = 3, invDspAry = 4, invDspWt = 5, epcSel = 6 ;\nconst epcSelWt = 7, gotEpcSetWt = 8, epcWr = 9, epcWrWt = 10, epcDeSel = 11 ;\nconst epcDeSelWt = 12, epcWrClr = 13, epcWrClrWt =14;\n\n\n    context.set(\"stateSav\",inits);\n    context.set(\"runState\",\"stop\");\n    context.set(\"stateTmr\",0);\n    context.set(\"stateWtTm\",0);\n    context.set(\"sidsCmdRsp\",false);\n    context.set(\"invenCnt\",0);\n",
        "finalize": "",
        "x": 680,
        "y": 1600,
        "wires": [
            [
                "3e1be015.5deaa"
            ],
            [
                "994b484b.e689e8"
            ],
            [
                "ad3c7cad.713e2"
            ],
            [
                "ba6d5663.155a08"
            ],
            [
                "75eb7e7b.153ef"
            ],
            [
                "ea7246a.b99f5b8"
            ],
            [
                "701637d2.dbfcd8"
            ],
            [
                "c1f98603.935c38"
            ]
        ]
    },
    {
        "id": "20ad11fa.53016e",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "step",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "step",
        "payload": "true",
        "payloadType": "bool",
        "x": 350,
        "y": 1220,
        "wires": [
            [
                "24449c1d.9f9b14",
                "7ce06c1.0f9ab94"
            ]
        ]
    },
    {
        "id": "184bcdcd.3f65a2",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "name": "SIDS Cmd Rsp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ffd98d8.db7c37",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "epc status",
        "info": "",
        "x": 1200,
        "y": 1420,
        "wires": []
    },
    {
        "id": "10e0ddd6.22a942",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2690,
        "y": 1660,
        "wires": [
            [
                "805c4d2b.3cd64"
            ]
        ]
    },
    {
        "id": "33d2c7fc.915258",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "994b484b.e689e8"
        ],
        "x": 2555,
        "y": 1660,
        "wires": [
            [
                "10e0ddd6.22a942"
            ]
        ]
    },
    {
        "id": "805c4d2b.3cd64",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "links": [
            "ec9ffa2e.df19b8",
            "efdec3c7.88a88",
            "efec5f69.e6a91"
        ],
        "x": 2815,
        "y": 1660,
        "wires": []
    },
    {
        "id": "897f723e.f50c6",
        "type": "ui_template",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "group": "1305539.abf98ac",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<style>\n.masonry-container {\n    width: 1080px;\n    height:600; \n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "x": 680,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "b4dd8783.feb398",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "context file read",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1160,
        "y": 1360,
        "wires": [
            [
                "c6d04d4a.0082d",
                "9c2039af.60d3e8"
            ]
        ]
    },
    {
        "id": "722c920c.eeef0c",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "set context from context file",
        "info": "",
        "x": 910,
        "y": 1360,
        "wires": []
    },
    {
        "id": "4ff4db12.bb6714",
        "type": "file in",
        "z": "b9db4507.e61788",
        "name": "",
        "filename": "/home/pi/SIDS/context",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 1360,
        "wires": [
            [
                "5cc694c2.e0bfac"
            ]
        ]
    },
    {
        "id": "5cc694c2.e0bfac",
        "type": "json",
        "z": "b9db4507.e61788",
        "name": "Json to Obj",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1770,
        "y": 1360,
        "wires": [
            [
                "2d24918e.072e9e"
            ]
        ]
    },
    {
        "id": "2d24918e.072e9e",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "set context",
        "func": "\nfunction setPort(cmd, data) {\n    switch(cmd){\n        \n        case 'setMsk':\n            global.set(\"tagMsk\",data);\n            break;\n\n        case 'setWrMsk':\n            global.set(\"wrMsk\",data);\n            break;\n\n        case 'alarmVol':\n            global.set(\"alarmVol\",data);\n            break;\n\n        case 'alarmEn':\n            global.set(\"alarmEn\",data);\n            break;\n\n        case 'gpioEn':\n            global.set(\"gpioEn\",data);\n            break;\n\n        case 'gpioTm':\n            global.set(\"gpioTm\",data);\n            break;\n\n        case 'PxPwr':\n            global.set(\"PxPwr\",data);\n            break;\n\n        case 'P1pwr':\n            global.set(\"P1pwr\",data);\n            break;\n\n        case 'P1en':\n            global.set(\"P1en\",data);\n            break;\n\n        case 'P2pwr':\n            global.set(\"P2pwr\",data);\n            break;\n\n        case 'P2en':\n            global.set(\"P2en\",data);\n            break;\n    \n        case 'P3pwr':\n            global.set(\"P3pwr\",data);\n            break;\n\n        case 'P3en':\n            global.set(\"P3en\",data);\n            break;\n    \n        case 'P4pwr':\n            global.set(\"P4pwr\",data);\n            break;\n\n        case 'P4en':\n            global.set(\"P4en\",data);\n            break;\n        \n        default:\n                console.error(\"bad command %s\",cmd);\n    } \n}\n\nvar cmdCnt = msg.payload[0].Commands.length;\nvar cmdsAryObj = Array.from(msg.payload[0].Commands);\n\n//    console.debug(\"cmdsAry type %s\", typeof cmdsAryObj);\n//    console.debug(\"cmd cnt %d cmds %s\",cmdCnt,cmdsAryObj);\n\n    for(i=0;i<cmdCnt;i++){\n        setPort(cmdsAryObj[i].command,cmdsAryObj[i].data);\n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "\n//global.set(\"P1en\",\"P1 disable\");\n//global.set(\"P1pwr\",0);\n//global.set(\"P2en\",\"P2 disable\");\n//global.set(\"P2pwr\",0);\n//global.set(\"P3en\",\"P3 disable\");\n//global.set(\"P3pwr\",0);\n//global.set(\"P4en\",\"P4 disable\");\n//global.set(\"P4pwr\",0);\n\n            global.set(\"tagMsk\",\"\");\n            global.set(\"inMsk\",\"\");\n            global.set(\"alarmVol\",0);\n            global.set(\"alarmEn\",\"\");\n            global.set(\"gpioEn\",\"\");\n            global.set(\"gpioTm\",\"\");\n            global.set(\"P1pwr\",0);\n            global.set(\"P1en\",\"\");\n            global.set(\"P2pwr\",0);\n            global.set(\"P2en\",\"\");\n            global.set(\"P3pwr\",0);\n            global.set(\"P3en\",\"\");\n            global.set(\"P4pwr\",0);\n            global.set(\"P4en\",\"\");\n",
        "finalize": "",
        "x": 1950,
        "y": 1360,
        "wires": [
            [
                "f0d1d138.8abb"
            ]
        ]
    },
    {
        "id": "59025eaa.a5d23",
        "type": "ui_text_input",
        "z": "b9db4507.e61788",
        "name": "tag wr mask",
        "label": "",
        "tooltip": "",
        "group": "c44af199.b7701",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 1510,
        "y": 1540,
        "wires": [
            [
                "4ed6463e.54ced8"
            ]
        ]
    },
    {
        "id": "5de26379.23beec",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "Init tag mask context",
        "info": "",
        "x": 930,
        "y": 2000,
        "wires": []
    },
    {
        "id": "4ed6463e.54ced8",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "set global wrMsk",
        "func": "\n    var strIn = msg.payload;\n    let objects = [];\n    \n    if(msg.payload === null) {\n      global.set(\"wrMsk\",\"XXXX-XXXX-XXXX-XXXX-XXXX-XXXX\");\n//      global.set(\"wrMsk\",\"E280-1160-6000-XXXX-XXXX-XXXX\");\n    }else{    \n        if(strIn.length === 29)\n            global.set(\"wrMsk\",strIn);\n//        else\n//          global.set(\"wrMsk\",\"XXXX-XXXX-XXXX-XXXX-XXXX-XXXX\");\n//          global.set(\"wrMsk\",\"E280-1160-6000-XXXX-XXXX-XXXX\");\n    }\n    \n    strIn = global.get(\"wrMsk\");\n    \n    objects.push(global.get(\"wrMsk\"));\n\n    msg.payload=objects;\n\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n    if(global.get(\"wrMsk\") === undefined) \n        global.set(\"wrMsk\",\"XXXX-XXXX-XXXX-XXXX-XXXX-XXXX\");\n//      global.set(\"wrMsk\",\"E280-1160-6000-XXXX-XXXX-XXXX\");\n",
        "finalize": "",
        "x": 1710,
        "y": 1540,
        "wires": [
            [
                "47d3a80a.784d28"
            ]
        ]
    },
    {
        "id": "47d3a80a.784d28",
        "type": "debug",
        "z": "b9db4507.e61788",
        "name": "tag wr mask",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 1540,
        "wires": []
    },
    {
        "id": "30d69f9f.26d6e",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "tagMsk Init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "tagMsk",
        "payloadType": "flow",
        "x": 1120,
        "y": 2000,
        "wires": [
            [
                "aa7bc51c.09bc98"
            ]
        ]
    },
    {
        "id": "aa7bc51c.09bc98",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "global.set.tagMsk",
        "func": "\n    var strIn = msg.payload;\n    let objects = [];\n    \n    if(msg.payload === null) {\n        global.set(\"tagMsk\",\"XXXX-XXXX-XXXX-XXXX-XXXX-XXXX\");\n        strIn = flow.get(\"tagMsk\");\n    }else{    \n        if(strIn.length === 29)\n            global.set(\"tagMsk\",strIn);\n        else\n            global.set(\"tagMsk\",\"XXXX-XXXX-XXXX-XXXX-XXXX-XXXX\");\n            //                 E280-1160-6000-XXXX-XXXX-XXXX\n    }\n    \n    objects.push(global.get(\"tagMsk\"));\n\n    msg.payload=objects;\n\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n//    var myTagMsk = flow.get(\"tagMask\");\n    \n\n//    flow.set(\"tagMask\",myTagMsk);\n",
        "finalize": "",
        "x": 1310,
        "y": 2000,
        "wires": [
            [
                "73cf1bd3.504934"
            ]
        ]
    },
    {
        "id": "73cf1bd3.504934",
        "type": "debug",
        "z": "b9db4507.e61788",
        "name": "tag mask init",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 2000,
        "wires": []
    },
    {
        "id": "9ddb5af7.2e8628",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "Init tag mask context and dashboard",
        "info": "",
        "x": 740,
        "y": 1940,
        "wires": []
    },
    {
        "id": "12aff034.faa86",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "get wrMsk",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "wrMsk",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1540,
        "wires": [
            [
                "59025eaa.a5d23"
            ]
        ]
    },
    {
        "id": "c6c95093.b4b28",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 1540,
        "wires": [
            [
                "12aff034.faa86",
                "ea937c3c.53cb4"
            ]
        ]
    },
    {
        "id": "d85c9818.9c48d8",
        "type": "link in",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "157e6dff.299d42",
            "f0d1d138.8abb"
        ],
        "x": 1175,
        "y": 1600,
        "wires": [
            [
                "12aff034.faa86",
                "ea937c3c.53cb4"
            ]
        ]
    },
    {
        "id": "32d60659.54ad4a",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "dashUpFromContext",
        "info": "",
        "x": 2210,
        "y": 1360,
        "wires": []
    },
    {
        "id": "a4abfa9c.9d7728",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "dashUpFromContext",
        "info": "",
        "x": 930,
        "y": 1540,
        "wires": []
    },
    {
        "id": "c6d04d4a.0082d",
        "type": "ui_button",
        "z": "b9db4507.e61788",
        "name": "App Cancel",
        "group": "ea450fb4.c60d1",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1350,
        "y": 1380,
        "wires": [
            [
                "4ff4db12.bb6714"
            ]
        ]
    },
    {
        "id": "f0d1d138.8abb",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "dash from context",
        "links": [
            "fcca93f8.5a181",
            "d85c9818.9c48d8",
            "797d2c5.07e5dd4",
            "a0de7aec.1493e8",
            "d026d01a.ef269"
        ],
        "x": 2075,
        "y": 1360,
        "wires": []
    },
    {
        "id": "5721083f.a46c88",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "set global tagMsk",
        "func": "\n    var strIn = msg.payload;\n    let objects = [];\n    \n    if(msg.payload === null) {\n      global.set(\"tagMsk\",\"XXXX-XXXX-XXXX-XXXX-XXXX-XXXX\");\n//      global.set(\"tagMsk\",\"E280-1160-6000-XXXX-XXXX-XXXX\");\n    }else{    \n        if(strIn.length === 29)\n            global.set(\"tagMsk\",strIn);\n//        else\n//          global.set(\"tagMsk\",\"XXXX-XXXX-XXXX-XXXX-XXXX-XXXX\");\n//          global.set(\"tagMsk\",\"E280-1160-6000-XXXX-XXXX-XXXX\");\n    }\n    \n    strIn = global.get(\"tagMsk\");\n    \n    objects.push(global.get(\"tagMsk\"));\n\n    msg.payload=objects;\n\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n    if(global.get(\"tagMsk\") === undefined) \n        global.set(\"tagMsk\",\"XXXX-XXXX-XXXX-XXXX-XXXX-XXXX\");\n//      global.set(\"tagMsk\",\"E280-1160-6000-XXXX-XXXX-XXXX\");\n",
        "finalize": "",
        "x": 1710,
        "y": 1600,
        "wires": [
            [
                "a3ad210c.6587e"
            ]
        ]
    },
    {
        "id": "a3ad210c.6587e",
        "type": "debug",
        "z": "b9db4507.e61788",
        "name": "tag in mask",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ea937c3c.53cb4",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "get tagMsk",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "tagMsk",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1600,
        "wires": [
            [
                "19670e60.671cc2"
            ]
        ]
    },
    {
        "id": "2bfbfd49.f7afc2",
        "type": "ui_gauge",
        "z": "b9db4507.e61788",
        "name": "",
        "group": "6e2cc3.4361d33c",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "",
        "label": "dBm",
        "format": "{{value | number:1}}",
        "min": "10",
        "max": "31.5",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 2110,
        "y": 520,
        "wires": []
    },
    {
        "id": "1993d8a4.443177",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P1pwr Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "P1pwr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 520,
        "wires": [
            [
                "c56fcbf7.c61f48"
            ]
        ]
    },
    {
        "id": "4e2f4469.a655fc",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "1993d8a4.443177"
            ]
        ]
    },
    {
        "id": "58833e1f.268ef",
        "type": "delay",
        "z": "b9db4507.e61788",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1780,
        "y": 520,
        "wires": [
            [
                "6cb992d5.24cc2c"
            ]
        ]
    },
    {
        "id": "184c5d22.06ff13",
        "type": "ui_switch",
        "z": "b9db4507.e61788",
        "name": "P1en",
        "label": "Enable",
        "tooltip": "",
        "group": "6e2cc3.4361d33c",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "portCtl",
        "style": "",
        "onvalue": "P1 enable",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "P1 disable",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 1590,
        "y": 480,
        "wires": [
            [
                "b533cb1b.ae2878"
            ]
        ]
    },
    {
        "id": "916e9315.92e94",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P1en Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "P1en",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 480,
        "wires": [
            [
                "184c5d22.06ff13"
            ]
        ]
    },
    {
        "id": "a9ecea43.6942c8",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 480,
        "wires": [
            [
                "916e9315.92e94"
            ]
        ]
    },
    {
        "id": "b533cb1b.ae2878",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P1en Global",
        "rules": [
            {
                "t": "set",
                "p": "P1en",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 480,
        "wires": [
            [
                "dedb536d.1a671"
            ]
        ]
    },
    {
        "id": "bd1a2ce0.4634",
        "type": "ui_slider",
        "z": "b9db4507.e61788",
        "name": "portPwr",
        "label": "Port 2",
        "tooltip": "",
        "group": "d938d1bd.6ed83",
        "order": 4,
        "width": 2,
        "height": 6,
        "passthru": true,
        "outs": "end",
        "topic": "portCtl",
        "min": "1000",
        "max": "3150",
        "step": "10",
        "x": 1600,
        "y": 660,
        "wires": [
            [
                "b1880e0a.d5107",
                "a608261d.bdb9e8"
            ]
        ]
    },
    {
        "id": "c2d6b223.022f5",
        "type": "ui_gauge",
        "z": "b9db4507.e61788",
        "name": "",
        "group": "d938d1bd.6ed83",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "",
        "label": "dBm",
        "format": "{{value | number:1}}",
        "min": "10",
        "max": "31.5",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 2110,
        "y": 660,
        "wires": []
    },
    {
        "id": "787c0bcb.de4694",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P2pwr Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "P2pwr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 660,
        "wires": [
            [
                "bd1a2ce0.4634"
            ]
        ]
    },
    {
        "id": "ccb713d7.c884e",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 660,
        "wires": [
            [
                "787c0bcb.de4694"
            ]
        ]
    },
    {
        "id": "b1880e0a.d5107",
        "type": "delay",
        "z": "b9db4507.e61788",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1780,
        "y": 660,
        "wires": [
            [
                "76f2c979.d0baf8"
            ]
        ]
    },
    {
        "id": "2841a8ab.d4d5d8",
        "type": "ui_switch",
        "z": "b9db4507.e61788",
        "name": "P2en",
        "label": "Enable",
        "tooltip": "",
        "group": "d938d1bd.6ed83",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "portCtl",
        "style": "",
        "onvalue": "P2 enable",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "P2 disable",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 1590,
        "y": 620,
        "wires": [
            [
                "f5ecce83.2d7ce"
            ]
        ]
    },
    {
        "id": "259b4b79.7fa714",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P2en Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "P2en",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 620,
        "wires": [
            [
                "2841a8ab.d4d5d8"
            ]
        ]
    },
    {
        "id": "91e66b38.e735a8",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 620,
        "wires": [
            [
                "259b4b79.7fa714"
            ]
        ]
    },
    {
        "id": "f5ecce83.2d7ce",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P2en Global",
        "rules": [
            {
                "t": "set",
                "p": "P2en",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 620,
        "wires": [
            [
                "da8ecf0f.8bde"
            ]
        ]
    },
    {
        "id": "a6b5e90b.ccebe8",
        "type": "ui_slider",
        "z": "b9db4507.e61788",
        "name": "portPwr",
        "label": "Port 3",
        "tooltip": "",
        "group": "9aba0156.a0273",
        "order": 4,
        "width": 2,
        "height": 6,
        "passthru": true,
        "outs": "end",
        "topic": "portCtl",
        "min": "1000",
        "max": "3150",
        "step": "10",
        "x": 1600,
        "y": 800,
        "wires": [
            [
                "c728984a.e966f8",
                "d51185c9.d7cba8"
            ]
        ]
    },
    {
        "id": "957cb540.d41778",
        "type": "ui_gauge",
        "z": "b9db4507.e61788",
        "name": "",
        "group": "9aba0156.a0273",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "",
        "label": "dBm",
        "format": "{{value | number:1}}",
        "min": "10",
        "max": "31.5",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 2110,
        "y": 800,
        "wires": []
    },
    {
        "id": "331a3c48.853a14",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P3pwr Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "P3pwr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 800,
        "wires": [
            [
                "a6b5e90b.ccebe8"
            ]
        ]
    },
    {
        "id": "d16a92cf.c352e",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 800,
        "wires": [
            [
                "331a3c48.853a14"
            ]
        ]
    },
    {
        "id": "c728984a.e966f8",
        "type": "delay",
        "z": "b9db4507.e61788",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1780,
        "y": 800,
        "wires": [
            [
                "875d1e7b.bae7a"
            ]
        ]
    },
    {
        "id": "5ea4ee92.6f391",
        "type": "ui_switch",
        "z": "b9db4507.e61788",
        "name": "P3en",
        "label": "Enable",
        "tooltip": "",
        "group": "9aba0156.a0273",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "portCtl",
        "style": "",
        "onvalue": "P3 enable",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "P3 disable",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 1590,
        "y": 760,
        "wires": [
            [
                "ae8f9bab.26bbd8"
            ]
        ]
    },
    {
        "id": "499c8da0.d7d2c4",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P3en Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "P3en",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 760,
        "wires": [
            [
                "5ea4ee92.6f391"
            ]
        ]
    },
    {
        "id": "32798e4b.515452",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 760,
        "wires": [
            [
                "499c8da0.d7d2c4"
            ]
        ]
    },
    {
        "id": "ae8f9bab.26bbd8",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P3en Global",
        "rules": [
            {
                "t": "set",
                "p": "P3en",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 760,
        "wires": [
            [
                "6b918c0.9c45e74"
            ]
        ]
    },
    {
        "id": "21f573a0.dd3bbc",
        "type": "ui_slider",
        "z": "b9db4507.e61788",
        "name": "portPwr",
        "label": "Port 4",
        "tooltip": "",
        "group": "70f23c37.940914",
        "order": 4,
        "width": 2,
        "height": 6,
        "passthru": true,
        "outs": "end",
        "topic": "portCtl",
        "min": "1000",
        "max": "3150",
        "step": "10",
        "x": 1600,
        "y": 940,
        "wires": [
            [
                "fd93d21a.12a53",
                "f3b102b8.582c6"
            ]
        ]
    },
    {
        "id": "b3ac0ba6.04f258",
        "type": "ui_gauge",
        "z": "b9db4507.e61788",
        "name": "",
        "group": "70f23c37.940914",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "",
        "label": "dBm",
        "format": "{{value | number:1}}",
        "min": "10",
        "max": "31.5",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 2110,
        "y": 940,
        "wires": []
    },
    {
        "id": "30555b4b.7910b4",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P4pwr Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "P4pwr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 940,
        "wires": [
            [
                "21f573a0.dd3bbc"
            ]
        ]
    },
    {
        "id": "c0ceedac.ab5b",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 940,
        "wires": [
            [
                "30555b4b.7910b4"
            ]
        ]
    },
    {
        "id": "fd93d21a.12a53",
        "type": "delay",
        "z": "b9db4507.e61788",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1780,
        "y": 940,
        "wires": [
            [
                "ed23a805.929508"
            ]
        ]
    },
    {
        "id": "4114daf9.52e2d4",
        "type": "ui_switch",
        "z": "b9db4507.e61788",
        "name": "P4en",
        "label": "Enable",
        "tooltip": "",
        "group": "70f23c37.940914",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "portCtl",
        "style": "",
        "onvalue": "P4 enable",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "P4 disable",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 1590,
        "y": 900,
        "wires": [
            [
                "fda066de.ac2188"
            ]
        ]
    },
    {
        "id": "c90186eb.449f28",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P4en Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "P4en",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 900,
        "wires": [
            [
                "4114daf9.52e2d4"
            ]
        ]
    },
    {
        "id": "5bf549a8.64adc8",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 900,
        "wires": [
            [
                "c90186eb.449f28"
            ]
        ]
    },
    {
        "id": "fda066de.ac2188",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P4en Global",
        "rules": [
            {
                "t": "set",
                "p": "P4en",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 900,
        "wires": [
            [
                "23b1f9ff.e8cea6"
            ]
        ]
    },
    {
        "id": "dafd3954.f7d638",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P1pwr Gobal",
        "rules": [
            {
                "t": "set",
                "p": "P1pwr",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 560,
        "wires": [
            [
                "dd3f1adc.8683c8"
            ]
        ]
    },
    {
        "id": "a608261d.bdb9e8",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P2pwr Gobal",
        "rules": [
            {
                "t": "set",
                "p": "P2pwr",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 700,
        "wires": [
            [
                "79e2af0b.8d836"
            ]
        ]
    },
    {
        "id": "d51185c9.d7cba8",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P3pwr Gobal",
        "rules": [
            {
                "t": "set",
                "p": "P3pwr",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 840,
        "wires": [
            [
                "cc768360.3f4eb"
            ]
        ]
    },
    {
        "id": "f3b102b8.582c6",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "P4pwr Gobal",
        "rules": [
            {
                "t": "set",
                "p": "P4pwr",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 980,
        "wires": [
            [
                "468693e6.df444c"
            ]
        ]
    },
    {
        "id": "72a4fe3e.0b555",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "save context file from context",
        "info": "",
        "x": 900,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d0606be0.123458",
        "type": "file in",
        "z": "b9db4507.e61788",
        "name": "",
        "filename": "/home/pi/SIDS/context",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 600,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "797d2c5.07e5dd4",
        "type": "link in",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "157e6dff.299d42",
            "f0d1d138.8abb"
        ],
        "x": 1155,
        "y": 1000,
        "wires": [
            [
                "30555b4b.7910b4",
                "c90186eb.449f28",
                "331a3c48.853a14",
                "499c8da0.d7d2c4",
                "787c0bcb.de4694",
                "259b4b79.7fa714",
                "1993d8a4.443177",
                "916e9315.92e94",
                "2d6b2815.1a7428"
            ]
        ]
    },
    {
        "id": "dd3f1adc.8683c8",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "add cmd",
        "func": "\n//global.set(\"Ppwr\",msg.payload);\nmsg.payload = \"portPwr \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1960,
        "y": 560,
        "wires": [
            [
                "184481a.10fa87e"
            ]
        ]
    },
    {
        "id": "79e2af0b.8d836",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "add cmd",
        "func": "\n//global.set(\"Ppwr\",msg.payload);\nmsg.payload = \"portPwr \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1960,
        "y": 700,
        "wires": [
            [
                "b0e4ca57.4a6688"
            ]
        ]
    },
    {
        "id": "cc768360.3f4eb",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "add cmd",
        "func": "\n//global.set(\"Ppwr\",msg.payload);\nmsg.payload = \"portPwr \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1960,
        "y": 840,
        "wires": [
            [
                "3ee30151.7c6fbe"
            ]
        ]
    },
    {
        "id": "468693e6.df444c",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "add cmd",
        "func": "\n//global.set(\"Ppwr\",msg.payload);\nmsg.payload = \"portPwr \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1960,
        "y": 980,
        "wires": [
            [
                "33c4c02e.64a3"
            ]
        ]
    },
    {
        "id": "371b6f2f.5e977",
        "type": "join",
        "z": "b9db4507.e61788",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "0",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1830,
        "y": 1800,
        "wires": [
            [
                "eef1fd5c.0b912"
            ]
        ]
    },
    {
        "id": "184481a.10fa87e",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 2075,
        "y": 560,
        "wires": []
    },
    {
        "id": "dedb536d.1a671",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 1895,
        "y": 480,
        "wires": []
    },
    {
        "id": "da8ecf0f.8bde",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 1895,
        "y": 620,
        "wires": []
    },
    {
        "id": "6b918c0.9c45e74",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 1895,
        "y": 760,
        "wires": []
    },
    {
        "id": "23b1f9ff.e8cea6",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 1895,
        "y": 900,
        "wires": []
    },
    {
        "id": "33c4c02e.64a3",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 2075,
        "y": 980,
        "wires": []
    },
    {
        "id": "3ee30151.7c6fbe",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 2075,
        "y": 840,
        "wires": []
    },
    {
        "id": "b0e4ca57.4a6688",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 2075,
        "y": 700,
        "wires": []
    },
    {
        "id": "6192bd7c.c883a4",
        "type": "link in",
        "z": "b9db4507.e61788",
        "name": "join context",
        "links": [
            "23b1f9ff.e8cea6",
            "33c4c02e.64a3",
            "3ee30151.7c6fbe",
            "6b918c0.9c45e74",
            "b0e4ca57.4a6688",
            "da8ecf0f.8bde",
            "184481a.10fa87e",
            "dedb536d.1a671",
            "90cc531e.a1f73",
            "6eecc356.db043c",
            "c0bbee51.80ff7"
        ],
        "x": 1715,
        "y": 1760,
        "wires": [
            [
                "371b6f2f.5e977",
                "bc312755.6e2138"
            ]
        ]
    },
    {
        "id": "eef1fd5c.0b912",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "topic to portCtl",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "portCtl",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 1800,
        "wires": [
            [
                "adc1ef35.f6413"
            ]
        ]
    },
    {
        "id": "adc1ef35.f6413",
        "type": "join",
        "z": "b9db4507.e61788",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2170,
        "y": 1800,
        "wires": [
            [
                "f91ab974.5bfa98"
            ]
        ]
    },
    {
        "id": "f91ab974.5bfa98",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "set config buf",
        "func": "const port0 = 0, port1 = 1, port2 = 2, port3 = 3;\nconst setPwr = 1, setAnt1 = 2, setAnt2 = 3, setAnt3 = 4, setAnt4 = 5;               // command entry number in config file\n//var state = context.get(\"stateSav\");\n//var tstStr = null;\n\nfunction setPort(portNum, option) {\n    switch(portNum){\n        \n        case 'P1en':\n            if(option === 'enable'){\n//                console.debug(msg.payload.JsonCmd.JsonCmd[0]);\n                msg.payload.JsonCmd[0].Commands[setAnt1].Data2 = 1;\n//                global.set(\"P0\",\"P0 enable\");\n                break;\n            }\n            if(option === 'disable'){\n//                console.debug(msg.payload.JsonCmd);\n                msg.payload.JsonCmd[0].Commands[setAnt1].Data2 = 0;\n//                global.set(\"P0\",\"P0 disable\");\n                break;\n            }\n            console.error(\"bad port cmd option %s\",option);\n            break;\n        \n        case 'P1':\n            if(option === 'enable'){\n                msg.payload.JsonCmd[0].Commands[setAnt2].Data2 = 2;\n//                global.set(\"P1\",\"P1 enable\");\n                break;\n            }\n            if(option === 'disable'){\n                msg.payload.JsonCmd[0].Commands[setAnt2].Data2 = 0;\n//                global.set(\"P1\",\"P1 disable\");\n                break;\n            }\n            console.error(\"bad port cmd option %s\",option);\n            break;\n\n        case 'P2':\n            if(option === 'enable'){\n//                global.set(\"P2\",\"P2 enable\");\n                msg.payload.JsonCmd[0].Commands[setAnt3].Data2 = 3;\n                break;\n            }\n            if(option === 'disable'){\n                msg.payload.JsonCmd[0].Commands[setAnt3].Data2 = 0;\n//                global.set(\"P2\",\"P2 disable\");\n                break;\n            }\n            console.error(\"bad port cmd option %s\",option);\n            break;\n            \n        case 'P3':\n            if(option === 'enable'){\n                msg.payload.JsonCmd[0].Commands[setAnt4].Data2 = 4;\n//                global.set(\"P3\",\"P3 enable\");\n                break;\n            }\n            if(option === 'disable'){\n                msg.payload.JsonCmd[0].Commands[setAnt4].Data2 = 0;\n//                global.set(\"P3\",\"P3 disable\");\n                break;\n            }\n            console.error(\"bad port cmd option %s\",option);\n            break;\n       \n        case 'portPwr':\n//            console.debug(\"portPwr %s  %d\",option,option);\n            msg.payload.JsonCmd[0].Commands[setPwr].Data0 = Number(option);\n//            global.set(\"Ppwr\",Number(option));\n            break;\n            \n        default:\n            console.error(\"bad port noumber %s\",portNum);\n    } \n//    return tstStr;\n}\n\nlet cmdObj = [];\n\nvar cmdCnt = msg.payload.portCtl.length;\nvar cmds =Array.from(msg.payload.portCtl);\n\nconsole.debug(\"cmdCnt %d\", cmdCnt);\n\n    if(cmdCnt === 0) {                              // if no commands, return JsonCmd[0] as payload\n//        console.debug(\"cmdCnt = %d\", cmdCnt);\n        cmdObj.push(msg.payload.JsonCmd[0]);\n        msg.payload = cmdObj;\n        return msg;\n    }\n\nvar cmd = null\nvar cmdAry;\n\n    for(i=0;i<cmdCnt;i++){\n        cmdAry = cmds[i].split(' ');\n//        console.debug(\"cmd %s option %s\",cmdAry[0],cmdAry[1]);\n        setPort(cmdAry[0],cmdAry[1]);\n    }\n\n    cmdObj.push(msg.payload.JsonCmd[0]);\n    msg.payload = cmdObj;\n\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n//const init = 0, port0en = 0, port0dis = 1, port1en = 0, port1dis = 1, port2en = 0, port2dis = 1, port3en = 0, port3dis = 1;\n\n//    context.set(\"stateSav\",init);\n    \n",
        "finalize": "",
        "x": 2330,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "15946483.889cbb",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "payload to appBuf",
        "rules": [
            {
                "t": "set",
                "p": "appBuf",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2410,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "5032173d.db2718",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "Clear appBuf",
        "rules": [
            {
                "t": "set",
                "p": "appBuf",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "4f5ea834.a9ed08",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1110,
        "y": 2060,
        "wires": [
            [
                "5032173d.db2718"
            ]
        ]
    },
    {
        "id": "84cee829.09d988",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "topic to JsonCmd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "JsonCmd",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1860,
        "wires": [
            [
                "adc1ef35.f6413"
            ]
        ]
    },
    {
        "id": "78d3a21c.66379c",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "dashUpFromContext",
        "info": "",
        "x": 1030,
        "y": 1000,
        "wires": []
    },
    {
        "id": "534a6fea.048df",
        "type": "function",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "func": "\nvar status = null;\n\n    if(msg.payload === false){\n        msg.background = \"RED\";\n        msg.payload = \"ALARM\";\n        return msg;\n    }\n\n    if(msg.payload === true){\n        msg.background = \"GREEN\"\n        msg.payload = \"scanning\"\n        return msg;\n    }       \n    \n    if(msg.payload !== null)\n        msg.background = \"GRAY\";\n    else{\n        msg.background = \"BLACK\";\n        msg.payload = \"\";\n    }\n    \n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 180,
        "wires": [
            [
                "b99a8095.d0c58",
                "aaf9e018.927a"
            ]
        ]
    },
    {
        "id": "b99a8095.d0c58",
        "type": "ui_button",
        "z": "1b9fe7eb.6af498",
        "name": "Alarm / Scan Status",
        "group": "7ab37764.765e18",
        "order": 1,
        "width": "43",
        "height": "12",
        "passthru": false,
        "label": "<font size=32>{{value | uppercase}}</font>",
        "tooltip": "",
        "color": "BLACK",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "clicked",
        "payloadType": "str",
        "topic": "",
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "5271821d.e105fc",
                "a7e1d18c.99458"
            ]
        ]
    },
    {
        "id": "b93d58a8.2247d8",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "false",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "background",
                "v": "RED",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "stop",
        "payload": "false",
        "payloadType": "bool",
        "x": 610,
        "y": 220,
        "wires": [
            [
                "534a6fea.048df"
            ]
        ]
    },
    {
        "id": "1fda523f.db3a8e",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "true",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "background",
                "v": "GREEN",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "6",
        "topic": "start",
        "payload": "true",
        "payloadType": "bool",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "534a6fea.048df"
            ]
        ]
    },
    {
        "id": "aaf9e018.927a",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 120,
        "wires": []
    },
    {
        "id": "89cb007a.4806c",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "null",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "background",
                "v": "\"BLACK\"",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": ".1",
        "topic": "",
        "payload": "initializing",
        "payloadType": "str",
        "x": 610,
        "y": 140,
        "wires": [
            [
                "534a6fea.048df"
            ]
        ]
    },
    {
        "id": "5271821d.e105fc",
        "type": "change",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alarm Clear 5 sec",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "background",
                "pt": "msg",
                "to": "GRAY",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 180,
        "wires": [
            [
                "534a6fea.048df"
            ]
        ]
    },
    {
        "id": "9f6214ad.e10ee8",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 270,
        "y": 560,
        "wires": [
            [
                "438469fb.06c078"
            ]
        ]
    },
    {
        "id": "a7e1d18c.99458",
        "type": "trigger",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "op1": "false",
        "op2": "true",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "5",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1140,
        "y": 260,
        "wires": [
            [
                "438469fb.06c078"
            ]
        ]
    },
    {
        "id": "a371d509.92e088",
        "type": "change",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "background",
                "pt": "msg",
                "to": "GREEN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 100,
        "wires": [
            [
                "534a6fea.048df"
            ]
        ]
    },
    {
        "id": "65e2b7bb.349e68",
        "type": "link out",
        "z": "4319fbc9.0bc754",
        "name": "scanning",
        "links": [
            "860c9d9c.b3aae"
        ],
        "x": 935,
        "y": 560,
        "wires": []
    },
    {
        "id": "860c9d9c.b3aae",
        "type": "link in",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "links": [
            "65e2b7bb.349e68"
        ],
        "x": 455,
        "y": 100,
        "wires": [
            [
                "a371d509.92e088"
            ]
        ]
    },
    {
        "id": "d37e1ed3.e68e5",
        "type": "change",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "processing",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "background",
                "pt": "msg",
                "to": "ORANGE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 60,
        "wires": [
            [
                "534a6fea.048df"
            ]
        ]
    },
    {
        "id": "fa8f24f7.50b728",
        "type": "link in",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "links": [
            "164474b5.be6d9b"
        ],
        "x": 455,
        "y": 60,
        "wires": [
            [
                "d37e1ed3.e68e5"
            ]
        ]
    },
    {
        "id": "164474b5.be6d9b",
        "type": "link out",
        "z": "4319fbc9.0bc754",
        "name": "processing scan",
        "links": [
            "fa8f24f7.50b728"
        ],
        "x": 405,
        "y": 1340,
        "wires": []
    },
    {
        "id": "e17da5c9.8c8ea8",
        "type": "ui_text",
        "z": "c62c8283.c1917",
        "group": "3f873bc7.b700a4",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "swift id",
        "label": "",
        "format": "<font size=32>{{value | uppercase}}</font>",
        "layout": "row-center",
        "x": 510,
        "y": 120,
        "wires": []
    },
    {
        "id": "e1d5c7c1.ff88d8",
        "type": "inject",
        "z": "c62c8283.c1917",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "www.swiftid.io",
        "payloadType": "str",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "e17da5c9.8c8ea8"
            ]
        ]
    },
    {
        "id": "3c354fda.56aec",
        "type": "function",
        "z": "4319fbc9.0bc754",
        "name": "Jfun msg 1",
        "func": "function cmpArray(tstAarray,mskArray) {\nvar i, ret, msgArrayCnt; \n\n    if((msgArrayCnt = msg1Array.length) != mskArray.length)\n        return false;\n\n//    console.debug(\"tst %s msk %s\",tstAarray,mskArray);\n\n    ret = true;\n    for(i=0;i<msgArrayCnt-1;i++) {\n        \n        if(mskArray[i] === 'X') {\n            continue;\n        }\n        \n        if(mskArray[i] === tstAarray[i]) {\n            continue;\n        }\n            \n//        console.debug(\"tst: \" + tstAarray[i] + \" != \" + \"msk: \" + mskArray[i] + \" index\");\n\n        ret = false;    \n    }\n    \n//    console.debug(\"tst \" + ret + \" pos \" + i);\n    return ret;\n}\n\nlet epcs = [];\nvar epcStr = \"\";\n\nvar strMsk = global.get(\"tagMsk\"), ret = false;\n    let mskArray = strMsk.split('');\n    \n//    console.debug(mskArray);\n\n    recCnt = msg.payload.length;  \n    \n    if(recCnt === 0)\n        ret = false;\n    else{\n        for(i=0;i<recCnt;i++) {\n            strIn = msg.payload[i];\n//            console.debug(\"EPC[\" + i + \"]: \" + strIn);\n            msg1Array = strIn.split('');\n            if(cmpArray(msg1Array,mskArray) === true){\n                epcStr = strIn.substring(strIn.length - 11);\n                epcs.push(epcStr);\n                ret = true;\n            }//else\n             //   ret = false;\n        }\n    }   \n\n    msg.epcs = epcs;\n    \n//    if(epcs === null)\n//        ret = false;\n//    else\n//        ret = true;\n        \n    msg.payload = ret;\n \n//    console.debug(\"ret \" + ret);\n   \n    return msg;\n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 1180,
        "wires": [
            [
                "f97997d9.ee2e18",
                "b1fc8dc4.36f57",
                "7bb29551.1f799c"
            ]
        ]
    },
    {
        "id": "9399b551.3667c8",
        "type": "trigger",
        "z": "1b9fe7eb.6af498",
        "name": "set alarm",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 440,
        "y": 360,
        "wires": [
            [
                "e23224a2.9a9308",
                "ab0c46af.7ecfa8"
            ]
        ]
    },
    {
        "id": "9fbf13b9.e3587",
        "type": "link in",
        "z": "1b9fe7eb.6af498",
        "name": "alarm",
        "links": [
            "f97997d9.ee2e18",
            "9efc6015.3663d"
        ],
        "x": 195,
        "y": 360,
        "wires": [
            [
                "9e31ed1e.f80a6"
            ]
        ]
    },
    {
        "id": "448364a7.d55afc",
        "type": "ui_template",
        "z": "4319fbc9.0bc754",
        "group": "bcfd68ef.0b8b48",
        "name": "SVG text box",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<style>\n\n    #tex1 {\n        font-weight:bolder;\n        font-size: 30px;\n        letter-spacing: 8px;\n        fill: red;\n    }\n    \n</style>\n\n\n<svg height=\"300\" width=\"300\" >\n\n<text id=\"tex1\" x=\"10\" y=\"25\" > {{msg.payload[0]}} </text>\n<text id=\"tex1\" x=\"10\" y=\"55\" > {{msg.payload[1]}} </text>\n<text id=\"tex1\" x=\"10\" y=\"85\" > {{msg.payload[2]}} </text>\n<text id=\"tex1\" x=\"10\" y=\"115\" > {{msg.payload[3]}} </text>\n<text id=\"tex1\" x=\"10\" y=\"145\" > {{msg.payload[4]}} </text>\n<text id=\"tex1\" x=\"10\" y=\"175\" > {{msg.payload[5]}} </text>\n<text id=\"tex1\" x=\"10\" y=\"205\" > {{msg.payload[6]}} </text>\n<text id=\"tex1\" x=\"10\" y=\"235\" > {{msg.payload[7]}} </text>\n<text id=\"tex1\" x=\"10\" y=\"265\" > {{msg.payload[8]}} </text>\n<text id=\"tex1\" x=\"10\" y=\"295\" > {{msg.payload[9]}} </text>\n</svg>\n\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1670,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "39381861.b83618",
        "type": "function",
        "z": "4319fbc9.0bc754",
        "name": "clear table",
        "func": "\n\n    let sctab = [];\n    \n    flow.set(\"sctab\", sctab);\n    msg.payload = [...sctab];                   // sctab to msg.payload\n    \n    return msg;",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1470,
        "y": 1080,
        "wires": [
            [
                "448364a7.d55afc"
            ]
        ]
    },
    {
        "id": "676e9c36.444da4",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "Clear",
        "payloadType": "str",
        "x": 1310,
        "y": 1080,
        "wires": [
            [
                "39381861.b83618"
            ]
        ]
    },
    {
        "id": "4929c82f.b59cc8",
        "type": "function",
        "z": "4319fbc9.0bc754",
        "name": "Add array to scrolling table",
        "func": "let sctab = [];\n\nfunction addSline(str){\n\n    sctab = flow.get(\"sctab\");                  // Read scrolling table from context\n    let size = sctab.unshift(str);              // Modify scrolling table by adding str at top\n    if (size >6) sctab.pop();                   // Maybe remove last element\n    flow.set(\"sctab\",sctab);                    // Update context for scrolling text\n}\n\nvar i, recCnt = msg.payload.length;\n\n    for(i=0;i<recCnt;i++) \n        addSline(msg.payload[i]);\n\n    msg.payload = [...sctab];                   // sctab to msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nlet sctab = [];\nflow.set(\"sctab\", sctab);\n",
        "finalize": "",
        "x": 1420,
        "y": 1120,
        "wires": [
            [
                "448364a7.d55afc"
            ]
        ]
    },
    {
        "id": "b1fc8dc4.36f57",
        "type": "change",
        "z": "4319fbc9.0bc754",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "epcs",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "epcs",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1120,
        "wires": [
            [
                "4929c82f.b59cc8"
            ]
        ]
    },
    {
        "id": "86ae22c0.0496d",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "complete",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 1800,
        "wires": [
            [
                "371b6f2f.5e977"
            ]
        ]
    },
    {
        "id": "501181ab.84e36",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "context file init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1150,
        "y": 1460,
        "wires": [
            [
                "4bc069c.0042098"
            ]
        ]
    },
    {
        "id": "d2190c4c.5ff4f",
        "type": "file",
        "z": "b9db4507.e61788",
        "name": "",
        "filename": "/home/pi/SIDS/context",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1600,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "a4b97451.6bea58",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "init file values",
        "info": "",
        "x": 950,
        "y": 1460,
        "wires": []
    },
    {
        "id": "4bc069c.0042098",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "context file Json",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Context\":\"JCI alarm\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set tagMsk\",\"command\":\"setMsk\",\"data\":\"E280-1160-6000-XXXX-XXXX-XXXX\"},{\"Rem\":\"Set wrMsk\",\"command\":\"setWrMsk\",\"data\":\"E280-1160-6001-XXXX-XXXX-XXXX\"},{\"Rem\":\"Set alarm volume\",\"command\":\"alarmVol\",\"data\":65},{\"Rem\":\"Set alarm enable\",\"command\":\"alarmEn\",\"data\":\"false\"},{\"Rem\":\"Set GPIO enable\",\"command\":\"gpioEn\",\"data\":\"false\"},{\"Rem\":\"Set GPIO on time\",\"command\":\"gpioTm\",\"data\":3},{\"Rem\":\"set Px Power\",\"command\":\"PxPwr\",\"data\":2300},{\"Rem\":\"set P1 Power\",\"command\":\"P1pwr\",\"data\":2300},{\"Rem\":\"set P2 Power\",\"command\":\"P2pwr\",\"data\":2300},{\"Rem\":\"set P3 Power\",\"command\":\"P3pwr\",\"data\":2300},{\"Rem\":\"set 4 Power\",\"command\":\"P4pwr\",\"data\":2300},{\"Rem\":\"set P1 enable\",\"command\":\"P1en\",\"data\":\"P1 enable\"},{\"Rem\":\"set P2 enable\",\"command\":\"P2en\",\"data\":\"P2 enable\"},{\"Rem\":\"set P3 enable\",\"command\":\"P3en\",\"data\":\"P3 enable\"},{\"Rem\":\"set P4 enable\",\"command\":\"P4en\",\"data\":\"P4 enable\"}]}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 1460,
        "wires": [
            [
                "d2190c4c.5ff4f"
            ]
        ]
    },
    {
        "id": "e503703d.8b828",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "inventory",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 1020,
        "wires": [
            [
                "994b484b.e689e8"
            ]
        ]
    },
    {
        "id": "19a8cb81.c940b4",
        "type": "ui_template",
        "z": "b9db4507.e61788",
        "group": "ea450fb4.c60d1",
        "name": "App Settings",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<style>\n.masonry-container {\n    width: 640x;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 910,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9c2039af.60d3e8",
        "type": "ui_button",
        "z": "b9db4507.e61788",
        "name": "RF Cancel",
        "group": "5e979462.41424c",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1350,
        "y": 1340,
        "wires": [
            [
                "4ff4db12.bb6714"
            ]
        ]
    },
    {
        "id": "d679d1d1.909b4",
        "type": "ui_template",
        "z": "b9db4507.e61788",
        "group": "8a6f5635.944de8",
        "name": "RF Settings",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<style>\n.masonry-container {\n    width: 640px;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 910,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "6744c5dc.86bfac",
        "type": "ui_template",
        "z": "b9db4507.e61788",
        "d": true,
        "group": "3f873bc7.b700a4",
        "name": "Home ",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<style>\n.masonry-container {\n    width: 480px;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 890,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "19670e60.671cc2",
        "type": "ui_text_input",
        "z": "b9db4507.e61788",
        "name": "Tag Mask",
        "label": "",
        "tooltip": "",
        "group": "6e8aaadb.0eb504",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 1520,
        "y": 1600,
        "wires": [
            [
                "5721083f.a46c88"
            ]
        ]
    },
    {
        "id": "7bb29551.1f799c",
        "type": "debug",
        "z": "4319fbc9.0bc754",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1240,
        "wires": []
    },
    {
        "id": "131d36f2.53c4c9",
        "type": "change",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "9e31ed1e.f80a6",
        "type": "switch",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 360,
        "wires": [
            [
                "9399b551.3667c8"
            ]
        ]
    },
    {
        "id": "bc312755.6e2138",
        "type": "debug",
        "z": "b9db4507.e61788",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 1740,
        "wires": []
    },
    {
        "id": "d026d01a.ef269",
        "type": "link in",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "links": [
            "157e6dff.299d42",
            "f0d1d138.8abb"
        ],
        "x": 395,
        "y": 940,
        "wires": [
            [
                "41797d3b.4d8da4"
            ]
        ]
    },
    {
        "id": "70aaf367.af24bc",
        "type": "comment",
        "z": "1b9fe7eb.6af498",
        "name": "dashUpFromContext",
        "info": "",
        "x": 270,
        "y": 940,
        "wires": []
    },
    {
        "id": "41797d3b.4d8da4",
        "type": "change",
        "z": "1b9fe7eb.6af498",
        "name": "alarmVol Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "alarmVol",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 940,
        "wires": [
            [
                "f5daf2b8.5215b"
            ]
        ]
    },
    {
        "id": "241c250e.c3b87a",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 350,
        "y": 1000,
        "wires": [
            [
                "41797d3b.4d8da4"
            ]
        ]
    },
    {
        "id": "d65f24c6.d06478",
        "type": "change",
        "z": "1b9fe7eb.6af498",
        "name": "P1en Global",
        "rules": [
            {
                "t": "set",
                "p": "alarmVol",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 940,
        "wires": [
            [
                "90cc531e.a1f73"
            ]
        ]
    },
    {
        "id": "90cc531e.a1f73",
        "type": "link out",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 1095,
        "y": 940,
        "wires": []
    },
    {
        "id": "90334409.82f888",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "dash change",
        "info": "",
        "x": 2010,
        "y": 480,
        "wires": []
    },
    {
        "id": "aeb95cca.40399",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "dash change",
        "info": "",
        "x": 2010,
        "y": 620,
        "wires": []
    },
    {
        "id": "48582e77.f6583",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "dash change",
        "info": "",
        "x": 2010,
        "y": 760,
        "wires": []
    },
    {
        "id": "c079924d.70ad9",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "dash change",
        "info": "",
        "x": 2010,
        "y": 900,
        "wires": []
    },
    {
        "id": "db215e6e.91597",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "dash change",
        "info": "",
        "x": 1710,
        "y": 1720,
        "wires": []
    },
    {
        "id": "415078fe.8ab528",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "sid400 cmd",
        "info": "",
        "x": 2190,
        "y": 560,
        "wires": []
    },
    {
        "id": "67655a37.0bfd54",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "sid400 cmd",
        "info": "",
        "x": 2190,
        "y": 700,
        "wires": []
    },
    {
        "id": "9ac29160.f2ab3",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "sid400 cmd",
        "info": "",
        "x": 2190,
        "y": 840,
        "wires": []
    },
    {
        "id": "95da08d1.65a0d8",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "sid400 cmd",
        "info": "",
        "x": 2190,
        "y": 980,
        "wires": []
    },
    {
        "id": "6c69b52a.fabd5c",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "sid400 cmd",
        "info": "",
        "x": 1710,
        "y": 1680,
        "wires": []
    },
    {
        "id": "d69933aa.0eb9b",
        "type": "comment",
        "z": "1b9fe7eb.6af498",
        "name": "dash change",
        "info": "",
        "x": 1210,
        "y": 940,
        "wires": []
    },
    {
        "id": "b40d8ae8.5ba438",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "Port power dashboard",
        "info": "",
        "x": 1780,
        "y": 140,
        "wires": []
    },
    {
        "id": "d17cb1c6.575b8",
        "type": "ui_slider",
        "z": "b9db4507.e61788",
        "name": "portPwr",
        "label": "Tx Master",
        "tooltip": "",
        "group": "8a6f5635.944de8",
        "order": 3,
        "width": 2,
        "height": 4,
        "passthru": true,
        "outs": "end",
        "topic": "portCtl",
        "min": "1000",
        "max": "3150",
        "step": "10",
        "x": 1600,
        "y": 380,
        "wires": [
            [
                "54c0d926.0b40e8",
                "6021bbc5.db1874",
                "5455c998.d016a8"
            ]
        ]
    },
    {
        "id": "88bac3dc.0eda3",
        "type": "ui_gauge",
        "z": "b9db4507.e61788",
        "name": "",
        "group": "8a6f5635.944de8",
        "order": 2,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "",
        "label": "dBm",
        "format": "{{value | number:1}}",
        "min": "10",
        "max": "31.5",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 2110,
        "y": 380,
        "wires": []
    },
    {
        "id": "2d6b2815.1a7428",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "Ppwr Global",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PxPwr",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 380,
        "wires": [
            [
                "d17cb1c6.575b8"
            ]
        ]
    },
    {
        "id": "eb1b92d3.1abd4",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "2d6b2815.1a7428"
            ]
        ]
    },
    {
        "id": "54c0d926.0b40e8",
        "type": "delay",
        "z": "b9db4507.e61788",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1780,
        "y": 380,
        "wires": [
            [
                "c75f9d1a.25277"
            ]
        ]
    },
    {
        "id": "c75f9d1a.25277",
        "type": "range",
        "z": "b9db4507.e61788",
        "minin": "1000",
        "maxin": "3150",
        "minout": "10",
        "maxout": "31.5",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1960,
        "y": 380,
        "wires": [
            [
                "88bac3dc.0eda3"
            ]
        ]
    },
    {
        "id": "6cb992d5.24cc2c",
        "type": "range",
        "z": "b9db4507.e61788",
        "minin": "1000",
        "maxin": "3150",
        "minout": "10",
        "maxout": "31.5",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1960,
        "y": 520,
        "wires": [
            [
                "2bfbfd49.f7afc2"
            ]
        ]
    },
    {
        "id": "76f2c979.d0baf8",
        "type": "range",
        "z": "b9db4507.e61788",
        "minin": "1000",
        "maxin": "3150",
        "minout": "10",
        "maxout": "31.5",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1960,
        "y": 660,
        "wires": [
            [
                "c2d6b223.022f5"
            ]
        ]
    },
    {
        "id": "875d1e7b.bae7a",
        "type": "range",
        "z": "b9db4507.e61788",
        "minin": "1000",
        "maxin": "3150",
        "minout": "10",
        "maxout": "31.5",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1960,
        "y": 800,
        "wires": [
            [
                "957cb540.d41778"
            ]
        ]
    },
    {
        "id": "ed23a805.929508",
        "type": "range",
        "z": "b9db4507.e61788",
        "minin": "1000",
        "maxin": "3150",
        "minout": "10",
        "maxout": "31.5",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1960,
        "y": 940,
        "wires": [
            [
                "b3ac0ba6.04f258"
            ]
        ]
    },
    {
        "id": "5455c998.d016a8",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "",
        "func": "\n\n   var PxPwr = msg.payload;\n   \n   global.set(\"P1pwr\",PxPwr);\n   global.set(\"P2pwr\",PxPwr);\n   global.set(\"P3pwr\",PxPwr);\n   global.set(\"P4pwr\",PxPwr);\n   global.set(\"Pxpwr\",PxPwr);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1760,
        "y": 340,
        "wires": [
            [
                "a4e7aef.b8d695"
            ]
        ]
    },
    {
        "id": "e2d71eec.00ec9",
        "type": "link in",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "a4e7aef.b8d695"
        ],
        "x": 1245,
        "y": 340,
        "wires": [
            [
                "787c0bcb.de4694",
                "1993d8a4.443177",
                "331a3c48.853a14",
                "30555b4b.7910b4"
            ]
        ]
    },
    {
        "id": "a4e7aef.b8d695",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "PxPwr dash up",
        "links": [
            "e2d71eec.00ec9"
        ],
        "x": 1875,
        "y": 340,
        "wires": []
    },
    {
        "id": "9f3f6c70.0f6a4",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "getAntPwr",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "run /home/pi/SIDS/getPwr",
        "payloadType": "str",
        "x": 500,
        "y": 860,
        "wires": [
            [
                "960f45b6.a641b8"
            ]
        ]
    },
    {
        "id": "f0b82192.8c77d",
        "type": "inject",
        "z": "4319fbc9.0bc754",
        "name": "setAntPwr",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "run /home/pi/SIDS/setAntPwr",
        "payloadType": "str",
        "x": 500,
        "y": 900,
        "wires": [
            [
                "960f45b6.a641b8"
            ]
        ]
    },
    {
        "id": "f7d034e1.c34458",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "JSC set SID400",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set Antenna Sequence 1\",\"Command\":4,\"Key\":50,\"Data0\":0,\"Data1\":1},{\"Rem\":\"Get Antenna Sequence 1\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":1},{\"Rem\":\"Set Antenna Sequence 2\",\"Command\":4,\"Key\":50,\"Data0\":1,\"Data1\":2},{\"Rem\":\"Get Antenna Sequence 2\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":2},{\"Rem\":\"Set Antenna Sequence 3\",\"Command\":4,\"Key\":50,\"Data0\":2,\"Data1\":3},{\"Rem\":\"Get Antenna Sequence 3\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":3},{\"Rem\":\"Set Antenna Sequence 4\",\"Command\":4,\"Key\":50,\"Data0\":3,\"Data1\":4},{\"Rem\":\"Get Antenna Sequence 4\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":4},{\"Rem\":\"Set Antenna power\",\"Command\":1,\"Key\":49,\"Data0\":1610},{\"Rem\":\"Get Antenna power 0\",\"Command\":8,\"Key\":49,\"Data0\":0,\"Data1\":0,\"Data2\":0}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 1940,
        "wires": [
            [
                "7ab14fbf.913c4"
            ]
        ]
    },
    {
        "id": "b499a8bd.e395f8",
        "type": "json",
        "z": "b9db4507.e61788",
        "d": true,
        "name": "Json to Obj",
        "property": "cmd",
        "action": "",
        "pretty": true,
        "x": 2330,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "67aa6a4.3150094",
        "type": "function",
        "z": "b9db4507.e61788",
        "d": true,
        "name": "set cmd buf",
        "func": "const port0 = 0, port1 = 1, port2 = 2, port3 = 3;\nconst setPwr = 1, setAnt1 = 2, setAnt2 = 3, setAnt3 = 4, setAnt4 = 5;               // command entry number in config file\n//var state = context.get(\"stateSav\");\n//var tstStr = null;\n\nlet cmdObj = [];\n\nfunction cmdPush(cmdObj,rem,cmd,key,dat0,dat1,dat2){\n    cmdObj.push({\"Rem\" : rem,\"Command\" : cmd,\"Key\" : key,\"Data0\" : dat0,\"Data1\" : dat1,\"Data2\" : dat2});\n}\n\n\nfunction setCmd(cmdObj, rem, cmd, option) {\n//function setCmd(cmdObj, cmd, option) {\n    var data2;\n    \n    switch(cmd){\n        \n        case 'setMsk':\n        case 'setWrMsk':\n        case 'alarmVol':\n        case 'alarmEn':\n        case 'gpioEn':\n        case 'gpioTm':\n                break;\n            \n        case 'PxPwr':\n            data2 = option;\n            cmdPush(cmdObj,\"Set Antenna Power\", 4, 49, 0, 0, data2);\n            cmdPush(cmdObj,\"Get Antenna Power\", 8, 49, 0, 0, 0);\n            break;\n/*\n        case 'P1pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n            \n        case 'P2pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n            \n        case 'P3pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n            \n        case 'P4pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n*/            \n        case 'P1en':\n            if(option === \"P1 enable\")\n                data2 = 1;\n            else{\n                if(option === \"P1 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdPush(cmdObj,\"Set Antenna Sequence P1\", 4, 50, 0, 0, data2);\n            break;\n            \n        case 'P2en':\n            if(option === \"P2 enable\")\n                data2 = 2;\n            else{\n                if(option === \"P2 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdPush(cmdObj,\"Set Antenna Sequence P2\", 4, 50, 0, 1, data2);\n            break;\n\n        case 'P3en':\n            if(option === \"P3 enable\")\n                data2 = 3;\n            else{\n                if(option === \"P3 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdPush(cmdObj,\"Set Antenna Sequence P3\", 4, 50, 0, 2, data2);\n            break;\n\n        case 'P4en':\n            if(option === \"P4 enable\")\n                data2 = 4;\n            else{\n                if(option === \"P4 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdPush(cmdObj,\"Set Antenna Sequence P4\", 4, 50, 0, 3, data2);\n            break;\n\n        default:\n            console.error(\"bad cmd %s\",cmd);\n    } \n}\n\nvar cmdCnt = msg.payload[0].Commands.length;\nvar cmdAry =Array.from(msg.payload);\n\nconsole.debug(\"cmdCnt %d\", cmdCnt);\n\n    if(cmdCnt === 0) {                              // if no commands, return JsonCmd[0] as payload\n        cmdObj.push(msg.payload.JsonCmd[0]);\n        msg.payload = cmdObj;\n        return msg;\n    }\n\nvar cmd = null\n\n// !!!! carry rem through\n\n    for(i=0;i<cmdCnt;i++){\n        setCmd(cmdObj,msg.payload[0].Commands[i].Rem,msg.payload[0].Commands[i].command,msg.payload[0].Commands[i].data);   \n    }\n\n    console.debug(cmdObj);\n    msg.payload = cmdObj;\n\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n//const init = 0, port0en = 0, port0dis = 1, port1en = 0, port1dis = 1, port2en = 0, port2dis = 1, port3en = 0, port3dis = 1;\n\n//    context.set(\"stateSav\",init);\n    \n",
        "finalize": "",
        "x": 2510,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "affd4f48.9df8e",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1830,
        "y": 1940,
        "wires": [
            [
                "f7d034e1.c34458"
            ]
        ]
    },
    {
        "id": "7ab14fbf.913c4",
        "type": "json",
        "z": "b9db4507.e61788",
        "name": "Json to Obj",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2190,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "9c1eb7a5.ca9f28",
        "type": "change",
        "z": "b9db4507.e61788",
        "d": true,
        "name": "JSC set SID400",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set Antenna Sequence 1\",\"Command\":4,\"Key\":50,\"Data0\":0,\"Data1\":1},{\"Rem\":\"Get Antenna Sequence 1\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":1},{\"Rem\":\"Set Antenna Sequence 2\",\"Command\":4,\"Key\":50,\"Data0\":1,\"Data1\":2},{\"Rem\":\"Get Antenna Sequence 2\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":2},{\"Rem\":\"Set Antenna Sequence 3\",\"Command\":4,\"Key\":50,\"Data0\":2,\"Data1\":3},{\"Rem\":\"Get Antenna Sequence 3\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":3},{\"Rem\":\"Set Antenna Sequence 4\",\"Command\":4,\"Key\":50,\"Data0\":3,\"Data1\":4},{\"Rem\":\"Get Antenna Sequence 4\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":4},{\"Rem\":\"Set Antenna power\",\"Command\":1,\"Key\":49,\"Data0\":1610},{\"Rem\":\"Get Antenna power 0\",\"Command\":8,\"Key\":49,\"Data0\":0,\"Data1\":0,\"Data2\":0}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "797f742.44eb88c",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "JSC SID400 Cmd",
        "rules": [
            {
                "t": "set",
                "p": "sidsCmd",
                "pt": "flow",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set Antenna Sequence 1\",\"Command\":4,\"Key\":50,\"Data0\":0,\"Data1\":1},{\"Rem\":\"Get Antenna Sequence 1\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":1},{\"Rem\":\"Set Antenna Sequence 2\",\"Command\":4,\"Key\":50,\"Data0\":1,\"Data1\":2},{\"Rem\":\"Get Antenna Sequence 2\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":2},{\"Rem\":\"Set Antenna Sequence 3\",\"Command\":4,\"Key\":50,\"Data0\":2,\"Data1\":3},{\"Rem\":\"Get Antenna Sequence 3\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":3},{\"Rem\":\"Set Antenna Sequence 4\",\"Command\":4,\"Key\":50,\"Data0\":3,\"Data1\":4},{\"Rem\":\"Get Antenna Sequence 4\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":4},{\"Rem\":\"Set Antenna power\",\"Command\":1,\"Key\":49,\"Data0\":1610},{\"Rem\":\"Get Antenna power 0\",\"Command\":8,\"Key\":49,\"Data0\":0,\"Data1\":0,\"Data2\":0}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "852266c.d04b798",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1600,
        "y": 1100,
        "wires": [
            [
                "797f742.44eb88c"
            ]
        ]
    },
    {
        "id": "dd2d85c6.edfdb8",
        "type": "function",
        "z": "b9db4507.e61788",
        "d": true,
        "name": "set cmd buf",
        "func": "const port0 = 0, port1 = 1, port2 = 2, port3 = 3;\nconst setPwr = 1, setAnt1 = 2, setAnt2 = 3, setAnt3 = 4, setAnt4 = 5;               // command entry number in config file\n//var state = context.get(\"stateSav\");\n//var tstStr = null;\n\nlet cmdObj = [];\n\nfunction cmdPush(cmdObj,rem,cmd,key,dat0,dat1,dat2){\n    cmdObj.push({\"Rem\" : rem,\"Command\" : cmd,\"Key\" : key,\"Data0\" : dat0,\"Data1\" : dat1,\"Data2\" : dat2});\n}\n\n\nfunction setCmd(cmdObj, rem, cmd, option) {\n//function setCmd(cmdObj, cmd, option) {\n    var data2;\n    \n    switch(cmd){\n        \n        case 'setMsk':\n        case 'setWrMsk':\n        case 'alarmVol':\n        case 'alarmEn':\n        case 'gpioEn':\n        case 'gpioTm':\n                break;\n            \n        case 'PxPwr':\n            \n            data2 = option;\n            cmdPush(cmdObj,\"Set Antenna Power\", 4, 49, 0, 0, data2);\n            cmdPush(cmdObj,\"Get Antenna Power\", 8, 49, 0, 0, 0);\n            break;\n/*\n        case 'P1pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n            \n        case 'P2pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n            \n        case 'P3pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n            \n        case 'P4pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n*/            \n        case 'P1en':\n            if(option === \"P1 enable\")\n                data2 = 1;\n            else{\n                if(option === \"P1 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdPush(cmdObj,\"Set Antenna Sequence P1\", 4, 50, 0, 0, data2);\n            break;\n            \n        case 'P2en':\n            if(option === \"P2 enable\")\n                data2 = 2;\n            else{\n                if(option === \"P2 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdPush(cmdObj,\"Set Antenna Sequence P2\", 4, 50, 0, 1, data2);\n            break;\n\n        case 'P3en':\n            if(option === \"P3 enable\")\n                data2 = 3;\n            else{\n                if(option === \"P3 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdPush(cmdObj,\"Set Antenna Sequence P3\", 4, 50, 0, 2, data2);\n            break;\n\n        case 'P4en':\n            if(option === \"P4 enable\")\n                data2 = 4;\n            else{\n                if(option === \"P4 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdPush(cmdObj,\"Set Antenna Sequence P4\", 4, 50, 0, 3, data2);\n            break;\n\n        default:\n            console.error(\"bad cmd %s\",cmd);\n    } \n}\n\nvar cmdCnt = msg.payload[0].Commands.length;\nvar cmdAry =Array.from(msg.payload);\n\nconsole.debug(\"cmdCnt %d\", cmdCnt);\n\n    if(cmdCnt === 0) {                              // if no commands, return JsonCmd[0] as payload\n        cmdObj.push(msg.payload.JsonCmd[0]);\n        msg.payload = cmdObj;\n        return msg;\n    }\n\nvar cmd = null\n\n// !!!! carry rem through\n\n    cmdObj.push({\"Project\": \"Data Center\",\"Rev\": 1});\n\n    for(i=0;i<cmdCnt;i++){\n        setCmd(cmdObj,msg.payload[0].Commands[i].Rem,msg.payload[0].Commands[i].command,msg.payload[0].Commands[i].data);   \n    }\n\n    console.debug(cmdObj);\n    msg.payload = cmdObj;\n\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n//const init = 0, port0en = 0, port0dis = 1, port1en = 0, port1dis = 1, port2en = 0, port2dis = 1, port3en = 0, port3dis = 1;\n\n//    context.set(\"stateSav\",init);\n    \n",
        "finalize": "",
        "x": 2370,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "639fe4f4.49851c",
        "type": "ui_template",
        "z": "4319fbc9.0bc754",
        "group": "275bdeab.6939e2",
        "name": "App Settings",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<style>\n.masonry-container {\n    width: 1080px;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1150,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "5bc97609.c174c8",
        "type": "ui_text",
        "z": "c09aa471.ec0fd8",
        "group": "b5d43103.547fb",
        "order": 1,
        "width": "29",
        "height": "4",
        "name": "Check Books Out ",
        "label": "",
        "format": "<font size=\"20\">{{value}}</font>",
        "layout": "row-center",
        "x": 3110,
        "y": 940,
        "wires": []
    },
    {
        "id": "b7749fde.b5118",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Check Out Books",
        "payloadType": "str",
        "x": 2910,
        "y": 940,
        "wires": [
            [
                "5bc97609.c174c8"
            ]
        ]
    },
    {
        "id": "24128125.99745e",
        "type": "ui_text",
        "z": "c62c8283.c1917",
        "group": "3f873bc7.b700a4",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "serial number",
        "label": "",
        "format": "<font size=32>{{value | uppercase}}</font>",
        "layout": "row-center",
        "x": 540,
        "y": 180,
        "wires": []
    },
    {
        "id": "5055a75d.215e38",
        "type": "inject",
        "z": "c62c8283.c1917",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "SID400-GHS-01",
        "payloadType": "str",
        "x": 290,
        "y": 180,
        "wires": [
            [
                "24128125.99745e"
            ]
        ]
    },
    {
        "id": "519e76e6.e0acc8",
        "type": "ui_text",
        "z": "c09aa471.ec0fd8",
        "group": "b49f5713.f00ba8",
        "order": 1,
        "width": "21",
        "height": "4",
        "name": "Check Books In ",
        "label": "",
        "format": "<font size=\"20\">{{value}}</font>",
        "layout": "row-center",
        "x": 3460,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7f46e3c1.aa9b4c",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Check In Books",
        "payloadType": "str",
        "x": 3260,
        "y": 1000,
        "wires": [
            [
                "519e76e6.e0acc8"
            ]
        ]
    },
    {
        "id": "c1f98603.935c38",
        "type": "ui_button",
        "z": "c09aa471.ec0fd8",
        "name": "Alarm / Scan Status",
        "group": "71d64cdb.f2b804",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "<font size=\"30\">{{value | uppercase}}</font>",
        "tooltip": "",
        "color": "GRAY",
        "bgcolor": "BLACK",
        "icon": "",
        "payload": "clicked",
        "payloadType": "str",
        "topic": "",
        "x": 960,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "c56fcbf7.c61f48",
        "type": "ui_slider",
        "z": "b9db4507.e61788",
        "name": "portPwr",
        "label": "Port 1",
        "tooltip": "",
        "group": "6e2cc3.4361d33c",
        "order": 2,
        "width": 2,
        "height": 6,
        "passthru": true,
        "outs": "end",
        "topic": "portCtl",
        "min": "1000",
        "max": "3150",
        "step": "10",
        "x": 1600,
        "y": 520,
        "wires": [
            [
                "58833e1f.268ef",
                "dafd3954.f7d638"
            ]
        ]
    },
    {
        "id": "4860fa7d.447474",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "run at start +1sec",
        "info": "",
        "x": 1140,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c4c775d7.92bec8",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "context file from context",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1180,
        "y": 1080,
        "wires": [
            [
                "5f2ae10.274af2",
                "fd3d90f6.1a1fa"
            ]
        ]
    },
    {
        "id": "dbd77caf.05934",
        "type": "file",
        "z": "b9db4507.e61788",
        "name": "",
        "filename": "/home/pi/SIDS/context",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2140,
        "y": 1080,
        "wires": [
            [
                "af406151.b69ed"
            ]
        ]
    },
    {
        "id": "523ecbe9.3d5674",
        "type": "json",
        "z": "b9db4507.e61788",
        "name": "Obj to Json",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1930,
        "y": 1080,
        "wires": [
            [
                "dbd77caf.05934"
            ]
        ]
    },
    {
        "id": "9859b56f.fa3578",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "context file Json",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Context\":\"global\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set tagMsk\",\"command\":\"setMsk\",\"data\":\"E280-1160-6000-XXXX-XXXX-XXXX\"},{\"Rem\":\"Set wrMsk\",\"command\":\"setWrMsk\",\"data\":\"E280-1160-6001-XXXX-XXXX-XXXX\"},{\"Rem\":\"Set alarm volume\",\"command\":\"alarmVol\",\"data\":65},{\"Rem\":\"Set alarm enable\",\"command\":\"alarmEn\",\"data\":\"false\"},{\"Rem\":\"Set GPIO enable\",\"command\":\"gpioEn\",\"data\":\"false\"},{\"Rem\":\"Set GPIO on time\",\"command\":\"gpioTm\",\"data\":3},{\"Rem\":\"set P1 Power\",\"command\":\"P1pwr\",\"data\":2300},{\"Rem\":\"set P2 Power\",\"command\":\"P2pwr\",\"data\":2300},{\"Rem\":\"set P3 Power\",\"command\":\"P3pwr\",\"data\":2300},{\"Rem\":\"set 4 Power\",\"command\":\"P4pwr\",\"data\":2300},{\"Rem\":\"set all Power\",\"command\":\"PxPwr\",\"data\":2300},{\"Rem\":\"set P1 enable\",\"command\":\"P1en\",\"data\":\"P1 enable\"},{\"Rem\":\"set P2 enable\",\"command\":\"P2en\",\"data\":\"P2 enable\"},{\"Rem\":\"set P3 enable\",\"command\":\"P3en\",\"data\":\"P3 enable\"},{\"Rem\":\"set P4 enable\",\"command\":\"P4en\",\"data\":\"P4 enable\"}]}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 1080,
        "wires": [
            [
                "9a3d84a1.1b00d8"
            ]
        ]
    },
    {
        "id": "9a3d84a1.1b00d8",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "set context",
        "func": "\n// MUST match set cmd buf\nconst setMsk = 0, setWrMsk = 1, alarmVol = 2, alarmEn = 3, gpioEn = 4, gpioTm = 5;\nconst P1pwr = 6, P2pwr = 7, P3pwr = 8, P4pwr = 9, PxPwr = 10;\nconst P1en = 11, P2en = 12, P3en = 13, P4en = 14;\n\nvar cmdCnt = msg.payload[0].Commands.length;\nvar cmdsAryObj =Array.from(msg.payload[0]);\n\n    msg.payload[0].Commands[setMsk].data = global.get(\"tagMsk\");\n\n    msg.payload[0].Commands[setWrMsk].data = global.get(\"wrMsk\");\n\n    msg.payload[0].Commands[alarmVol].data = global.get(\"alarmVol\");\n\n    msg.payload[0].Commands[alarmEn].data = global.get(\"alarmEn\");\n\n    msg.payload[0].Commands[gpioEn].data = global.get(\"gpioEn\");\n\n    msg.payload[0].Commands[gpioTm].data = global.get(\"gpioTm\");\n\n    msg.payload[0].Commands[PxPwr].data = global.get(\"PxPwr\");\n    \n    msg.payload[0].Commands[P1pwr].data = global.get(\"P1pwr\");\n\n    msg.payload[0].Commands[P2pwr].data = global.get(\"P2pwr\");\n\n    msg.payload[0].Commands[P3pwr].data = global.get(\"P3pwr\");\n\n    msg.payload[0].Commands[P4pwr].data = global.get(\"P4pwr\");\n\n    msg.payload[0].Commands[P1en].data = global.get(\"P1en\");\n\n    msg.payload[0].Commands[P2en].data = global.get(\"P2en\");\n\n    msg.payload[0].Commands[P3en].data = global.get(\"P3en\");\n\n    msg.payload[0].Commands[P4en].data = global.get(\"P4en\");\n\n\n\n//    console.debug(\"cmdsAry type %s\", typeof cmdsAryObj);\n//    console.debug(\"cmd cnt %d cmds %s\",cmdCnt,cmdsAryObj);\n\n//    console.debug(cmdsAryObj);\n    \n//    cmdsAryObj.Commands[setMsk].data = global.get(\"tagMsk\")\n//    cmdsAryObj.Commands[setVolume].data = global.get(\"volume\");\n\n//    msg.payload = cmdsAryObj;\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n//const init = 0, port0en = 0, port0dis = 1, port1en = 0, port1dis = 1, port2en = 0, port2dis = 1, port3en = 0, port3dis = 1;\n\n//    context.set(\"stateSav\",init);\n    \n//    global.set(\"tagMsk\",null);\n//    global.set(\"volume\",60);",
        "finalize": "",
        "x": 1750,
        "y": 1080,
        "wires": [
            [
                "523ecbe9.3d5674"
            ]
        ]
    },
    {
        "id": "5f2ae10.274af2",
        "type": "ui_button",
        "z": "b9db4507.e61788",
        "name": "RF Save",
        "group": "5e979462.41424c",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1380,
        "y": 1060,
        "wires": [
            [
                "9859b56f.fa3578",
                "20dc4eed.b3add2"
            ]
        ]
    },
    {
        "id": "200233c.9c8cbcc",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "set cmd buf",
        "func": "\n// MUST match set cmd buf and JSC SID400 Cmd\n\nconst setPxPwr = 0, setP1en = 2,  setP2en = 3, setP3en = 4, setP4en = 5; \n\n//const setMsk = 0, setWrMsk = 1, alarmVol = 2, alarmEn = 3, gpioEn = 4, gpioTm = 5;\n//const P1pwr = 6, P2pwr = 7, P3pwr = 8, P4pwr = 9, PxPwr = 10;\n//const P1en = 11, P2en = 12, P3en = 13, P4en = 14;\n\n    let cmdObj = [];\n\nfunction setCmd(rem, cmd, data) {\n\n//    console.debug(\"rem = %s cmd = %s data = \",rem, cmd, data);\n\n    switch(cmd){\n        \n        case 'setMsk':\n        case 'setWrMsk':\n        case 'alarmVol':\n        case 'alarmEn':\n        case 'gpioEn':\n        case 'gpioTm':\n                break;\n            \n        case 'PxPwr':\n            cmdObj.Commands[setPxPwr].Data0 = data;\n            break;\n\n        case 'P1pwr':\n            break;\n            \n        case 'P2pwr':\n            break;\n            \n        case 'P3pwr':\n            break;\n            \n        case 'P4pwr':\n            break;\n           \n        case 'P1en':\n            if(data === \"P1 enable\")\n                data = 1;\n            else{\n                if(data === \"P1 disable\")\n                        data = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdObj.Commands[setP1en].Data2 = data;\n            break;\n            \n        case 'P2en':\n            if(data === \"P2 enable\")\n                data = 2;\n            else{\n                if(data === \"P2 disable\")\n                        data = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdObj.Commands[setP2en].Data2 = data;\n            break;\n\n        case 'P3en':\n            if(data === \"P3 enable\")\n                data = 3;\n            else{\n                if(data === \"P3 disable\")\n                        data = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdObj.Commands[setP3en].Data2 = data;\n            break;\n\n        case 'P4en':\n            if(data === \"P4 enable\")\n                data = 4;\n            else{\n                if(data === \"P4 disable\")\n                        data = 0;\n                else\n                    console.debug(\"command error\");\n            }\n            cmdObj.Commands[setP4en].Data2 = data;\n            break;\n\n        default:\n            console.error(\"bad cmd %s\",cmd);\n    } \n}\n\n    \n    var i, cmdAry, cmdCnt, conAry;\n    \n    if(msg.context !== undefined) {\n        conAry = Array.from(msg.context[0].Commands);\n        context.set(\"conAry\",conAry);\n        context.set(\"gotCon\",true);\n    }\n    if(msg.cmd !== undefined) {\n        cmdObj = msg.cmd\n        context.set(\"cmdObj\",cmdObj);\n        context.set(\"gotCmd\",true);\n    }\n\n    msg.payload = undefined;\n\n    if(context.get(\"gotCon\")===true & context.get(\"gotCmd\")===true){\n    \n        cmdObj = context.get(\"cmdObj\");\n        \n        conAry = context.get(\"conAry\");   \n        conCnt = conAry.length;\n    \n        for(i=0;i<conCnt;i++){\n            setCmd(conAry[i].Rem,conAry[i].command,conAry[i].data);  \n        }\n\n        msg.payload = cmdObj;\n    }\n\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n//const init = 0, port0en = 0, port0dis = 1, port1en = 0, port1dis = 1, port2en = 0, port2dis = 1, port3en = 0, port3dis = 1;\n\n//    context.set(\"stateSav\",init);\n    context.set(\"gotCon\",false);\n    context.set(\"gotCmd\",false);\n    \n",
        "finalize": "",
        "x": 2170,
        "y": 1200,
        "wires": [
            [
                "1686433c.605cfd"
            ]
        ]
    },
    {
        "id": "af406151.b69ed",
        "type": "file in",
        "z": "b9db4507.e61788",
        "name": "",
        "filename": "/home/pi/SIDS/context",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1420,
        "y": 1200,
        "wires": [
            [
                "1b8d496e.7f2dc7"
            ]
        ]
    },
    {
        "id": "1b8d496e.7f2dc7",
        "type": "json",
        "z": "b9db4507.e61788",
        "name": "Json to Obj",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1630,
        "y": 1200,
        "wires": [
            [
                "52b7403e.29e25"
            ]
        ]
    },
    {
        "id": "90b03e49.69e7e",
        "type": "inject",
        "z": "b9db4507.e61788",
        "name": "SID400 from context file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1170,
        "y": 1220,
        "wires": [
            [
                "af406151.b69ed",
                "5c0b9026.9fcc7"
            ]
        ]
    },
    {
        "id": "1686433c.605cfd",
        "type": "json",
        "z": "b9db4507.e61788",
        "name": "Obj to Json",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 2350,
        "y": 1200,
        "wires": [
            [
                "999d3bf0.629cb8"
            ]
        ]
    },
    {
        "id": "fd3d90f6.1a1fa",
        "type": "ui_button",
        "z": "b9db4507.e61788",
        "name": "App Save",
        "group": "ea450fb4.c60d1",
        "order": 1,
        "width": "3",
        "height": 1,
        "passthru": true,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1380,
        "y": 1100,
        "wires": [
            [
                "9859b56f.fa3578"
            ]
        ]
    },
    {
        "id": "935e80f2.36ef3",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "set hardware from context file",
        "info": "",
        "x": 900,
        "y": 1220,
        "wires": []
    },
    {
        "id": "999d3bf0.629cb8",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "add \"json\" to CMD",
        "func": "    var strIn = msg.payload;\n    if(msg.payload !== undefined)\n        msg.payload = \"json \" + strIn;\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n//    flow.set(\"epcWrState\",\"\")",
        "finalize": "",
        "x": 2550,
        "y": 1200,
        "wires": [
            [
                "e342480d.5ab728"
            ]
        ]
    },
    {
        "id": "b890f564.ee0578",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "msg.cmd = Cmd",
        "rules": [
            {
                "t": "set",
                "p": "cmd",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 1240,
        "wires": [
            [
                "b9d75654.6dd4b8"
            ]
        ]
    },
    {
        "id": "52b7403e.29e25",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "context",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 1200,
        "wires": [
            [
                "200233c.9c8cbcc"
            ]
        ]
    },
    {
        "id": "cfcf5989.f3ed48",
        "type": "json",
        "z": "b9db4507.e61788",
        "name": "Json to Obj",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1610,
        "y": 1240,
        "wires": [
            [
                "b890f564.ee0578"
            ]
        ]
    },
    {
        "id": "5c0b9026.9fcc7",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "JSC SID400 Cmd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set Antenna power\",\"Command\":1,\"Key\":49,\"Data0\":2823},{\"Rem\":\"Get Antenna power\",\"Command\":8,\"Key\":49,\"Data0\":0,\"Data1\":0,\"Data2\":0},{\"Rem\":\"Set Antenna Logical 0\",\"Command\":4,\"Key\":50,\"Data0\":0,\"Data1\":0,\"Data2\":1},{\"Rem\":\"Set Antenna Logical 1\",\"Command\":4,\"Key\":50,\"Data0\":0,\"Data1\":1,\"Data2\":2},{\"Rem\":\"Set Antenna Logical 2\",\"Command\":4,\"Key\":50,\"Data0\":0,\"Data1\":2,\"Data2\":3},{\"Rem\":\"Set Antenna Logical 3\",\"Command\":4,\"Key\":50,\"Data0\":0,\"Data1\":3,\"Data2\":4},{\"Rem\":\"Get Antenna Logical 0\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":0},{\"Rem\":\"Get Antenna Logical 1\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":1},{\"Rem\":\"Get Antenna Logical 2\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":2},{\"Rem\":\"Get Antenna Logical 3\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":3}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 1240,
        "wires": [
            [
                "cfcf5989.f3ed48"
            ]
        ]
    },
    {
        "id": "b9d75654.6dd4b8",
        "type": "json",
        "z": "b9db4507.e61788",
        "name": "Json to Obj",
        "property": "cmd",
        "action": "",
        "pretty": true,
        "x": 1990,
        "y": 1240,
        "wires": [
            [
                "200233c.9c8cbcc"
            ]
        ]
    },
    {
        "id": "e342480d.5ab728",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "runFile",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "80dedd5e.528a8",
        "type": "comment",
        "z": "d3a16a66.2fe6b8",
        "name": "run at start +1sec",
        "info": "",
        "x": 360,
        "y": 540,
        "wires": []
    },
    {
        "id": "a66b3938.3f4978",
        "type": "inject",
        "z": "d3a16a66.2fe6b8",
        "name": "context file from context",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 500,
        "wires": [
            [
                "71b7c111.6729f"
            ]
        ]
    },
    {
        "id": "653af887.b8e438",
        "type": "file",
        "z": "d3a16a66.2fe6b8",
        "name": "",
        "filename": "/home/pi/SIDS/context",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1360,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "84c0aa8f.9d5468",
        "type": "json",
        "z": "d3a16a66.2fe6b8",
        "name": "Obj to Json",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1150,
        "y": 500,
        "wires": [
            [
                "653af887.b8e438"
            ]
        ]
    },
    {
        "id": "28a88793.7ca1f8",
        "type": "change",
        "z": "d3a16a66.2fe6b8",
        "name": "context file Json",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"Context\":\"JCI alarm\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set tagMsk\",\"command\":\"setMsk\",\"data\":\"E280-1160-6000-XXXX-XXXX-XXXX\"},{\"Rem\":\"Set inMsk\",\"command\":\"setInMsk\",\"data\":\"E280-1160-6001-XXXX-XXXX-XXXX\"},{\"Rem\":\"Set alarm volume\",\"command\":\"alarmVol\",\"data\":65},{\"Rem\":\"Set alarm enable\",\"command\":\"alarmEn\",\"data\":\"false\"},{\"Rem\":\"Set GPIO enable\",\"command\":\"gpioEn\",\"data\":\"false\"},{\"Rem\":\"Set GPIO on time\",\"command\":\"gpioTm\",\"data\":3},{\"Rem\":\"set P1 Power\",\"command\":\"P1pwr\",\"data\":2300},{\"Rem\":\"set P2 Power\",\"command\":\"P2pwr\",\"data\":2300},{\"Rem\":\"set P3 Power\",\"command\":\"P3pwr\",\"data\":2300},{\"Rem\":\"set 4 Power\",\"command\":\"P4pwr\",\"data\":2300},{\"Rem\":\"set all Power\",\"command\":\"PxPwr\",\"data\":2300},{\"Rem\":\"set P1 enable\",\"command\":\"P1en\",\"data\":\"P1 enable\"},{\"Rem\":\"set P2 enable\",\"command\":\"P2en\",\"data\":\"P2 enable\"},{\"Rem\":\"set P3 enable\",\"command\":\"P3en\",\"data\":\"P3 enable\"},{\"Rem\":\"set P4 enable\",\"command\":\"P4en\",\"data\":\"P4 enable\"}]}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 500,
        "wires": [
            [
                "d2e80cfd.2e07a"
            ]
        ]
    },
    {
        "id": "d2e80cfd.2e07a",
        "type": "function",
        "z": "d3a16a66.2fe6b8",
        "name": "set context",
        "func": "const setMsk = 0, setInMsk = 1, alarmVol = 2, alarmEn = 3, gpioEn = 4, gpioTm = 5;\nconst P1pwr = 6, P2pwr = 7, P3pwr = 8, P4pwr = 9, PxPwr = 10;\nconst P1en = 11, P2en = 12, P3en = 13, P4en = 14;\n\nvar cmdCnt = msg.payload[0].Commands.length;\nvar cmdsAryObj =Array.from(msg.payload[0]);\n\n    msg.payload[0].Commands[setMsk].data = global.get(\"tagMsk\");\n\n    msg.payload[0].Commands[setInMsk].data = global.get(\"inMsk\");\n\n    msg.payload[0].Commands[alarmVol].data = global.get(\"alarmVol\");\n\n    msg.payload[0].Commands[alarmEn].data = global.get(\"alarmEn\");\n\n    msg.payload[0].Commands[gpioEn].data = global.get(\"gpioEn\");\n\n    msg.payload[0].Commands[gpioTm].data = global.get(\"gpioTm\");\n\n    msg.payload[0].Commands[PxPwr].data = global.get(\"PxPwr\");\n    \n    msg.payload[0].Commands[P1pwr].data = global.get(\"P1pwr\");\n\n    msg.payload[0].Commands[P2pwr].data = global.get(\"P2pwr\");\n\n    msg.payload[0].Commands[P3pwr].data = global.get(\"P3pwr\");\n\n    msg.payload[0].Commands[P4pwr].data = global.get(\"P4pwr\");\n\n    msg.payload[0].Commands[P1en].data = global.get(\"P1en\");\n\n    msg.payload[0].Commands[P2en].data = global.get(\"P2en\");\n\n    msg.payload[0].Commands[P3en].data = global.get(\"P3en\");\n\n    msg.payload[0].Commands[P4en].data = global.get(\"P4en\");\n\n\n\n//    console.debug(\"cmdsAry type %s\", typeof cmdsAryObj);\n//    console.debug(\"cmd cnt %d cmds %s\",cmdCnt,cmdsAryObj);\n\n//    console.debug(cmdsAryObj);\n    \n//    cmdsAryObj.Commands[setMsk].data = global.get(\"tagMsk\")\n//    cmdsAryObj.Commands[setVolume].data = global.get(\"volume\");\n\n//    msg.payload = cmdsAryObj;\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n//const init = 0, port0en = 0, port0dis = 1, port1en = 0, port1dis = 1, port2en = 0, port2dis = 1, port3en = 0, port3dis = 1;\n\n//    context.set(\"stateSav\",init);\n    \n//    global.set(\"tagMsk\",null);\n//    global.set(\"volume\",60);",
        "finalize": "",
        "x": 970,
        "y": 500,
        "wires": [
            [
                "84c0aa8f.9d5468"
            ]
        ]
    },
    {
        "id": "fecb1209.0e65e",
        "type": "function",
        "z": "d3a16a66.2fe6b8",
        "name": "set cmd buf",
        "func": "const port0 = 0, port1 = 1, port2 = 2, port3 = 3;\nconst setPwr = 1, setAnt1 = 2, setAnt2 = 3, setAnt3 = 4, setAnt4 = 5;               // command entry number in config file\n//var state = context.get(\"stateSav\");\n//var tstStr = null;\n\n    var data2;\n    \nfunction setCmd(rem, cmd, option) {\n//function setCmd(cmdObj, cmd, option) {\n    var data2;\n    \n    switch(cmd){\n        \n        case 'setMsk':\n        case 'setWrMsk':\n        case 'alarmVol':\n        case 'alarmEn':\n        case 'gpioEn':\n        case 'gpioTm':\n                break;\n            \n        case 'PxPwr':\n//            msg.cmd[0].Commands[5].Data0 = option;\n            break;\n/*\n        case 'P1pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n            \n        case 'P2pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n            \n        case 'P3pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n            \n        case 'P4pwr':\n            console.debug(\"not implemented: \",rem, cmd, option);\n            break;\n*/            \n        case 'P1en':\n            if(option === \"P1 enable\")\n                data2 = 1;\n            else{\n                if(option === \"P1 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n//            msg.cmd[0].Commands[1].Data1 = data2;\n            break;\n            \n        case 'P2en':\n            if(option === \"P2 enable\")\n                data2 = 2;\n            else{\n                if(option === \"P2 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n//             msg.cmd[0].Commands[2].Data1 = data2;\n             break;\n\n        case 'P3en':\n            if(option === \"P3 enable\")\n                data2 = 3;\n            else{\n                if(option === \"P3 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n//            msg.cmd[0].Commands[3].Data1 = data2;\n            break;\n\n        case 'P4en':\n            if(option === \"P4 enable\")\n                data2 = 4;\n            else{\n                if(option === \"P4 disable\")\n                        data2 = 0;\n                else\n                    console.debug(\"command error\");\n            }\n//            msg.cmd[0].Commands[4].Data1 = data2;\n            break;\n\n        default:\n            console.error(\"bad cmd %s\",cmd);\n    } \n}\n\nvar cmdCnt = msg.payload[0].Commands.length;\nvar cmdAry =Array.from(msg.payload);\n\nconsole.debug(\"cmdCnt %d\", cmdCnt);\n\n    if(cmdCnt === 0) {                              // if no commands, return JsonCmd[0] as payload\n        cmdObj.push(msg.payload.JsonCmd[0]);\n        msg.payload = cmdObj;\n        return msg;\n    }\n\nvar cmd = null\n\n\n    for(i=0;i<cmdCnt;i++){\n        setCmd(msg.payload[0].Commands[i].Rem,msg.payload[0].Commands[i].command,msg.payload[0].Commands[i].data);   \n    }\n\n    msg.payload = msg.cmd;\n\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n//const init = 0, port0en = 0, port0dis = 1, port1en = 0, port1dis = 1, port2en = 0, port2dis = 1, port3en = 0, port3dis = 1;\n\n//    context.set(\"stateSav\",init);\n    \n",
        "finalize": "",
        "x": 1030,
        "y": 580,
        "wires": [
            [
                "6f3228e7.d58a88",
                "9d5ec95f.e43ee8",
                "4f6e7dfb.ff4524"
            ]
        ]
    },
    {
        "id": "f3b11c4b.cb8cb",
        "type": "file in",
        "z": "d3a16a66.2fe6b8",
        "name": "",
        "filename": "/home/pi/SIDS/context",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 640,
        "y": 580,
        "wires": [
            [
                "8a799d0e.7cb1f"
            ]
        ]
    },
    {
        "id": "8a799d0e.7cb1f",
        "type": "json",
        "z": "d3a16a66.2fe6b8",
        "name": "Json to Obj",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 850,
        "y": 580,
        "wires": [
            [
                "fecb1209.0e65e"
            ]
        ]
    },
    {
        "id": "96e9e5de.abc6c8",
        "type": "inject",
        "z": "d3a16a66.2fe6b8",
        "name": "SID400 from context file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 580,
        "wires": [
            [
                "f3b11c4b.cb8cb",
                "bfc933c.92af1d"
            ]
        ]
    },
    {
        "id": "6f3228e7.d58a88",
        "type": "json",
        "z": "d3a16a66.2fe6b8",
        "name": "Obj to Json",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1210,
        "y": 580,
        "wires": [
            [
                "39f35a4f.b38666"
            ]
        ]
    },
    {
        "id": "71b7c111.6729f",
        "type": "ui_button",
        "z": "d3a16a66.2fe6b8",
        "name": "App Save",
        "group": "ea450fb4.c60d1",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 600,
        "y": 520,
        "wires": [
            [
                "28a88793.7ca1f8"
            ]
        ]
    },
    {
        "id": "39f35a4f.b38666",
        "type": "function",
        "z": "d3a16a66.2fe6b8",
        "name": "add \"json\" to CMD",
        "func": " var strIn = msg.payload;\n msg.payload = \"json \" + strIn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n//    flow.set(\"epcWrState\",\"\")",
        "finalize": "",
        "x": 1410,
        "y": 580,
        "wires": [
            [
                "b6d4487.488a9b8"
            ]
        ]
    },
    {
        "id": "b6d4487.488a9b8",
        "type": "link out",
        "z": "d3a16a66.2fe6b8",
        "name": "",
        "links": [
            "cc8d7c03.f6d7f"
        ],
        "x": 1555,
        "y": 600,
        "wires": []
    },
    {
        "id": "9d5ec95f.e43ee8",
        "type": "change",
        "z": "d3a16a66.2fe6b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sidsCmd",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 660,
        "wires": [
            [
                "c58988f.9e9e778"
            ]
        ]
    },
    {
        "id": "bfc933c.92af1d",
        "type": "change",
        "z": "d3a16a66.2fe6b8",
        "name": "JSC SID400 Cmd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set Antenna Sequence 1\",\"Command\":4,\"Key\":50,\"Data0\":0,\"Data1\":1},{\"Rem\":\"Get Antenna Sequence 1\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":1},{\"Rem\":\"Get Antenna Sequence 2\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":2},{\"Rem\":\"Get Antenna Sequence 3\",\"Command\":8,\"Key\":50,\"Data0\":0,\"Data1\":3},{\"Rem\":\"Set Antenna Sequence 4\",\"Command\":4,\"Key\":50,\"Data0\":3,\"Data1\":4},{\"Rem\":\"Set Antenna power\",\"Command\":1,\"Key\":49,\"Data0\":1610}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 640,
        "wires": [
            [
                "fb89277d.280598"
            ]
        ]
    },
    {
        "id": "40f155ad.6597dc",
        "type": "inject",
        "z": "d3a16a66.2fe6b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 640,
        "wires": [
            [
                "bfc933c.92af1d"
            ]
        ]
    },
    {
        "id": "c58988f.9e9e778",
        "type": "json",
        "z": "d3a16a66.2fe6b8",
        "name": "Obj to Json",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1410,
        "y": 660,
        "wires": [
            [
                "49405a0c.8a2294"
            ]
        ]
    },
    {
        "id": "49405a0c.8a2294",
        "type": "function",
        "z": "d3a16a66.2fe6b8",
        "name": "add \"json\" to CMD",
        "func": " var strIn = msg.payload;\n msg.payload = \"json \" + strIn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n//    flow.set(\"epcWrState\",\"\")",
        "finalize": "",
        "x": 1610,
        "y": 660,
        "wires": [
            [
                "b6d4487.488a9b8"
            ]
        ]
    },
    {
        "id": "fb89277d.280598",
        "type": "json",
        "z": "d3a16a66.2fe6b8",
        "name": "Json to Obj",
        "property": "cmd",
        "action": "",
        "pretty": true,
        "x": 850,
        "y": 640,
        "wires": [
            [
                "fecb1209.0e65e"
            ]
        ]
    },
    {
        "id": "4f6e7dfb.ff4524",
        "type": "debug",
        "z": "d3a16a66.2fe6b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 700,
        "wires": []
    },
    {
        "id": "6021bbc5.db1874",
        "type": "change",
        "z": "b9db4507.e61788",
        "name": "PxPwr Gobal",
        "rules": [
            {
                "t": "set",
                "p": "PxPwr",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 420,
        "wires": [
            [
                "883afc0f.6f117"
            ]
        ]
    },
    {
        "id": "883afc0f.6f117",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "add cmd",
        "func": "\n//global.set(\"Ppwr\",msg.payload);\nmsg.payload = \"portPwr \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1960,
        "y": 420,
        "wires": [
            [
                "c0bbee51.80ff7"
            ]
        ]
    },
    {
        "id": "c0bbee51.80ff7",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "6192bd7c.c883a4"
        ],
        "x": 2075,
        "y": 420,
        "wires": []
    },
    {
        "id": "9ce37ba9.27b788",
        "type": "comment",
        "z": "b9db4507.e61788",
        "name": "sid400 cmd",
        "info": "",
        "x": 2190,
        "y": 420,
        "wires": []
    },
    {
        "id": "ca73799f.f3df28",
        "type": "link in",
        "z": "b9db4507.e61788",
        "name": "",
        "links": [
            "557d0b2.e7f66f4"
        ],
        "x": 1475,
        "y": 440,
        "wires": [
            [
                "184c5d22.06ff13"
            ]
        ]
    },
    {
        "id": "20dc4eed.b3add2",
        "type": "function",
        "z": "b9db4507.e61788",
        "name": "force port 1",
        "func": "\n\n    if(global.get(\"P1en\") === \"P1 disable\" & global.get(\"P2en\") === \"P2 disable\" & global.get(\"P3en\") === \"P3 disable\" & global.get(\"P4en\") === \"P4 disable\") {\n        global.set(\"P1en\",\"P1 enable\");\n    }\n    \n    msg.payload = global.get(\"P1en\");\n\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1570,
        "y": 1040,
        "wires": [
            [
                "557d0b2.e7f66f4"
            ]
        ]
    },
    {
        "id": "557d0b2.e7f66f4",
        "type": "link out",
        "z": "b9db4507.e61788",
        "name": "P1en dash up",
        "links": [
            "ca73799f.f3df28"
        ],
        "x": 1675,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fe4fcaf4.e0c608",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "name": "SIDS cmd",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1360,
        "wires": []
    },
    {
        "id": "bb2128d0.457698",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "name": "Get EPC IO msk",
        "func": "    function getInOutMsk(outMsk,inMsk) {\n    var i, ret, retInMsk = \"\", retOutMsk = \"\", inMskAry = [], outMskAry = [];\n    let mskObj = [];\n    \n        mskLength = 29;\n    \n        if(outMsk.length !== mskLength)\n            return(false);\n    \n        if(inMsk.length !== mskLength)\n            return(false);\n    \n        inMskAry = inMsk.split('');\n        outMskAry = outMsk.split('');\n    \n        ret = true;\n        for(i=0;i<mskLength;i++) {\n            \n            if(inMskAry[i] !== outMskAry[i]) {\n                retInMsk += inMskAry[i];\n                retOutMsk += outMskAry[i];\n                continue;\n            }\n    \n            if((inMskAry[i] === 'X') | (outMskAry[i] === 'X')) {\n                retInMsk += 'X';\n                retOutMsk += 'X';\n                continue;\n            }\n    \n            if(inMskAry[i] === outMskAry[i]) {\n                retInMsk += 'M';\n                retOutMsk += 'M';\n                continue;\n            }\n        }\n        \n        // \"inMsk\" = mask to use to convert from in EPC to out EPC\n        // \"outMsk\" = mask to use to convert from out EPC to in EPC\n        \n        mskObj.push({\"inMsk\":retOutMsk, \"outMsk\": retInMsk});\n\n        flow.set(\"EpcIOmsk\",mskObj);\n        return(mskObj);\n    }\n    \n    \n    msg.payload = getInOutMsk(global.get(\"tagMsk\"),global.get(\"wrMsk\"));\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1380,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "f278cb33.963b18",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "dda93803.15c438",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1140,
        "y": 1840,
        "wires": [
            [
                "bb2128d0.457698"
            ]
        ]
    },
    {
        "id": "79ec0bf3.21ef44",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "Get EPC IO msk",
        "func": "    let mskObj = [];     \n    \n    function setInOutMsk() {\n        \n        var retOutMsk  = \"MMMMMMMMMMMMMMM0XXXMXXXXMXXXX\";    \n        var retInMsk = \"MMMMMMMMMMMMMMM1XXXMXXXXMXXXX\";    \n        \n        mskObj.push({\"inMsk\":retOutMsk, \"outMsk\": retInMsk});\n        \n        flow.set(\"EpcIOmsk\",mskObj);\n        return(mskObj);\n    }\n\n        // \"inMsk\" = mask to use to convert from in EPC to out EPC\n        // \"outMsk\" = mask to use to convert from out EPC to in EPC\n\n    setInOutMsk();\n    console.debug(\"mskObj\", mskObj);\n    msg.payload = getInOutMsk(global.get(\"chkInMsk\"),global.get(\"chkOutMsk\"));\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1360,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "701637d2.dbfcd8",
        "type": "link out",
        "z": "c09aa471.ec0fd8",
        "name": "epc deselect",
        "links": [
            "977addfd.a5da2",
            "99f57293.0d5e3"
        ],
        "x": 855,
        "y": 1300,
        "wires": []
    },
    {
        "id": "894fb28f.7dad5",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "runCmd",
        "info": "",
        "x": 970,
        "y": 1300,
        "wires": []
    },
    {
        "id": "977addfd.a5da2",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "runCmd",
        "links": [
            "701637d2.dbfcd8"
        ],
        "x": 875,
        "y": 1360,
        "wires": [
            [
                "fe4fcaf4.e0c608"
            ]
        ]
    },
    {
        "id": "99f57293.0d5e3",
        "type": "link in",
        "z": "c09aa471.ec0fd8",
        "name": "runCmd",
        "links": [
            "701637d2.dbfcd8"
        ],
        "x": 2475,
        "y": 1160,
        "wires": [
            [
                "e0b875c8.bcdb28"
            ]
        ]
    },
    {
        "id": "a303b359.535c7",
        "type": "comment",
        "z": "c09aa471.ec0fd8",
        "name": "runCmd",
        "info": "",
        "x": 2390,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c4f3e6b4.fdcc38",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SidsCmdRsp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1300,
        "wires": [
            [
                "24449c1d.9f9b14",
                "184bcdcd.3f65a2"
            ]
        ]
    },
    {
        "id": "7eb2ba72.ad1e94",
        "type": "comment",
        "z": "4319fbc9.0bc754",
        "name": "wr EPC flow",
        "info": "",
        "x": 1190,
        "y": 580,
        "wires": []
    },
    {
        "id": "d20fc231.ca4fe",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "JSC SID400 Cmd",
        "rules": [
            {
                "t": "set",
                "p": "sidsCmd",
                "pt": "flow",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"Set Flags\",\"Command\":1,\"Key\":161,\"Data0\":867},{\"Rem\":\"Run Inventory\",\"Command\":2,\"Key\":0,\"Data0\":500,\"ExData\":0}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1280,
        "wires": [
            [
                "94fec830.ad7588"
            ]
        ]
    },
    {
        "id": "3aad46ac.1a8bca",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1260,
        "y": 1280,
        "wires": [
            [
                "d20fc231.ca4fe"
            ]
        ]
    },
    {
        "id": "e2e146be.226318",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "JSC tag select disable",
        "rules": [
            {
                "t": "set",
                "p": "sidsCmd",
                "pt": "flow",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"E_IPJ_KEY_SELECT_ENABLE, false\",\"Command\":1,\"Key\":80,\"Data0\":1},{\"Rem\":\"E_IPJ_KEY_INVENTORY_SELECT_FLAG, E_IPJ_INVENTORY_SELECT_FLAG_SL\",\"Command\":1,\"Key\":65,\"Data0\":1}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "c42a0db1.5f941",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "name": "EpcWrVal = E280-1160-6001-2000-2000-1234",
        "rules": [
            {
                "t": "set",
                "p": "EpcWrVal",
                "pt": "flow",
                "to": "E280-1160-6001-2000-2000-1234",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 720,
        "wires": [
            [
                "c5b709e7.cbd0d8"
            ]
        ]
    },
    {
        "id": "8af93c55.dfab9",
        "type": "inject",
        "z": "c09aa471.ec0fd8",
        "name": "check out",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1150,
        "y": 720,
        "wires": [
            [
                "c42a0db1.5f941"
            ]
        ]
    },
    {
        "id": "7ce06c1.0f9ab94",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "",
        "func": "const inits = 1, invStrt = 2, invWt = 3, invDspAry = 4, invDspWt = 5, epcSel = 6 ;\nconst epcSelWt = 7, gotEpcSetWt = 8, epcWr = 9, epcWrWt = 10, epcDeSel = 11 ;\nconst epcDeSelWt = 12, epcWrClr = 13, epcWrClrWt = 14, runCmdWt = 15;\n\nvar state       = context.get(\"stateSav\");\nvar tmr         = context.get(\"stateTmr\");\nvar wtTm        = context.get(\"stateWtTm\");\nvar sidsCmdRsp  = context.get(\"sidsCmdRsp\");\nvar invenCnt    = context.get(\"invenCnt\");\n\n//console.debug(state);\n\nvar init = null;\nvar inventory = null;\nvar dspEpcs = null;\nvar selEpc = null;\nvar wrEpc = null;\nvar deSelEpc = null;\nvar runCmd = null;\nvar status = null;\n\n\n    if(msg.topic === \"SidsCmdRsp\") {\n        sidsCmdRsp = true;\n    }\n\n    if(msg.topic === \"timer\") {\n        if(msg.payload === true) {\n            tmr++;\n            context.set(\"stateTmr\",tmr)\n//            console.debug(\"timer %d\", tmr);\n        }\n    }\n    \n    if(msg.topic === \"start\") {\n        context.set(\"runState\",\"run\");\n        state = inits;\n    }\n    \n    if(msg.topic === \"stop\"){\n        context.set(\"runState\",\"stop\");\n        state = inits;\n    }\n\n    if(context.get(\"runstate\") === \"stop\")\n        return;\n\n    switch(state) {\n\n        case inits:                                                 // state 1, set out 0, clears all\n            console.debug(\"inits\")\n            status = {payload:\"initializing\"};\n            flow.set(\"epcCmdState\",\"\");\n            state = inits;\n            \n            if(context.get(\"runState\") === \"stop\")\n                break;\n                \n            state = invStrt;\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = runCMd = status = null;\n            break; \n\n        case invStrt:                                               // 2\n\n            runF = global.get(\"runFile\")\n            \n            if(runF !== null) {                                     // state 2, state 0,  set out 6, clears 1\n                runCmd = {payload : runF};\n                global.set(\"runFile\",null);\n                console.debug(runCmd);\n                console.debug(runF);\n                state = runCmdWt;\n                break;\n            }\n\n            console.debug(\"invStrt\")\n            status = {payload:\"scanning\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            inventory = { payload:\"start inventory\" };\n            tmr = 0;\n            state = invWt;\n            break;\n\n       case invWt:                                                  // 3\n            console.debug(\"invWt\")\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                flow.set(\"epcCmdState\",\"\")\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invStrt;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            dspEpcs = { payload:\"dspEpcs\" }; \n            state = invDspAry;\n            break;\n\n        case invDspAry:                                             // 4\n            console.debug(\"invDspAry\")\n            status = {payload:\"updating screen\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            dspEpcs = { payload:\"dspEpcs\" };\n            tmr = 0;\n            state = invDspWt;\n            break;\n            \n        case invDspWt:                                              // 5\n            console.debug(\"invDspWt\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            \n            if(invenCnt !== 0) {\n                invenCnt--;    \n                tmr = 0;\n                state = invStrt;\n                break;\n            }\n            \n            if(flow.get(\"epcCmdState\")  === \"runDspEpcAry\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                state = epcSel;\n                break;\n            }\n            \n            if(tmr <= 8)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"runDspEpcAry time out\");\n            break;\n\n        case epcSel:                                                // 6, setup for epc check in/out to be selected\n            console.debug(\"epcSel\")\n            status = {payload:\"select tags\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            tmr = 0;\n//            state = epcSelWt;\n            state = epcWr;\n            break;\n// skip select            \n        case epcSelWt:                                              // 7, wait for epc to be selected\n            console.debug(\"epcSelWt\")\n            if(flow.get(\"epcCmdState\")  === \"gotEpc\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                selEpc = {payload:\"epcSel\"};\n                state = gotEpcSetWt;\n                break;\n            }\n           \n            if(tmr <= 10)                                           // max wait for complete\n                break;\n\n            state = invStrt;\n            console.debug(\"restart inventory\");\n            break;\n \n        case gotEpcSetWt:                                           // 8\n            console.debug(\"gotEpcSetWt\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            \n            if(flow.get(\"epcCmdState\")  === \"setupEpcWr\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                state = epcWr;\n                break;\n            }\n           \n            if(tmr <= 10)                                // max wait for complete\n                break;\n\n            state = invStrt;\n            console.debug(\"epcSetWt timeout restart inventory\");\n            break;\n\n        case epcWr:                                                 // 9\n            console.debug(\"epcWr\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            wrEpc = { payload:\"wrEpc\" };\n            tmr = 0;\n            state = epcWrWt;\n            break;\n \n        case epcWrWt:                                               // 10\n            console.debug(\"epcWrWt\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            if(flow.get(\"epcCmdState\")  === \"wrEpc\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n// !!!               state = epcDeSel;\n                state = invStrt;\n                break;\n            }\n\n            if(tmr <= 2)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"wrEpc time out\")\n            break;\n \n        case epcDeSel:                                              // 11\n            console.debug(\"epcDeSel\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            deSelEpc = { payload:\"deSelEpc\" };\n            tmr = 0;\n            state = epcDeSelWt;\n            break;\n \n        case epcDeSelWt:                                            // 12\n            console.debug(\"epcDeSelWt\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            if(flow.get(\"epcCmdState\")  === \"deSelEpc\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                state = epcWrClr;\n                break;\n            }\n\n            if(tmr <= 2)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"deSelEpc time out\")\n            break;\n\n\n        case epcWrClr:                                              // 13\n            console.debug(\"epcWrClr\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            tmr = 0;\n            state = epcWrClrWt;\n            break;\n\n       case epcWrClrWt:                                             // 14\n\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                status = {payload:\"update error, please retry\"};\n                flow.set(\"epcCmdState\",\"\")\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = epcWrClr;\n                break;\n            }\n\n//            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;\n                invenCnt = 2;\n                status = {payload:\"tags updated\"};\n                flow.set(\"epcCmdState\",\"\")\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invStrt;\n                break;\n//            }\n\n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                status = {payload:\"tags updated\"};\n                flow.set(\"epcCmdState\",\"\")\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invStrt;\n                break;\n            }\n            \n            if(tmr <= 2)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"clear inverntory time out\");\n            break;\n\n        case runCmdWt:\n            console.debug(\"setConfig\")\n            status = {payload:\"updating configuration\"};\n           \n            runCmd = null;\n            state = inits;\n            break;\n\n        default:\n            console.debug(\"default\")\n            state = inits;\n            console.debug(\"State Error\")\n            break;\n    }\n    \n    context.set(\"stateSav\",state);\n    context.set(\"stateTmr\", tmr); \n    context.set(\"stateWtTm\",wtTm);\n    context.set(\"sidsCmdRsp\",sidsCmdRsp);\n    context.set(\"invenCnt\",invenCnt);\n\n    return [ init,inventory,dspEpcs,selEpc,wrEpc,deSelEpc,runCmd,status ];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nconst inits = 1, invStrt = 2, invWt = 3, invDspAry = 4, invDspWt = 5, epcSel = 6 ;\nconst epcSelWt = 7, gotEpcSetWt = 8, epcWr = 9, epcWrWt = 10, epcDeSel = 11 ;\nconst epcDeSelWt = 12, epcWrClr = 13, epcWrClrWt =14;\n\n\n    context.set(\"stateSav\",inits);\n    context.set(\"runState\",\"stop\");\n    context.set(\"stateTmr\",0);\n    context.set(\"stateWtTm\",0);\n    context.set(\"sidsCmdRsp\",false);\n    context.set(\"invenCnt\",0);\n",
        "finalize": "",
        "x": 700,
        "y": 1180,
        "wires": [
            [
                "3e1be015.5deaa"
            ],
            [
                "994b484b.e689e8"
            ],
            [
                "ad3c7cad.713e2"
            ],
            [
                "ba6d5663.155a08"
            ],
            [
                "75eb7e7b.153ef"
            ],
            [
                "ea7246a.b99f5b8"
            ],
            [
                "701637d2.dbfcd8"
            ],
            [
                "c1f98603.935c38"
            ]
        ]
    },
    {
        "id": "ef6b3006.a918b",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "",
        "func": "const inits = 1, invStrt = 2, invWt = 3, invDspAry = 4, invDspWt = 5, epcPick = 6 ;\nconst epcPickWt = 7, epcInvChrg = 8, epcSelWrWt = 9, epcWrWt = 10, epcDeSelWt = 11, epcWrClrWt = 12;\nconst epcInvClr = 13, epcInvClrWt = 14, epcInvClr1 = 15, epcInvClrWt1 = 16, runCmdWt = 17;\n\nvar state       = context.get(\"stateSav\");\nvar tmr         = context.get(\"stateTmr\");\nvar wtTm        = context.get(\"stateWtTm\");\nvar sidsCmdRsp  = context.get(\"sidsCmdRsp\");\nvar invenCnt    = context.get(\"invenCnt\");\n\n//console.debug(state);\n\nvar init = null;\nvar inventory = null;\nvar dspEpcs = null;\nvar selEpc = null;\nvar wrEpc = null;\nvar deSelEpc = null;\nvar runCmd = null;\nvar status = null;\n\n\n    if(msg.topic === \"SidsCmdRsp\") {\n        console.debug(\"msg.topic \");\n        console.debug(msg.topic);\n        sidsCmdRsp = true;\n    }\n\n    if(msg.topic === \"timer\") {\n        if(msg.payload === true) {\n            tmr++;\n            context.set(\"stateTmr\",tmr)\n//            console.debug(\"timer %d\", tmr);\n        }\n    }\n    \n    if(msg.topic === \"start\") {\n        context.set(\"runState\",\"run\");\n        state = inits;\n    }\n    \n    if(msg.topic === \"stop\"){\n        context.set(\"runState\",\"stop\");\n        state = inits;\n    }\n\n    if(msg.topic === \"step\"){\n        context.set(\"runState\",\"step\");\n    }\n    \n    if(context.get(\"runstate\") === \"stop\")\n        return;\n\n    switch(state) {\n\n        case inits:                                                 // state 1, set out 0, clears all\n            console.debug(\"inits\");\n            status = {payload:\"initializing\"};\n            flow.set(\"epcCmdState\",\"\");\n            state = inits;\n            \n            if(context.get(\"runState\") === \"stop\") {\n                console.debug(\"stop\");\n                break;\n            }\n            \n            state = invStrt;\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = runCMd = status = null;\n            break; \n\n        case invStrt:                                               // 2\n            console.debug(\"invStrt\");\n\n            runF = global.get(\"runFile\");\n            if(runF !== null) {                                     // state 2, state 0,  set out 6, clears 1\n                console.debug(\"runFile\")\n                runCmd = {payload : runF};\n                global.set(\"runFile\",null);\n                state = runCmdWt;\n                break;\n            }\n\n            status = {payload:\"scanning\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            inventory = { payload:\"start inventory\" };\n            tmr = 0;\n            state = invWt;\n            break;\n\n       case invWt:                                                  // 3\n            console.debug(\"invWt\");\n\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                console.debug(\"epcCmdState noStartIndx\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invStrt;\n                break;\n            }\n            \n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast invWt\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invDspAry;\n                break;\n           }\n\n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                console.debug(\"epcCmdState runInventory\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invDspAry;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"run inverntory time out\");\n            break;\n            \n        case invDspAry:                                             // 4\n            console.debug(\"invDspAry\");\n            status = {payload:\"updating screen\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            dspEpcs = { payload:\"dspEpcs\" };\n            tmr = 0;\n            state = invDspWt;\n            break;\n            \n        case invDspWt:                                              // 5\n            console.debug(\"invDspWt\");\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            \n            if(invenCnt !== 0) {\n                console.debug(\"invenCnt %d\",invenCnt);\n                invenCnt--;    \n                tmr = 0;\n                state = invStrt;\n                break;\n            }\n            \n            if(flow.get(\"epcCmdState\")  === \"runDspEpcAry\") {\n                console.debug(\"epcCmdState invDspWt\");\n\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                state = epcPick;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"invDspWt time out\");\n            break;\n\n        case epcPick:                                                // 6, setup for epc check in/out to be selected\n            console.debug(\"epcPick\");\n            status = {payload:\"select tags\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            \n            tmr = 0;\n            state = epcPickWt;\n            break;\n            \n        case epcPickWt:                                              // 7, wait for epc to be selected from dashboard\n            console.debug(\"epcPickWt\");\n\n            runF = global.get(\"runFile\");\n            if(runF !== null) {                                     // if got a command, run it\n                console.debug(\"runCmd\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                runCmd = {payload : runF};\n                global.set(\"runFile\",null);\n                state = runCmdWt;\n                break;\n            }\n\n            if(flow.get(\"epcCmdState\")  === \"gotEpc\") {\n                console.debug(\"epcCmdState gotEpc\");\n                flow.set(\"epcCmdState\",\"\");\n                tmr = 0;\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                inventory = {payload:\"inventory\"};\n                state = epcInvChrg;\n                break;\n            }\n           \n            if(tmr <= 6)                                            // max wait for complete\n                break;\n\n            state = invStrt;\n            console.debug(\"restart inventory\");\n            break;\n \n        case epcInvChrg:\n            console.debug(\"epcInvChrg\");\n\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                console.debug(\"epcCmdState noStartIndx\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = inits;\n                break;\n            }\n            \n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast epcInvChrg\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                selEpc = {payload:\"epcSel\"};\n                state = epcSelWrWt;\n                break;\n           }\n\n\n\n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"epcInvChrg time out\");\n            break;\n\n        case epcSelWrWt:                                            // 8, select epc for write\n            console.debug(\"epcSelWrWt\");\n\n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast epcSelWrWt\")\n                flow.set(\"epcCmdState\",\"\")\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                wrEpc = { payload:\"epcWrWt\" }\n                state = epcWrWt;\n                break;\n           }\n \n            if(flow.get(\"epcCmdState\")  === \"setupEpcWr\") {\n                console.debug(\"epcCmdState setupEpcWr\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                wrEpc = { payload:\"epcWrWt\" }\n                tmr = 0;\n                state = epcWrWt;\n                break;\n            }\n           \n            if(tmr <= 3)                                // max wait for complete\n                break;\n\n            state = invStrt;\n            break;\n\n        case epcWrWt:                                                   // 9\n            console.debug(\"epcWrWt\");\n\n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast epcWrWt\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                deSelEpc = { payload:\"deSelEpc\" }\n                state = epcDeSelWt;\n                break;\n           }\n\n            if(flow.get(\"epcCmdState\")  === \"wrEpc\") {\n                console.debug(\"epcCmdState wrEpc\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcDeSelWt;\n                break;\n            }\n         \n            if(tmr <= 4)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"wrEpc time out\");\n            break;\n\n        case epcDeSelWt:                                                    // 10\n            console.debug(\"epcDeSelWt\")\n            \n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast epcDeSelWt\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr;\n                break;\n            }\n\n            if(flow.get(\"epcCmdState\")  === \"deSelEpc\") {\n                console.debug(\"epcCmdState deSelEpc\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr;\n                break;\n            }\n\n            if(tmr <= 2)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"epcDeSelWt time out\")\n            break;\n\n        case epcInvClr:\n            console.debug(\"clrInv\");\n\n            if(tmr < 1)                                // max wait for complete\n                break;\n                \n            inventory = { payload:\"clear inventory\" };\n            tmr = 0;\n            state = epcInvClrWt;\n            break;\n\n        case epcInvClrWt:\n            console.debug(\"clrInvWt\");\n\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                console.debug(\"epcCmdState noStartIndx1\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr1;\n                break;\n            }\n            \n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast invWt1\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr1;\n                break;\n           }\n\n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                console.debug(\"epcCmdState runInventory\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                tmr = 0;\n                state = epcInvClr1;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"run inverntory time out\");\n            break;\n           \n        case epcInvClr1:\n            console.debug(\"clrInv1\");\n\n            if(tmr < 1)                                // max wait for complete\n                break;\n                \n            inventory = { payload:\"clear inventory1\" };\n            tmr = 0;\n            state = epcInvClrWt1;\n            break;\n\n        case epcInvClrWt1:\n            console.debug(\"clrInvWt1\");\n\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                console.debug(\"epcCmdState noStartIndx\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = inits;\n                break;\n            }\n            \n            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;    \n                console.debug(\"fast invWt\");\n                flow.set(\"epcCmdState\",\"\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = inits;\n                break;\n           }\n\n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                console.debug(\"epcCmdState runInventory\");\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = inits;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"run inverntory time out\");\n            break;\n\n        case runCmdWt:                                                      // 12\n            console.debug(\"setConfig\")\n            status = {payload:\"updating configuration\"};\n           \n            runCmd = null;\n            state = invStrt;\n            invenCnt = 2;\n            break;\n\n        default:\n            console.debug(\"default\")\n            state = inits;\n            console.debug(\"State Error\")\n            break;\n    }\n    \n    context.set(\"stateSav\",state);\n    context.set(\"stateTmr\", tmr); \n    context.set(\"stateWtTm\",wtTm);\n    context.set(\"sidsCmdRsp\",sidsCmdRsp);\n    context.set(\"invenCnt\",invenCnt);\n\n    return [ init,inventory,dspEpcs,selEpc,wrEpc,deSelEpc,runCmd,status ];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nconst inits = 1, invStrt = 2, invWt = 3, invDspAry = 4, invDspWt = 5, epcSel = 6 ;\nconst epcSelWt = 7, gotEpcSetWt = 8, epcWr = 9, epcWrWt = 10, epcDeSel = 11 ;\nconst epcDeSelWt = 12, epcWrClr = 13, epcWrClrWt =14;\n\n\n    context.set(\"stateSav\",inits);\n    context.set(\"runState\",\"stop\");\n    context.set(\"stateTmr\",0);\n    context.set(\"stateWtTm\",0);\n    context.set(\"sidsCmdRsp\",false);\n    context.set(\"invenCnt\",0);\n",
        "finalize": "",
        "x": 460,
        "y": 860,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "8e720caf.a63e8",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "Wr EPC Cmd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"SetVal Tag Op Enable\",\"Command\":1,\"Key\":71,\"Data0\":1},{\"Rem\":\"SetVal Tag Op Write\",\"Command\":1,\"Key\":96,\"Data0\":2},{\"Rem\":\"SetVal Wr Bank EPC\",\"Command\":1,\"Key\":102,\"Data0\":1},{\"Rem\":\"SetVal Wr Word Pointer\",\"Command\":1,\"Key\":103,\"Data0\":1},{\"Rem\":\"SetVal Wr Word Count\",\"Command\":1,\"Key\":104,\"Data0\":7},{\"Rem\":\"Set Write Data 0\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":0,\"Data2\":12288},{\"Rem\":\"Set Write Data 1\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":1,\"Data2\":12288},{\"Rem\":\"Set Write Data 2\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":2,\"Data2\":12288},{\"Rem\":\"Set Write Data 3\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":3,\"Data2\":12288},{\"Rem\":\"Set Write Data 4\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":4,\"Data2\":12288},{\"Rem\":\"Set Write Data 5\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":5,\"Data2\":12288},{\"Rem\":\"Set Write Data 6\",\"Command\":4,\"Key\":105,\"Data0\":0,\"Data1\":6,\"Data2\":12288},{\"Rem\":\"SetVal Tag Op Enable\",\"Command\":1,\"Key\":71,\"Data0\":1}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "7ffddb1a.e5bae4",
        "type": "debug",
        "z": "c09aa471.ec0fd8",
        "name": "EPC wr value",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 740,
        "wires": []
    },
    {
        "id": "cb523f56.8bdb1",
        "type": "change",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "JSC tag select only",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"Project\":\"Data Center\",\"Rev\":1,\"Commands\":[{\"Rem\":\"E_IPJ_KEY_SELECT_ENABLE, true\",\"Command\":4,\"Key\":80,\"Data0\":0,\"Data1\":0,\"Data2\":1},{\"Rem\":\"E_IPJ_KEY_SELECT_TARGET, E_IPJ_SELECT_TARGET_SL_FLAG\",\"Command\":4,\"Key\":81,\"Data0\":0,\"Data1\":0,\"Data2\":4},{\"Rem\":\"E_IPJ_KEY_SELECT_ACTION, E_IPJ_SELECT_ACTION_ASLINVA_DSLINVB\",\"Command\":4,\"Key\":82,\"Data0\":0,\"Data1\":0,\"Data2\":0},{\"Rem\":\"E_IPJ_KEY_SELECT_MEM_BANK, E_IPJ_MEM_BANK_EPC\",\"Command\":4,\"Key\":83,\"Data0\":0,\"Data1\":0,\"Data2\":1},{\"Rem\":\"E_IPJ_KEY_SELECT_POINTER, 0x20\",\"Command\":4,\"Key\":84,\"Data0\":0,\"Data1\":0,\"Data2\":32},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_LENGTH, 96\",\"Command\":4,\"Key\":85,\"Data0\":0,\"Data1\":0,\"Data2\":96},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0xE280\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":0,\"Data2\":57984},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0x1160\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":1,\"Data2\":4448},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0x6001\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":2,\"Data2\":24577},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0x0205\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":3,\"Data2\":517},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0x0792\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":4,\"Data2\":1938},{\"Rem\":\"E_IPJ_KEY_SELECT_MASK_VALUE, 0, 0, 0xD233\",\"Command\":4,\"Key\":86,\"Data0\":0,\"Data1\":5,\"Data2\":53811},{\"Rem\":\"E_IPJ_KEY_INVENTORY_SELECT_FLAG, E_IPJ_INVENTORY_SELECT_FLAG_SL\",\"Command\":1,\"Key\":65,\"Data0\":3}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "d368b224.a0ae1",
        "type": "exec",
        "z": "1b9fe7eb.6af498",
        "command": "amixer",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1150,
        "y": 880,
        "wires": [
            [
                "6377a55d.a5ec9c"
            ],
            [
                "9d6d85c1.664e18"
            ],
            [
                "4c2c6d65.203934"
            ]
        ]
    },
    {
        "id": "1e9bc3a8.8ea0cc",
        "type": "function",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "func": "    var strIn = msg.payload;\n    let objects = [];\n    \n    global.set(\"alarmVol\",msg.payload);\n\n    objects.push('sset PCM,0 ' + strIn +'%');\n//    objects.push('set Master ' + strIn +'%');\n\n    msg.payload=objects;\n\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n    if(global.get(\"volume\") === undefined)\n        global.set(\"volume\",50);\n        \n    var myVolume = global.get(\"volume\");\n    \n    if(myVolume > 100)\n    myVolume = 100;\n    \n    if(myVolume < 50)\n    myVolume = 50;\n    \n    flow.set(\"volume\",myVolume);\n",
        "finalize": "",
        "x": 980,
        "y": 880,
        "wires": [
            [
                "d368b224.a0ae1",
                "5b6ee715.035f18"
            ]
        ]
    },
    {
        "id": "6377a55d.a5ec9c",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "std out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 840,
        "wires": []
    },
    {
        "id": "9d6d85c1.664e18",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "err out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 880,
        "wires": []
    },
    {
        "id": "4c2c6d65.203934",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "ret code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 920,
        "wires": []
    },
    {
        "id": "5b6ee715.035f18",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "amixer in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 800,
        "wires": []
    },
    {
        "id": "daf182be.77da6",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 900,
        "y": 820,
        "wires": [
            [
                "d368b224.a0ae1"
            ]
        ]
    },
    {
        "id": "9136538e.228ba",
        "type": "exec",
        "z": "1b9fe7eb.6af498",
        "command": "amixer set Master 50%",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1160,
        "y": 1060,
        "wires": [
            [
                "1bb57241.cb913e"
            ],
            [
                "7874abe6.772a24"
            ],
            [
                "97a807e9.3c3758"
            ]
        ]
    },
    {
        "id": "1bb57241.cb913e",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "std out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7874abe6.772a24",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "err out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 1060,
        "wires": []
    },
    {
        "id": "97a807e9.3c3758",
        "type": "debug",
        "z": "1b9fe7eb.6af498",
        "name": "ret code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1100,
        "wires": []
    },
    {
        "id": "c60c0735.a8bde8",
        "type": "inject",
        "z": "1b9fe7eb.6af498",
        "name": "amixer set Master 50%",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "set Master 50%",
        "payloadType": "str",
        "x": 920,
        "y": 1060,
        "wires": [
            [
                "9136538e.228ba"
            ]
        ]
    },
    {
        "id": "fcc10a2b.eabfd8",
        "type": "speakerpi-output",
        "z": "1b9fe7eb.6af498",
        "choose": "filebased",
        "filename": "",
        "channels": "1",
        "bitdepth": "16",
        "samplerate": "22050",
        "name": "",
        "x": 980,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "1d3b3a4.ed8f8c6",
        "type": "function",
        "z": "4319fbc9.0bc754",
        "name": "",
        "func": "const init = 0, delDatFile = 1, invStrt = 2, invWt = 3, invParse = 4, invAlarm = 5, setConfig = 6;\n\nvar state = context.get(\"stateSav\");\nvar tmr   = context.get(\"stateTmr\");\nvar wtTm  = context.get(\"stateWtTm\");\nvar runF  = null;\n\n//console.debug(state);\n\nvar msg0 = null;\nvar msg1 = null;\nvar msg2 = null;\nvar msg3 = null;\nvar msg4 = null;\nvar msg5 = null;\nvar msg6 = null;\n\n    tmr++;\n//    console.debug(\"tmr %d time %s\",tmr, msg.payload);\n\n    if(msg.payload === \"stop\")\n        context.set(\"runState\",\"stop\");\n    \n    if(msg.payload === \"start\")\n        context.set(\"runState\",\"start\");\n    \n \n    switch(state) {\n\n        case init:                                                  // state 0, set out 0, clears all\n            console.debug(\"init\");\n            if(context.get(\"runState\") === \"stop\")\n                break;\n                \n            state = delDatFile;\n            msg0 === msg1 === msg2 === msg3 === msg4 === msg5 === null;\n            msg0 = {payload:\"delete old file\"};\n            break; \n\n        case delDatFile:                                            // state 1, set out 1, clears 0\n            console.debug(\"invStrt\");\n            msg0 = null;\n            state = invStrt;\n            msg1 = { payload:\"start inventory\" };\n            global.set(\"sidBuf\",null)\n            break; \n\n        case invStrt:\n            console.debug(\"invStrt\");\n            msg1 = null;\n            \n            runF = global.get(\"runFile\")\n            if(runF !== null) {                                     // state 2, state 0,  set out 6, clears 1\n                msg6 = {payload : runF};\n                global.set(\"runFile\",null);    \n                state = setConfig;\n            }else{\n                switch(global.get(\"gpioOp\")){\n                    case 0:    \n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpioX\" };      // run inventory, only\n                        state = invWt;\n                        break;\n                    case 1:\n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio0-hi\" };  // set GPIO 0 hi, run inventory\n                        state = invWt;\n                        break;\n                    case 2:    \n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio1-hi\" };  // set GPIO 1 hi, run inventory\n                        state = invWt;\n                        break;\n                    case 3:    \n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio3-hi\" };  //  set GPIO 0,1 hi, run inventory\n                        state = invWt;\n                        break;\n                    case 5:\n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio0-lo\" };  //  set GPIO 0 lo, run inventory\n                        state = invWt;\n                        break;\n                    case 6:    \n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio1-lo\" };  //  set GPIO 1 lo, run inventory\n                        state = invWt;\n                        break;\n                    case 7:    \n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio3-lo\" };  //  set GPIO 0,1 lo, run inventory\n                        state = invWt;\n                        break;\n                    case 8:\n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio0-pulse\" };  //  set GPIO 0 lo, run inventory\n                        state = invWt;\n                        break;\n                    case 9:    \n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio1-pulse\" };  //  set GPIO 1 lo, run inventory\n                        state = invWt;\n                        break;\n                    case 10:    \n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio3-pulse\" };  //  set GPIO 0,1 lo, run inventory\n                        state = invWt;\n                        break;\n                    default:\n                        global.set(\"gpioOp\",0)\n                        msg2 = { payload:\"run /home/pi/SIDS/inventoryGpio1\" };  // state 2, sets out 2, clears 1\n                        state = invWt;\n                        break;\n                }\n//                msg2 = { payload:\"run /home/pi/SIDS/inventory2\" };  // state 2, sets out 2, clears 1\n//                state = invWt;\n            }\n            break;    \n\n        case invWt:                                                 // state 3, sets out 3, clears 2    \n            console.debug(\"invWt\");\n            msg2 = null;\n            msg3 = { payload:\"inventory wait\" };\n            state = invParse;\n            break;  \n            \n        case invParse:                                              // state 4, sets out 4, clears 3\n            console.debug(\"invParse\");\n            msg3 = null;\n            msg4 = { payload:\"parse data\" };\n            state = invAlarm;\n           break; \n            \n        case invAlarm:                                              // state 5, sets out 5, clears 4\n            console.debug(\"invAlarm\");\n            msg4 = null;\n            msg5 = { payload:\"restart\" };\n            state = init;\n            break;    \n\n        case setConfig:                                             // state 6, clears out 6\n            console.debug(\"setConfig\");\n            msg6 = { payload : \"run cmd file\"};\n            state = init;\n            break; \n\n\n        default:\n    }\n    \n    context.set(\"stateSav\",state);\n    context.set(\"stateTmr\", tmr); \n    context.set(\"stateWtTm\",wtTm);\n\n \n    return [ msg0, msg1, msg2 , msg3, msg4, msg5, msg6 ];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nconst init = 0, delDatFile = 1, invStrt = 2, invWt = 3, invParse = 4, invAlarm = 5, setConfig = 6;\n    context.set(\"stateSav\",init);\n    context.set(\"runState\",\"start\");\n    context.set(\"stateTmr\",0);\n    context.set(\"stateWtTm\",0);\n    global.set(\"runFile\",null);\n    global.set(\"gpioOp\",0);\n    ",
        "finalize": "",
        "x": 400,
        "y": 540,
        "wires": [
            [
                "2f453298.79877e",
                "c963bbfb.e23f38",
                "c70ca906.1e33d8",
                "475b5b0d.345c84",
                "e18feb73.88b608"
            ],
            [
                "475b5b0d.345c84",
                "e18feb73.88b608"
            ],
            [
                "d138270f.f1cbc8",
                "960f45b6.a641b8",
                "e18feb73.88b608"
            ],
            [
                "90093890.f65358",
                "5a7bd0fe.57a72",
                "e18feb73.88b608"
            ],
            [
                "475b5b0d.345c84",
                "8cb5ed7f.2aa2a",
                "e18feb73.88b608"
            ],
            [
                "475b5b0d.345c84",
                "e18feb73.88b608"
            ],
            [
                "960f45b6.a641b8",
                "d138270f.f1cbc8",
                "e18feb73.88b608"
            ]
        ]
    },
    {
        "id": "4b4862f6.319fac",
        "type": "function",
        "z": "c09aa471.ec0fd8",
        "d": true,
        "name": "",
        "func": "const inits = 1, invStrt = 2, invWt = 3, invDspAry = 4, invDspWt = 5, epcSel = 6 ;\nconst epcSelWt = 7, gotEpcSetWt = 8, epcWr = 9, epcWrWt = 10, epcDeSel = 11 ;\nconst epcDeSelWt = 12, epcWrClr = 13, epcWrClrWt = 14, runCmdWt = 15;\n\nvar state       = context.get(\"stateSav\");\nvar tmr         = context.get(\"stateTmr\");\nvar wtTm        = context.get(\"stateWtTm\");\nvar sidsCmdRsp  = context.get(\"sidsCmdRsp\");\nvar invenCnt    = context.get(\"invenCnt\");\n\n//console.debug(state);\n\nvar init = null;\nvar inventory = null;\nvar dspEpcs = null;\nvar selEpc = null;\nvar wrEpc = null;\nvar deSelEpc = null;\nvar runCmd = null;\nvar status = null;\n\n\n    if(msg.topic === \"SidsCmdRsp\") {\n        sidsCmdRsp = true;\n    }\n\n    if(msg.topic === \"timer\") {\n        if(msg.payload === true) {\n            tmr++;\n            context.set(\"stateTmr\",tmr)\n//            console.debug(\"timer %d\", tmr);\n        }\n    }\n    \n    if(msg.topic === \"start\") {\n        context.set(\"runState\",\"run\");\n        state = inits;\n    }\n    \n    if(msg.topic === \"stop\"){\n        context.set(\"runState\",\"stop\");\n        state = inits;\n    }\n\n    if(context.get(\"runstate\") === \"stop\")\n        return;\n\n    switch(state) {\n\n        case inits:                                                 // state 1, set out 0, clears all\n            console.debug(\"inits\")\n            status = {payload:\"initializing\"};\n            flow.set(\"epcCmdState\",\"\");\n            state = inits;\n            \n            if(context.get(\"runState\") === \"stop\")\n                break;\n                \n            state = invStrt;\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = runCMd = status = null;\n            break; \n\n        case invStrt:                                               // 2\n\n            runF = global.get(\"runFile\")\n            \n            if(runF !== null) {                                     // state 2, state 0,  set out 6, clears 1\n                runCmd = {payload : runF};\n                global.set(\"runFile\",null);\n                console.debug(runCmd);\n                console.debug(runF);\n                state = runCmdWt;\n                break;\n            }\n\n            console.debug(\"invStrt\")\n            status = {payload:\"scanning\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            inventory = { payload:\"start inventory\" };\n            tmr = 0;\n            state = invWt;\n            break;\n\n       case invWt:                                                  // 3\n            console.debug(\"invWt\")\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                flow.set(\"epcCmdState\",\"\")\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invStrt;\n                break;\n            }\n            \n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                dspEpcs = { payload:\"dspEpcs\" };  //!!!!\n                \n                state = invDspAry;\n                break;\n            }\n            \n            if(tmr <= 2)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"run inverntory time out\");\n            break;\n            \n        case invDspAry:                                             // 4\n            console.debug(\"invDspAry\")\n            status = {payload:\"updating screen\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            dspEpcs = { payload:\"dspEpcs\" };\n            tmr = 0;\n            state = invDspWt;\n            break;\n            \n        case invDspWt:                                              // 5\n            console.debug(\"invDspWt\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            \n            if(invenCnt !== 0) {\n                invenCnt--;    \n                tmr = 0;\n                state = invStrt;\n                break;\n            }\n            \n            if(flow.get(\"epcCmdState\")  === \"runDspEpcAry\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                state = epcSel;\n                break;\n            }\n            \n            if(tmr <= 8)                                            // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"runDspEpcAry time out\");\n            break;\n\n        case epcSel:                                                // 6, setup for epc check in/out to be selected\n            console.debug(\"epcSel\")\n            status = {payload:\"select tags\"};\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            tmr = 0;\n//            state = epcSelWt;\n            state = epcWr;\n            break;\n// skip select            \n        case epcSelWt:                                              // 7, wait for epc to be selected\n            console.debug(\"epcSelWt\")\n            if(flow.get(\"epcCmdState\")  === \"gotEpc\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                selEpc = {payload:\"epcSel\"};\n                state = gotEpcSetWt;\n                break;\n            }\n           \n            if(tmr <= 10)                                           // max wait for complete\n                break;\n\n            state = invStrt;\n            console.debug(\"restart inventory\");\n            break;\n \n        case gotEpcSetWt:                                           // 8\n            console.debug(\"gotEpcSetWt\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            \n            if(flow.get(\"epcCmdState\")  === \"setupEpcWr\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                state = epcWr;\n                break;\n            }\n           \n            if(tmr <= 10)                                // max wait for complete\n                break;\n\n            state = invStrt;\n            console.debug(\"epcSetWt timeout restart inventory\");\n            break;\n\n        case epcWr:                                                 // 9\n            console.debug(\"epcWr\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            wrEpc = { payload:\"wrEpc\" };\n            tmr = 0;\n            state = epcWrWt;\n            break;\n \n        case epcWrWt:                                               // 10\n            console.debug(\"epcWrWt\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            if(flow.get(\"epcCmdState\")  === \"wrEpc\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n// !!!               state = epcDeSel;\n                state = invStrt;\n                break;\n            }\n\n            if(tmr <= 2)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"wrEpc time out\")\n            break;\n \n        case epcDeSel:                                              // 11\n            console.debug(\"epcDeSel\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            deSelEpc = { payload:\"deSelEpc\" };\n            tmr = 0;\n            state = epcDeSelWt;\n            break;\n \n        case epcDeSelWt:                                            // 12\n            console.debug(\"epcDeSelWt\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            if(flow.get(\"epcCmdState\")  === \"deSelEpc\") {\n                flow.set(\"epcCmdState\",\"\")\n                tmr = 0;\n                state = epcWrClr;\n                break;\n            }\n\n            if(tmr <= 2)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"deSelEpc time out\")\n            break;\n\n\n        case epcWrClr:                                              // 13\n            console.debug(\"epcWrClr\")\n            init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n            tmr = 0;\n            state = epcWrClrWt;\n            break;\n\n       case epcWrClrWt:                                             // 14\n\n            if(flow.get(\"epcCmdState\")  === \"noStartIndx\") {\n                status = {payload:\"update error, please retry\"};\n                flow.set(\"epcCmdState\",\"\")\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = epcWrClr;\n                break;\n            }\n\n//            if(sidsCmdRsp === true) {\n                sidsCmdRsp = false;\n                invenCnt = 2;\n                status = {payload:\"tags updated\"};\n                flow.set(\"epcCmdState\",\"\")\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invStrt;\n                break;\n//            }\n\n            if(flow.get(\"epcCmdState\")  === \"runInventory\") {\n                status = {payload:\"tags updated\"};\n                flow.set(\"epcCmdState\",\"\")\n                init = inventory = dspEpcs = selEpc = wrEpc = deSelEpc = null;\n                state = invStrt;\n                break;\n            }\n            \n            if(tmr <= 2)                                // max wait for complete\n                break;\n\n            state = inits;\n            console.debug(\"clear inverntory time out\");\n            break;\n\n        case runCmdWt:\n            console.debug(\"setConfig\")\n            status = {payload:\"updating configuration\"};\n           \n            runCmd = null;\n            state = inits;\n            break;\n\n        default:\n            console.debug(\"default\")\n            state = inits;\n            console.debug(\"State Error\")\n            break;\n    }\n    \n    context.set(\"stateSav\",state);\n    context.set(\"stateTmr\", tmr); \n    context.set(\"stateWtTm\",wtTm);\n    context.set(\"sidsCmdRsp\",sidsCmdRsp);\n    context.set(\"invenCnt\",invenCnt);\n\n    return [ init,inventory,dspEpcs,selEpc,wrEpc,deSelEpc,runCmd,status ];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nconst inits = 1, invStrt = 2, invWt = 3, invDspAry = 4, invDspWt = 5, epcSel = 6 ;\nconst epcSelWt = 7, gotEpcSetWt = 8, epcWr = 9, epcWrWt = 10, epcDeSel = 11 ;\nconst epcDeSelWt = 12, epcWrClr = 13, epcWrClrWt =14;\n\n\n    context.set(\"stateSav\",inits);\n    context.set(\"runState\",\"stop\");\n    context.set(\"stateTmr\",0);\n    context.set(\"stateWtTm\",0);\n    context.set(\"sidsCmdRsp\",false);\n    context.set(\"invenCnt\",0);\n",
        "finalize": "",
        "x": 700,
        "y": 860,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    }
]